namespace pxsim.visuals {

    const MB_STYLE = `
        .simEventBtn {
            font-size: 1.4rem;
            font-weight: 900;
            padding: 1.25rem 1.75rem;
            border-radius: 3.5rem / 100%;
            border: 0;
            cursor: pointer;
            text-transform: uppercase;
            letter-spacing: 0.07em;
            color: white;
            background: #42c9c9;
            font-family: 'Roboto Mono', monospace;
        }
        button:hover {
            opacity: .7;
        }
        button:active {
            background: #e6007d;
        }

        svg.sim {
            margin-bottom:1em;
        }
        svg.sim.grayscale {
            -moz-filter: grayscale(1);
            -webkit-filter: grayscale(1);
            filter: grayscale(1);
        }
        .sim-button-group {
            cursor: pointer;
        }
        .sim-head .sim-button {
            pointer-events: unset;
        }
        .sim-button {
            pointer-events: none;
        }
        .sim-board, .sim-display, sim-button {
            fill: #111;
        }
        .sim-button-outer:hover {
            stroke:grey;
            stroke-width: 3px;
        }
        .sim-button-nut {
            fill:#704A4A;
            pointer-events:none;
        }
        .sim-button-nut:hover {
            stroke:1px solid #704A4A;
        }
        .sim-pin {
            cursor: pointer;
        }
        .sim-pin:hover {
            stroke:#D4AF37;
            stroke-width:2px;
        }
        .sim-pin-touch.touched:hover {
            stroke:darkorange;
        }
        .sim-led-back:hover {
            stroke:#fff;
            stroke-width:3px;
        }
        .sim-led:hover {
            stroke:#ff7f7f;
            stroke-width:3px;
        }

        .sim-systemled {
            fill:#333;
            stroke:#555;
            stroke-width: 1px;
        }

        .sim-light-level-button {
            stroke:#ccc;
            stroke-width: 2px;
        }

        .sim-antenna {
            fill-opacity:0.0;
            stroke:#555;
            stroke-width: 4px;
        }

        .sim-text {
            font-family: 'Roboto Mono', monospace;
            font-size:14px;
            fill:#fff;
            pointer-events: none; user-select: none;
        }

        .sim-text-pin {
            font-family: 'Roboto Mono', monospace;
            pointer-events: none; user-select: none;
            fill:#000;
            font-size:24px;
            stroke:#fff;
            stroke-alignment: outside;
            paint-order: stroke;
            stroke-width: 3px;
        }

        .sim-thermometer {
            stroke:#aaa;
            stroke-width: 2px;
        }

        .inverted {
            fill:#000;
            stroke:#fff;
            stroke-alignment: outside;
            paint-order: stroke;
            stroke-width: 3px;
        }
        .big {
            font-size:24px;
            font-weight: bold;
        }
        .centered {
            transform: translateX(-1.5ch);
            text-align: center;
        }

        /* animations */
        .sim-theme-glow {
            animation-name: sim-theme-glow-animation;
            animation-timing-function: ease-in-out;
            animation-direction: alternate;
            animation-iteration-count: infinite;
            animation-duration: 1.25s;
        }
        @keyframes sim-theme-glow-animation {
            from { opacity: 1; }
            to   { opacity: 0.75; }
        }

        .sim-flash {
            animation-name: sim-flash-animation;
            animation-duration: 0.1s;
        }

        @keyframes sim-flash-animation {
            from { fill: yellow; }
            to   { fill: default; }
        }

        .sim-flash-stroke {
            animation-name: sim-flash-stroke-animation;
            animation-duration: 0.4s;
            animation-timing-function: ease-in;
        }

        @keyframes sim-flash-stroke-animation {
            from { stroke: yellow; }
            to   { stroke: default; }
        }

        /* wireframe */
        .sim-wireframe * {
            fill: none;
            stroke: black;
        }
        .sim-wireframe .sim-display,
        .sim-wireframe .sim-led,
        .sim-wireframe .sim-led-back,
        .sim-wireframe .sim-head,
        .sim-wireframe .sim-theme,
        .sim-wireframe .sim-button-group,
        .sim-wireframe .sim-button-label,
        .sim-wireframe .sim-button,
        .sim-wireframe .sim-text-pin
        {
            visibility: hidden;
        }
        .sim-wireframe .sim-label
        {
            stroke: none;
            fill: #777;
        }
        .sim-label, .sim-button-label {
            fill: #000;
        }
        .sim-wireframe .sim-board {
            stroke-width: 2px;
        }
        *:focus {
            outline: none;
        }
        *:focus .sim-button-outer,
        .sim-pin:focus,
        .sim-thermometer:focus,
        .sim-shake:focus,
        .sim-light-level-button:focus {
            stroke: #4D90FE;
            stroke-width: 5px !important;
        }
        .no-drag, .sim-text, .sim-text-pin {
            user-drag: none;
            user-select: none;
            -moz-user-select: none;
            -webkit-user-drag: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }

        .shake_animation {
            animation: shake 0.42s cubic-bezier(.36,.07,.19,.97) both;
            transform: translate3d(0, 0, 0);
            backface-visibility: hidden;
        }

        @keyframes shake {
            10%, 90% {
              transform: translate3d(-1px, 0, 0);
            }
            
            20%, 80% {
              transform: translate3d(2px, 0, 0);
            }
          
            30%, 50%, 70% {
              transform: translate3d(-4px, 0, 0);
            }
          
            40%, 60% {
              transform: translate3d(4px, 0, 0);
            }
          }
    `;

	// const BOARD_SVG = pxsim.svg;

    const BOARD_SVG_HEAD = `<?xml version="1.0" encoding="utf-8"?>
    <svg version="1.1" id="calliopemini" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px"
         y="0px" viewBox="0 0 530 630" style="enable-background:new 0 0 530 630;" xml:space="preserve">
    <style type="text/css">
        .st0{fill:#044854;}
        .st1{fill:none;stroke:#FFFFFF;stroke-width:1.2;stroke-miterlimit:10;}
        .st2{fill:#FFFFFF;}
        .st3{fill:#F6C426;}
        .st4{fill:#1D1D21;}
        .st5{opacity:0.9;}
        .st6{fill-rule:evenodd;clip-rule:evenodd;fill:#FFFFFF;}
        .st7{fill:#C77C11;}
        .st8{fill:#FFD700;}
        .st9{fill-rule:evenodd;clip-rule:evenodd;fill:#4D4E51;}
        .st10{fill:#B4B5B5;}
        .st11{fill-rule:evenodd;clip-rule:evenodd;fill:#1D1D21;}
        .st12{display:none;}
        .st13{display:inline;fill:#6B6D6D;}
        .st14{opacity:0.7;fill:#48525F;enable-background:new    ;}
        .st15{opacity:0.19;fill:#FFFFFF;}
        .st16{fill-rule:evenodd;clip-rule:evenodd;fill:#FFD700;}
        .st17{fill:#C1C5C6;}
        .st18{fill:#D3CCA5;}
        .st19{fill:#E6E2C2;}
        .st20{fill:#B6B083;}
        .st21{fill:#C8CCCF;}
        .st22{fill:#585959;}
        .st23{fill:#D2CAA4;}
        .st24{fill:#E5E0C0;}
        .st25{fill:#C43B3A;}
        .st26{fill:#3AA5C6;}
        .st27{fill:none;}
    </style>`;
    const BOARD_SVG_BOTTOM = `<g id="all">
	<g id="Batterie">
		<polygon class="st17" points="427.2,316.3 425.1,319 424.7,318.7 424,318.2 423.6,317.8 422.8,317.3 422.4,316.9 422.4,316.9 
			422,316.6 421.9,316.5 413.4,309.9 413.4,309.9 413.4,309.9 413.3,309.8 413.3,309.8 411.7,307.7 411.7,307.6 412.9,306.1 
			412.9,306.1 415.4,307.2 415.5,307.2 415.5,307.3 423.2,313.3 424,313.9 424.1,314 424.3,314.1 424.4,314.2 424.5,314.3 
			424.9,314.6 425.7,315.2 426.1,315.5 426.8,316 		"/>
		<polygon class="st17" points="418.8,327 416.7,329.7 416.3,329.4 415.7,328.9 415.2,328.5 414.5,328 414.1,327.6 413.7,327.3 
			413.6,327.2 405.1,320.6 405.1,320.6 405,320.6 405,320.5 403.4,318.3 403.3,318.3 404.5,316.8 404.6,316.8 407,317.9 
			407.2,317.9 415.6,324.5 415.8,324.6 415.9,324.8 416.1,324.9 416.2,325 416.6,325.3 417.3,325.8 417.8,326.2 418.4,326.7 		"/>
		<polygon class="st18" points="425.9,337.3 425.9,337.3 423.7,340.1 420.5,337.6 418.5,340.1 412.4,335.3 414.4,332.8 416.5,330 
			422.7,334.8 		"/>
		<polygon class="st18" points="438.9,320.6 436.7,323.4 433.5,320.9 427.4,316.1 429.6,313.3 431.6,310.8 437.7,315.6 435.7,318.1 
					"/>
		<polygon class="st18" points="408.8,339.8 405.5,344.1 396.9,337.5 400.3,333.2 		"/>
		<polygon class="st18" points="438.4,301.9 435.1,306.2 426.5,299.5 429.9,295.3 		"/>
		<polygon class="st19" points="468.4,329.6 466.7,331.8 464.2,335 463.6,335.8 461.6,338.3 455.3,346.5 452.7,349.7 446.4,357.8 
			444.4,360.3 443.8,361.1 441.3,364.3 439.6,366.5 439.2,366.1 438.5,365.6 435.3,363.1 435.3,363.1 433.2,365.8 421.5,356.6 
			408.6,346.6 405.5,344.1 408.8,339.8 412.4,335.3 418.5,340.1 421.7,342.6 433.7,352 435.7,349.5 437.9,346.7 432.7,342.6 
			425.9,337.3 422.7,334.8 416.5,330 416.7,329.7 418.8,327 425.1,319 427.2,316.3 427.4,316.1 433.5,320.9 436.7,323.4 
			448.7,332.8 450.9,330 452.9,327.4 440.9,318 437.7,315.6 431.6,310.8 435.1,306.2 438.4,301.9 441.6,304.4 454.5,314.5 
			466.2,323.6 464.1,326.3 464.1,326.3 467.3,328.8 468,329.3 		"/>
		<polygon class="st20" points="452.9,327.4 450.9,330 448.7,332.8 436.7,323.4 436.7,323.4 438.9,320.6 435.7,318.1 437.7,315.6 
			440.9,318 		"/>
		<polygon class="st20" points="437.9,346.7 435.7,349.5 433.7,352 421.7,342.6 418.5,340.1 420.5,337.6 423.7,340.1 425.9,337.3 
			432.7,342.6 		"/>
	</g>
	<g id="USB-C_Vorne">
		<g id="Loetpads">
			<rect x="284.9" y="99" class="st21" width="1.4" height="4.8"/>
			<rect x="281.2" y="99" class="st21" width="1.4" height="4.8"/>
			<rect x="279.5" y="99" class="st21" width="1.3" height="4.8"/>
			<rect x="275.9" y="99" class="st21" width="1.3" height="4.8"/>
			<rect x="286.6" y="99" class="st21" width="1.4" height="4.8"/>
			<rect x="272.5" y="99" class="st21" width="1.4" height="4.8"/>
			<rect x="269.1" y="99" class="st21" width="1.4" height="4.8"/>
			<rect x="265.8" y="99" class="st21" width="1.3" height="4.8"/>
			<rect x="262.4" y="99" class="st21" width="1.4" height="4.8"/>
			<rect x="259" y="99" class="st21" width="1.4" height="4.8"/>
			<rect x="255.6" y="99" class="st21" width="1.4" height="4.8"/>
			<rect x="252.2" y="99" class="st21" width="1.3" height="4.8"/>
			<rect x="248.7" y="99" class="st21" width="1.4" height="4.8"/>
			<rect x="247" y="99" class="st21" width="1.4" height="4.8"/>
			<rect x="243.2" y="99" class="st21" width="1.4" height="4.8"/>
			<rect x="241.5" y="99" class="st21" width="1.4" height="4.8"/>
		</g>
		<rect id="Bruecke_unten_links" x="225.7" y="93.6" class="st10" width="8.8" height="5.4"/>
		<rect id="Brücke_unten_rechts" x="295" y="93.6" class="st10" width="8.8" height="5.4"/>
		<path id="USB" class="st17" d="M295,55v10.1l0,0V99h-10.9
			c-0.1,0-0.3,0-0.4,0s-0.2,0-0.4-0.1c-0.1,0-0.3-0.1-0.4-0.2s-0.2-0.1-0.3-0.2c-0.1-0.1-0.2-0.2-0.2-0.3c-0.2-0.3-0.4-0.7-0.4-1.1
			v-3.7c0-0.6-0.5-1-1-1h-8.1c-0.5,0-1,0.5-1,1v0.5c0,0.3,0.1,0.5,0.3,0.7l0,0h0.1l0.2,0.1l0.4,0.1h1.7V99h-19.7v-4.2h1.7
			c0.3,0,0.5-0.1,0.7-0.2c0,0,0.1-0.1,0.1-0.2c0.1-0.1,0.1-0.2,0.1-0.3c0-0.1,0.1-0.2,0.1-0.3v-0.5c0-0.6-0.5-1-1-1h-8.1
			c-0.6,0-1,0.5-1,1V97c0,0.4-0.1,0.8-0.4,1.1c0,0.1-0.1,0.2-0.2,0.3c-0.1,0.1-0.2,0.2-0.3,0.2c-0.1,0.1-0.2,0.1-0.4,0.2
			c-0.1,0-0.2,0.1-0.4,0.1c-0.1,0-0.3,0-0.4,0h-10.9V65.1l0,0V55h51.9c4.2,0,7.7,0,7.7,0H295z"/>
		<path class="st10" d="M303.9,65.1v2.4h-1.7
			c-0.6,0-1,0.5-1,1v1.3c0,0.6,0.5,1,1,1h1.7v2.4H295v-8.1C295,65.1,303.9,65.1,303.9,65.1z"/>
		<path class="st10" d="M234.5,65.1v8.1h-8.8v-2.4
			h1.7c0.5,0,1-0.5,1-1v-1.3c0-0.6-0.5-1-1-1h-1.7v-2.4C225.7,65.1,234.5,65.1,234.5,65.1z"/>
		<path class="st10" d="M256.8,86.8v2c0,0.4-0.3,0.7-0.7,0.7h-6.9c-0.4,0-0.7-0.3-0.7-0.7v-2c0-0.4,0.3-0.7,0.7-0.7h6.9
			C256.5,86.1,256.8,86.4,256.8,86.8z"/>
		<path class="st10" d="M280.9,86.8v2c0,0.4-0.3,0.7-0.7,0.7h-6.9c-0.4,0-0.7-0.3-0.7-0.7v-2c0-0.4,0.3-0.7,0.7-0.7h6.9
			C280.6,86.1,280.9,86.4,280.9,86.8z"/>
		<path class="st22" d="M284.1,99h-9.5v-4.2h-1.7l-0.4-0.1l-0.2-0.1h-0.1l0,0c-0.2-0.2-0.3-0.5-0.3-0.7v-0.5c0-0.6,0.5-1,1-1h8.1
			c0.6,0,1,0.5,1,1V97c0,0.4,0.1,0.8,0.4,1.1c0,0.1,0.1,0.2,0.2,0.3c0.1,0.1,0.2,0.2,0.3,0.2c0.1,0.1,0.2,0.1,0.4,0.2
			c0.1,0.1,0.2,0.1,0.4,0.1C283.8,99,284,99,284.1,99z"/>
		<path class="st22" d="M257.6,93.2v0.5c0,0.1,0,0.2-0.1,0.3c0,0.1-0.1,0.2-0.1,0.3c0,0.1-0.1,0.1-0.1,0.2c-0.2,0.1-0.4,0.2-0.7,0.2
			h-1.7V99h-9.5c0.1,0,0.3,0,0.4,0c0.1,0,0.2-0.1,0.4-0.1c0.1,0,0.2-0.1,0.4-0.2c0.1-0.1,0.2-0.1,0.3-0.2s0.2-0.2,0.2-0.3
			c0.2-0.3,0.4-0.7,0.4-1.1v-3.7c0-0.6,0.5-1,1-1h8.1C257.1,92.2,257.6,92.7,257.6,93.2z"/>
	</g>
	<g id="Reset-Taste">
			<path class="st22" d="M322.1,59.9L322.1,59.9l-0.2,0.2l-7.6,7.6l-0.2,0.2L314,68l0,0v-6.8c0-0.8,0.6-1.4,1.3-1.4h6.8V59.9z"/>
			<path class="st22" d="M335.6,80.3v6.8c0,0.7-0.6,1.3-1.4,1.3h-6.8l0,0l0,0l0.1-0.1L335.6,80.3z"/>
			<path class="st22" d="M335.6,61.3v6.8l-8.1-8.1h6.8C335,59.9,335.6,60.5,335.6,61.3z"/>
			<path class="st22" d="M322.1,88.4h-6.8c-0.7,0-1.3-0.6-1.3-1.3v-6.8l0,0l0.1,0.1l0.2,0.2l7.6,7.6L322.1,88.4L322.1,88.4
				L322.1,88.4z"/>
			<path id="RESET_Box" class="st17" d="M327.5,59.9h-5.4l0,0L322,60l-7.6,7.6
				l-0.2,0.2L314,68l0,0v12.2l0,0l0.1,0.1l0.2,0.2l7.6,7.6l0.1,0.1l0,0l0,0h5.4l0,0l0,0l0.1-0.1l8-8v-12L327.5,59.9z M332.9,76.9
				c0,4.5-3.6,8.1-8.1,8.1s-8.1-3.7-8.1-8.1v-5.4c0-4.5,3.6-8.1,8.1-8.1s8.1,3.6,8.1,8.1V76.9z"/>
			<path id="RESET_BUTTON" class="st2" d="M332.9,71.5v5.4
				c0,4.5-3.6,8.1-8.1,8.1s-8.1-3.7-8.1-8.1v-5.4c0-4.5,3.6-8.1,8.1-8.1S332.9,67,332.9,71.5z"/>
	</g>
	<g id="TOUCH_PINS">
		<path id="TOUCH_VCC" class="st8" d="M394,9.7c-5.9,0-11.4,1.6-16.1,4.5c-0.4,0.2-0.9,0.5-1.3,0.8l-0.1,0.1
			c-0.5,0.4-1.1,0.7-1.6,1.1l0,0c-0.5,0.4-1,0.8-1.5,1.2c-0.2,0.2-0.5,0.4-0.7,0.7c-0.2,0.2-0.5,0.5-0.7,0.7c-0.5,0.5-0.9,1-1.3,1.4
			c-1.3,1.5-2.5,3.1-3.5,4.9c-0.3,0.6-0.6,1.1-1,1.7c-0.3,0.6-0.6,1.2-0.8,1.8c-0.1,0.3-0.3,0.6-0.4,0.9c-0.1,0.2-0.2,0.5-0.3,0.7
			c-0.3,0.8-0.5,1.5-0.7,2.3c-0.2,0.6-0.3,1.2-0.5,1.8c0,0.3-0.1,0.7-0.2,1c0,0.3-0.1,0.6-0.1,1c-0.1,0.5-0.1,1.1-0.2,1.6
			c0,0.3,0,0.6-0.1,0.9c0,0.6,0,1.1,0,1.7c0,17.2,13.9,31.1,31.1,31.1c1,0,2,0,3-0.1c3-0.3,5.8-1,8.4-2c0.3-0.1,0.5-0.2,0.8-0.3
			c0.7-0.3,1.3-0.6,2-0.9c0.6-0.3,1.3-0.7,1.9-1.1c0.5-0.3,1-0.6,1.5-0.9s0.9-0.7,1.4-1s0.9-0.7,1.3-1.1c0.5-0.4,0.9-0.8,1.3-1.1
			c0.4-0.4,0.8-0.8,1.2-1.2c0.4-0.4,0.8-0.9,1.1-1.3c0.4-0.5,0.8-0.9,1.1-1.4c0.3-0.4,0.6-0.9,0.9-1.3c0.4-0.5,0.7-1.1,1.1-1.7
			c0.3-0.5,0.5-0.9,0.8-1.4s0.5-1.1,0.8-1.6c0.6-1.5,1.2-3,1.6-4.6c0.2-0.7,0.3-1.5,0.5-2.2v-0.1c0.3-1.8,0.5-3.6,0.5-5.5
			C425.2,23.6,411.2,9.7,394,9.7z M394,54.3c-7.5,0-13.6-6.1-13.6-13.6s6.1-13.6,13.6-13.6s13.6,6.1,13.6,13.6
			C407.6,48.3,401.5,54.3,394,54.3z"/>
		<path id="TOUCH_GND" class="st8" d="M166.8,38.6L166.8,38.6C166.8,38.5,166.8,38.5,166.8,38.6c0-0.5,0-0.9-0.1-1.3
			c0-0.6-0.1-1.1-0.2-1.7c0-0.3-0.1-0.7-0.2-1c-0.5-3-1.6-5.8-2.9-8.4c-0.2-0.5-0.5-0.9-0.7-1.3s-0.5-0.9-0.8-1.3
			c-0.2-0.4-0.4-0.7-0.7-1c-0.5-0.6-0.9-1.2-1.4-1.8c0,0,0-0.1-0.1-0.1c-0.5-0.6-1-1.1-1.5-1.6c-5.7-6-13.7-9.8-22.7-9.8
			c-17.3,0-31.3,14-31.3,31.2c0,1.5,0.1,3,0.3,4.4V45c0,0.1,0,0.1,0,0.2c0,0.3,0.1,0.6,0.1,0.9c0.1,0.7,0.2,1.4,0.4,2
			c0.1,0.5,0.2,0.9,0.4,1.4c0.1,0.3,0.2,0.7,0.3,1c0.3,1.1,0.7,2.1,1.2,3c0.2,0.5,0.4,0.9,0.6,1.3c0.2,0.4,0.4,0.8,0.6,1.1
			c0.2,0.4,0.5,0.8,0.7,1.2c0.2,0.3,0.4,0.6,0.6,0.9c1.1,1.7,2.4,3.2,3.8,4.6c0.5,0.5,0.9,0.9,1.4,1.3c0.5,0.4,1,0.8,1.4,1.2
			c0.7,0.5,1.3,1,2.1,1.5c0.6,0.4,1.3,0.8,2,1.2c0.1,0.1,0.2,0.2,0.4,0.2c0.7,0.4,1.4,0.7,2.2,1.1c0.8,0.4,1.6,0.7,2.4,1
			c0.9,0.3,1.8,0.6,2.8,0.8c0.7,0.2,1.5,0.4,2.2,0.5c1.2,0.2,2.5,0.4,3.7,0.4c0.5,0,1.1,0,1.6,0c17.3,0,31.2-14,31.2-31.3
			C166.8,39.9,166.8,39.2,166.8,38.6z M135.6,54c-7.5,0-13.6-6-13.6-13.6c0-7.5,6.1-13.6,13.6-13.6s13.6,6.1,13.6,13.6
			C149.2,48,143.1,54,135.6,54z"/>
		<path id="TOUCH_P3" class="" d="M533.2,235.2c-1.5-0.5-3.2-0.9-4.8-1.2c-0.3,0-0.6-0.1-0.9-0.1c-1.4-0.2-2.8-0.3-4.2-0.3
			c-0.4,0-0.8,0-1.2,0c-0.3,0-0.6,0-0.9,0c-0.9,0-1.8,0.1-2.7,0.3c-0.8,0.1-1.5,0.3-2.3,0.5c-0.4,0.1-0.8,0.2-1.1,0.3
			c-1,0.2-2,0.5-2.9,0.9c-0.6,0.2-1.2,0.5-1.7,0.7s-1.1,0.5-1.7,0.8c-0.5,0.3-1.1,0.6-1.6,0.9c-0.6,0.4-1.2,0.7-1.7,1.1
			c-0.6,0.4-1.1,0.8-1.6,1.2c-0.3,0.2-0.6,0.5-0.9,0.7c-0.4,0.3-0.7,0.6-1.1,1c-0.2,0.2-0.4,0.3-0.5,0.5c-5.6,5.6-9.1,13.4-9.1,22
			c0,17.2,13.9,31.1,31.1,31.1c0.7,0,1.4,0,2.1-0.1c0.2,0,0.5,0,0.7-0.1c0.7,0,1.4-0.1,2-0.2c0.7-0.1,1.4-0.2,2-0.4
			c0.2,0,0.4-0.1,0.6-0.1c0.6-0.1,1.2-0.3,1.9-0.5c0.5-0.1,1-0.3,1.4-0.5c11.9-4.4,20.4-15.8,20.4-29.2
			C554.4,250.9,545.5,239.3,533.2,235.2z M523.3,278.2c-7.5,0-13.6-6.1-13.6-13.6s6-13.6,13.6-13.6c7.5,0,13.5,6.1,13.5,13.6
			C536.9,272.1,530.8,278.2,523.3,278.2z"/>
		<path id="TOUCH_P2" class="" d="M424.4,481.4c-0.1-0.4-0.2-0.8-0.3-1.2c-0.3-1.3-0.8-2.6-1.3-3.8c-0.1-0.3-0.2-0.6-0.4-0.8
			c-0.6-1.5-1.4-2.9-2.3-4.3c-0.1-0.2-0.3-0.5-0.5-0.7c-1.4-2-3-3.9-4.8-5.5c-0.3-0.3-0.6-0.5-1-0.8c-0.5-0.4-0.9-0.8-1.4-1.1
			c-0.4-0.3-0.8-0.5-1.1-0.8c-0.7-0.5-1.5-1-2.3-1.4c-0.4-0.2-0.8-0.4-1.1-0.6c-0.8-0.4-1.6-0.8-2.4-1.1c-0.4-0.2-0.8-0.3-1.2-0.5
			c-1-0.4-2-0.7-3.1-0.9c-0.4-0.1-0.8-0.2-1.2-0.3c-0.6-0.1-1.2-0.2-1.9-0.3c-0.4-0.1-0.9-0.1-1.3-0.2c-0.5,0-1.1-0.1-1.6-0.1
			s-1.1,0-1.6,0s-1.1,0-1.6,0c-0.8,0-1.6,0.1-2.4,0.2c-0.4,0-0.9,0.1-1.3,0.2c-1.4,0.2-2.8,0.5-4.1,1c-0.5,0.1-1,0.3-1.5,0.5
			s-1,0.4-1.4,0.6c-0.5,0.2-0.9,0.4-1.4,0.6c-4.6,2.2-8.7,5.6-11.7,9.7c-0.5,0.7-1,1.4-1.4,2.1c-0.7,1.1-1.4,2.4-2,3.6
			c-0.5,1.1-0.9,2.2-1.3,3.3c-0.1,0.4-0.3,0.8-0.4,1.2c-0.8,2.8-1.2,5.7-1.2,8.7c0,17.5,14.2,31.7,31.7,31.7s31.7-14.2,31.7-31.7
			C425.2,486,424.9,483.7,424.4,481.4z M393.6,502c-7.5,0-13.6-6-13.6-13.5s6.1-13.6,13.6-13.6s13.6,6,13.6,13.6
			C407.1,496,401,502,393.6,502z"/>
		<path id="TOUCH_P1" class="" d="M166.6,480.8c-0.2-0.8-0.4-1.5-0.7-2.2c0-0.1,0-0.2-0.1-0.2c-0.2-0.6-0.5-1.3-0.7-1.9
			c-0.1-0.2-0.1-0.3-0.2-0.5c-0.3-0.6-0.6-1.3-0.9-1.9c-0.4-0.8-0.9-1.6-1.3-2.3c-0.4-0.6-0.8-1.2-1.2-1.7c-0.4-0.6-0.8-1.1-1.3-1.6
			c-0.2-0.2-0.4-0.4-0.6-0.6c-0.4-0.5-0.8-0.9-1.3-1.4c0,0,0,0-0.1-0.1c-0.5-0.5-1-0.9-1.5-1.4c-0.7-0.6-1.4-1.2-2.1-1.7
			c-0.6-0.5-1.3-0.9-2-1.4c-0.7-0.4-1.4-0.8-2.1-1.2c-0.7-0.4-1.4-0.7-2.2-1.1c-1.9-0.8-3.8-1.5-5.8-1.9c-0.4-0.1-0.8-0.2-1.2-0.2
			c-0.4-0.1-0.8-0.1-1.2-0.2c-0.4,0-0.8-0.1-1.2-0.1c-1-0.1-2.1-0.2-3.1-0.2c-1.1,0-2.2,0-3.3,0.2c-0.5,0-1.1,0.1-1.6,0.2
			c-1.6,0.2-3.1,0.6-4.6,1.1c-3,0.9-5.8,2.3-8.3,4c-0.4,0.3-0.8,0.6-1.2,0.9c-0.4,0.3-0.8,0.6-1.2,0.9c-0.4,0.3-0.8,0.7-1.1,1
			c-0.4,0.3-0.7,0.7-1.1,1.1s-0.7,0.7-1.1,1.1c-1,1.1-2,2.3-2.8,3.6c-0.6,0.9-1.1,1.7-1.6,2.6c-0.3,0.5-0.5,0.9-0.7,1.4
			c-0.4,0.9-0.8,1.9-1.2,2.9c-1.2,3.4-1.9,7.1-1.9,10.9c0,17.6,14.2,31.8,31.8,31.8s31.8-14.2,31.8-31.8
			C167.6,486,167.2,483.4,166.6,480.8z M135.7,502.4c-7.5,0-13.6-6.1-13.6-13.6s6.1-13.6,13.6-13.6s13.6,6.1,13.6,13.6
			C149.4,496.3,143.3,502.4,135.7,502.4z"/>
		<path id="TOUCH_P0" class="" d="M6.4,233.4c-0.5,0-1.1,0-1.6,0s-1,0-1.5,0.1c-2,0.2-3.9,0.5-5.7,1.1
			c-13,3.8-22.4,15.8-22.4,30c0,13,7.9,24.1,19.1,28.8c0.9,0.4,1.9,0.7,2.9,1.1c1,0.3,2,0.6,3,0.8c0.5,0.1,1,0.2,1.6,0.3
			c0.5,0.1,1,0.1,1.6,0.2c1.1,0.1,2.1,0.2,3.2,0.2c17.3,0,31.3-14,31.3-31.3C37.6,247.4,23.6,233.4,6.4,233.4z M6.4,278.2
			c-7.5,0-13.6-6.1-13.6-13.6S-1.1,251,6.4,251S20,257.1,20,264.6C19.9,272.1,13.8,278.2,6.4,278.2z"/>
		<path id="TOUCH_LOGO" class="v3only" d="M282,13.3l-0.1,0l-6.8-0.1l-0.1,0l-0.1,0l-0.1,0l-0.1,0l-0.1,0l-0.1,0l-0.1,0l-0.1,0.1
			l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1
			l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l0,0.1l0,0.1l-0.1,3.6l0,0l0.1,0.4l-0.1,0.7
			l0,0.4l0-1.5l0-0.4l-0.1-0.3l-0.1-0.3l-0.1-0.3l-0.1-0.3l-0.1-0.3l-0.1-0.3l-0.2-0.3l-0.2-0.3l-0.3-0.3l-0.3-0.3l-0.3-0.3
			l-0.3-0.3l-0.3-0.2l-0.3-0.2l-0.3-0.2l-0.3-0.2l-0.3-0.2l-0.3-0.2l-0.4-0.2l-0.4-0.2l-0.4-0.2l-0.4-0.2l-0.4-0.2l-0.4-0.1l-0.4,0
			l-0.4,0l-0.4,0l-0.4,0l-0.4,0l-0.4,0.1l-0.4,0.1l-0.4,0.1l-0.3,0.1l-0.3,0.1l-0.3,0.1l-0.3,0.1l-0.3,0.1l-0.3,0.1l-0.3,0.2
			l-0.3,0.2l-0.3,0.3l-0.3,0.3l-0.3,0.3l-0.3,0.3l-0.2,0.3l-0.2,0.3l-0.2,0.3l-0.2,0.3l-0.2,0.3l-0.2,0.3l-0.2,0.4l-0.2,0.4
			l-0.2,0.4l-0.2,0.4l-0.2,0.4l-0.1,0.4l0,0.4l0,0.4l0,0.4l0,0.4l0,2l-0.2,6.5l-9.3,6.7l-0.6,0.4l-0.5,0.5l-0.4,0.5l-0.4,0.5
			l-0.3,0.5l-0.3,0.5l-0.2,0.6l-0.2,0.6l-0.2,0.6l-0.1,0.6L244,41l18.2-17.5l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1
			l0-0.1l0-0.1l0-0.1l0-0.1l0-0.1l0-0.1l0-0.1l0-0.1l0-0.1l0-0.1l0.1-4.3l6.4,0.2l-0.1,4.3l0,0.1l0,0.1l0,0.1l0,0.1l0,0.1l-0.1,0.1
			l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1
			l-0.1,0.1l-0.1,0.1L267,24l-0.1,0l-0.1,0l-0.1,0l-0.1,0l-0.1,0l-0.1,0l-0.1,0l-0.1,0l-0.1,0l-0.1,0l-1.4-0.1l-0.1,0l-0.1,0l-0.1,0
			l-0.1,0l-0.1,0l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1L244.4,41
			l0,0.1l0,0.6l0,0.6l0.1,0.6l0.1,0.6l0.1,0.6l0.1,0.3l15.4-14.7l3-5.4l1.6,5.6l-4.6-0.1l-15.4,14.7l0.1,0.2l0.2,0.5l0.3,0.5
			l0.3,0.5l0.3,0.5l0.4,0.4l0.4,0.4l0.5,0.4l0.5,0.4l0.5,0.3l0.5,0.3l0.6,0.2l0.6,0.2l0.7,0.1l0.7,0.1l0.7,0.1l1.9,0.1l0.5-2.2
			l0.2-1.1l0.3-1.2l0.3-1.2l0.3-1.2l0.4-1.1l0.4-1.1l0.4-1.1l0.4-1l0.4-1l0.5-1l0.5-1l0.6-0.9L260,34l0.7-0.9l1.4-0.5l0.8,0l3.3-3.2
			l1.9-5.5l2.6,5.3l0.1,0.3l-4.6-0.1l-3.3,3.2l7.4,0.2l0.6,0.9l0.6,0.9l0.5,0.9l0.5,1l0.5,1l0.4,1.1l0.4,1.1l0.4,1.2l0.3,1.1
			l0.3,1.1l0.2,1.2l0.2,1.2l0.3,2.3l0.3,2.2l2.6,0l0.3,0l0.3,0l0.3,0l0.3,0l0.3,0l0.3,0l0.2-0.1l0.2-0.1l0.2-0.1l0.2-0.1l0.2-0.1
			l0.2-0.1l0.2-0.1l0.2-0.1l0.2-0.1l0.1-0.2l0.1-0.2l0.1-0.2l0.2-0.2l0.2-0.2l0.2-0.2l0.2-0.2l0.1-0.2l0-0.2l0-0.2l0-0.2l0-0.2
			l0-0.2l0-0.2l0-0.2l0-0.2l0-0.3l0.5-19.7l0.2-10l0-0.1l0-0.1l0-0.1l0-0.1l0-0.1l0-0.1l0-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1
			l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1
			l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1L282,13.3z M282.8,25l-7.6-0.2l0.2-9.5l7.6,0.2L282.8,25z"/>
	</g>
	<g id="Grove_BG">
		<path class="st9" d="M386.1,153.1l-2.9-6.1l27.7-12.9l2.9,6.1L386.1,153.1z"/>
		<path class="st9" d="M391.8,165.4l-2.9-6.1l27.7-12.9l2.9,6.1L391.8,165.4z"/>
		<path class="st9" d="M397.6,177.7l-2.9-6.1l27.7-12.9l2.9,6.1L397.6,177.7z"/>
		<path class="st9" d="M403.3,190l-2.9-6.1l27.7-12.9l2.9,6.1L403.3,190z"/>
		<path class="st9" d="M130.8,184l-2.9,6.1l-27.7-12.9l2.9-6.1L130.8,184z"/>
		<path class="st9" d="M136.6,171.7l-2.9,6.1L106,164.9l2.9-6.1L136.6,171.7z"/>
		<path class="st9" d="M142.3,159.4l-2.9,6.1l-27.7-12.9l2.9-6.1L142.3,159.4z"/>
		<path class="st9" d="M148,147.1l-2.9,6.1l-27.7-12.9l2.9-6.1L148,147.1z"/>
	</g>
	<g id="Grove_rechts">
		<polygon class="st18" points="421.9,117.8 418.2,119.6 417.1,117.1 414,118.5 412.3,114.9 419,111.7 		"/>
		<polygon class="st18" points="453.1,184.8 446.3,187.9 444.6,184.2 447.7,182.8 446.5,180.4 450.2,178.6 		"/>
		<polygon class="st19" points="450.2,178.6 446.5,180.3 443.5,181.8 430.4,187.9 429.3,188.4 427.5,189.2 423.8,191 418.3,193.5 
			413.1,182.5 418.7,179.9 417.2,176.8 420.9,175.1 422.3,178.2 422.3,178.2 424.1,181.9 420.4,183.6 420.4,183.6 419.2,184.1 
			420.9,187.8 420.9,187.8 422.1,187.3 422.1,187.3 444.8,176.7 442.2,171.1 441.4,169.3 440,166.2 440,166.2 435.8,157.3 
			434.4,154.3 434.4,154.3 430.4,145.7 428.9,142.6 424.8,133.7 423.3,130.6 422.5,128.8 419.9,123.2 397.2,133.8 396,134.4 
			397.7,138.1 398.9,137.5 402.6,135.8 404.3,139.5 405.8,142.6 402.1,144.3 402,144.3 400.6,141.2 395.1,143.8 390,132.7 
			395.5,130.2 395.5,130.1 399.2,128.5 401,127.6 415.1,121 418.2,119.6 421.9,117.8 426.2,127.1 427,128.9 428.5,132 432.6,140.9 
			434.1,143.9 438,152.5 439.5,155.6 443.6,164.5 445.1,167.6 445.9,169.4 		"/>
		<polygon class="st18" points="398,126 399.2,128.5 395.5,130.1 395.5,130.2 390,132.7 387.1,126.6 392.6,124 398.1,121.4 
			399.8,125.1 		"/>
		<polygon class="st18" points="432.2,194.5 426.7,197.1 421.1,199.7 418.3,193.5 423.8,191 427.5,189.2 428.6,191.7 430.5,190.8 		
			"/>
		<path class="st20" d="M442.2,171.1l-0.9-1.8l-1.4-3.1l0,0l-4.2-8.9l-1.4-3.1l0,0l-4-8.6l-1.4-3.1l-4.2-8.9l-1.4-3.1l-0.9-1.8
			l-2.6-5.5l-22.7,10.6l-1.2,0.6l1.7,3.7l1.2-0.6l3.7-1.7l1.7,3.7l1.4,3.1l0,0l0.9,1.8l3.3,7.1l0,0l1.4,3.1l0,0l4,8.6l0,0l1.4,3l0,0
			l3.3,7.1l0.8,1.8l0,0l1.4,3.1l0,0l1.7,3.7l-3.7,1.7l0,0l-1.2,0.6l1.7,3.7l1.2-0.6l22.7-10.6L442.2,171.1z"/>
		<polygon class="st17" points="402.1,144.3 402.1,144.3 402,144.3 389.8,150 387,150.5 386.2,148.7 388.4,146.9 395.1,143.8 
			400.6,141.2 402,144.3 		"/>
		<polygon class="st18" points="420.9,175.1 417.2,176.8 416.4,175 414.7,171.4 413.1,167.9 411.7,164.9 407.6,156.2 406.2,153.2 
			406.2,153.2 404.6,149.7 402.9,146.1 402.1,144.3 402.1,144.3 405.8,142.6 406.6,144.4 406.6,144.4 409.9,151.5 411.3,154.5 
			411.3,154.6 415.3,163.1 415.3,163.2 416.8,166.2 416.8,166.2 420,173.3 		"/>
		<polygon class="st17" points="402.7,158.5 395.4,162 392.6,162.5 391.8,160.7 393.9,158.9 401.3,155.5 		"/>
		<polygon class="st20" points="414.7,171.4 409.8,173.7 408.2,170.2 406.7,167.1 402.7,158.5 401.3,155.5 399.7,152 404.6,149.7 
			406.2,153.2 406.2,153.2 407.6,156.2 411.7,164.9 413.1,167.9 		"/>
		<polygon class="st17" points="408.2,170.2 400.8,173.7 398.1,174.2 397.2,172.3 399.4,170.6 406.7,167.1 		"/>
		<polygon class="st17" points="418.7,179.9 413.1,182.5 406.4,185.6 403.6,186.2 402.8,184.3 405,182.5 417.2,176.8 		"/>
		<polygon class="st10" points="412.3,114.9 414,118.5 417.1,117.1 418.2,119.6 399.2,128.5 398,126 399.8,125.1 398.1,121.4 		"/>
		<polyline class="st10" points="446.5,180.4 447.7,182.8 444.6,184.2 446.3,187.9 432.2,194.5 430.5,190.8 428.6,191.7 
			427.5,189.2 429.3,188.4 430.4,187.9 443.5,181.8 446.5,180.3 		"/>
		<polygon id="G_A1_RX" class="st8" points="416.8,137.4 413.7,138.8 412.3,135.8 412.9,135.5 414.7,134.6 415.4,134.3 		"/>
		<polygon id="G_A1_TX" class="st8" points="422.4,149.4 422,149.6 421.8,149.7 419.9,150.5 419.9,150.5 419.3,150.8 417.9,147.7 
			421,146.3 		"/>
		<polygon id="G_A1_VCC" class="st8" points="427.8,161.1 424.8,162.5 423.3,159.4 423.3,159.4 423.3,159.4 423.9,159.1 
			425.8,158.3 425.8,158.3 426.4,158 		"/>
		<polygon id="G_A1_GND" class="st8" points="433.4,173 432.8,173.3 430.9,174.2 430.3,174.5 428.9,171.4 432,169.9 		"/>
	</g>
	<g id="Grove_links">
		<polygon class="st18" points="109.3,118.6 113,120.3 114.1,117.9 117.2,119.3 118.9,115.6 112.2,112.5 		"/>
		<polygon class="st23" points="78.1,185.5 84.8,188.7 86.6,185 83.5,183.6 84.6,181.1 80.9,179.4 		"/>
		<polygon class="st24" points="80.9,179.4 84.6,181.1 87.7,182.5 100.8,188.6 101.8,189.1 103.7,190 107.3,191.7 112.9,194.3 
			118,183.2 112.5,180.7 113.9,177.6 110.3,175.9 108.8,178.9 108.8,179 107.1,182.6 110.8,184.3 110.8,184.3 112,184.9 
			110.3,188.6 110.3,188.6 109,188 109,188 86.3,177.4 88.9,171.9 89.8,170.1 91.2,167 91.2,167 95.4,158.1 96.8,155 96.8,155 
			100.8,146.4 102.2,143.4 106.4,134.5 107.8,131.4 108.7,129.6 111.3,124 134,134.6 135.2,135.2 133.5,138.9 132.3,138.3 
			128.6,136.6 126.9,140.3 125.4,143.3 129.1,145 129.1,145 130.5,142 136.1,144.6 141.2,133.5 135.7,130.9 135.7,130.9 132,129.2 
			130.2,128.4 116,121.8 113,120.3 109.3,118.6 105,127.8 104.1,129.7 102.7,132.7 98.6,141.7 97.1,144.7 93.1,153.3 91.7,156.4 
			87.5,165.3 86.1,168.3 85.2,170.2 		"/>
		<polygon class="st18" points="133.2,126.8 132,129.2 135.7,130.9 135.7,130.9 141.2,133.5 144.1,127.4 138.6,124.8 133,122.2 
			131.3,125.9 		"/>
		<polygon class="st18" points="99,195.3 104.5,197.8 110,200.4 112.9,194.3 107.3,191.7 103.7,190 102.5,192.5 100.7,191.6 		"/>
		<path class="st20" d="M86.3,177.4L109,188l1.2,0.6l1.7-3.7l-1.2-0.6l0,0l-3.7-1.7l1.7-3.7l0,0l1.4-3.1l0,0l0.8-1.8l3.3-7.1l0,0
			l1.4-3l0,0l4-8.6l0,0l1.4-3.1l0,0l3.3-7.1l0.9-1.8l0,0l1.4-3.1l1.7-3.7l3.7,1.7l1.2,0.6l1.7-3.7l-1.2-0.6L111.3,124l-2.6,5.5
			l-0.9,1.8l-1.4,3.1l-4.2,8.9l-1.4,3.1l-4,8.6l0,0l-1.4,3.1l-4.2,8.9l0,0l-1.4,3.1l-0.9,1.8L86.3,177.4z"/>
		<polygon class="st17" points="129.1,145 129.1,145.1 129.1,145.1 141.4,150.8 144.1,151.3 145,149.5 142.8,147.7 136.1,144.6 
			130.5,142 		"/>
		<polygon class="st18" points="110.3,175.9 113.9,177.6 114.8,175.8 116.5,172.1 118.1,168.7 119.5,165.6 123.5,157 125,154 
			125,153.9 126.6,150.5 128.3,146.9 129.1,145.1 129.1,145 125.4,143.3 124.6,145.2 124.6,145.2 121.3,152.2 119.8,155.3 
			119.8,155.3 115.8,163.9 115.8,163.9 114.4,167 114.4,167 111.1,174 		"/>
		<polygon class="st17" points="128.4,159.3 135.8,162.8 138.6,163.3 139.4,161.4 137.2,159.7 129.9,156.2 		"/>
		<polygon class="st20" points="116.5,172.1 121.4,174.4 123,171 124.4,167.9 128.4,159.3 129.9,156.2 131.5,152.8 126.6,150.5 
			125,153.9 125,154 123.5,157 119.5,165.6 118.1,168.7 		"/>
		<polygon class="st17" points="123,171 130.4,174.4 133.1,174.9 134,173.1 131.8,171.4 124.4,167.9 		"/>
		<polygon class="st17" points="112.5,180.7 118,183.2 124.8,186.4 127.5,186.9 128.4,185.1 126.2,183.3 113.9,177.6 		"/>
		<polygon class="st10" points="118.9,115.6 117.2,119.3 114.1,117.9 113,120.3 132,129.2 133.2,126.8 131.3,125.9 133,122.2 		"/>
		<polyline class="st10" points="84.6,181.1 83.5,183.6 86.6,185 84.8,188.7 99,195.3 100.7,191.6 102.5,192.5 103.7,190 
			101.8,189.1 100.8,188.6 87.7,182.5 84.6,181.1 		"/>
		<polygon id="G_A0_GND" class="st8" points="114.4,138.2 117.4,139.6 118.9,136.5 118.3,136.2 116.4,135.4 115.8,135.1 		"/>
		<polygon id="G_A0_VCC" class="st8" points="108.8,150.2 109.1,150.3 109.4,150.4 111.2,151.3 111.2,151.3 111.9,151.6 
			113.3,148.5 110.2,147.1 		"/>
		<polygon id="G_A0_SDA" class="st8" points="103.4,161.8 106.4,163.3 107.8,160.2 107.8,160.2 107.8,160.2 107.2,159.9 
			105.4,159.1 105.4,159 104.8,158.8 		"/>
		<polygon id="G_A0_SCL" class="st8" points="97.8,173.8 98.4,174.1 100.2,174.9 100.8,175.2 102.3,172.1 99.2,170.7 		"/>
	</g>
	<g id="Button_B">
		<path class="st9" d="M419.5,241.3l-6.2-6.2l7.4-7.4l6.2,6.2L419.5,241.3z"/>
		<path class="st9" d="M457.6,203.1l-6.2-6.2l7.4-7.4l6.2,6.2L457.6,203.1z"/>
		<path class="st9" d="M441.1,262.9l-6.2-6.2l7.4-7.4l6.2,6.2L441.1,262.9z"/>
		<path class="st9" d="M479.2,224.7l-6.2-6.2l7.4-7.4l6.2,6.2L479.2,224.7z"/>
		<polygon class="st10" points="437.4,256.9 440.7,260.2 443.2,257.8 443.2,257.8 443.3,257.6 443.7,257.3 444.2,256.7 444.5,256.4 
			444.7,256.2 445.1,255.8 445.7,255.2 447.9,253 444.5,249.7 441.8,252.4 441.3,252.9 441.2,253 440.9,253.4 440.3,253.9 
			439.8,254.4 439.4,254.8 		"/>
		<polygon class="st10" points="473.3,220.9 476.6,224.3 478.8,222.1 479.4,221.5 479.8,221.1 480,220.9 480.3,220.6 480.9,220.1 
			481.2,219.7 483.8,217.1 480.5,213.8 478.4,215.8 478,216.2 477.5,216.7 477,217.3 476.6,217.6 476.5,217.7 476,218.2 		"/>
		<polygon class="st10" points="451.7,199.4 455.1,202.7 457.2,200.6 457.8,200 458.3,199.5 458.4,199.4 458.7,199.1 459.8,198 
			459.8,198 460.2,197.6 462.3,195.5 458.9,192.2 456.3,194.8 455.9,195.2 455.4,195.7 455.1,196 454.9,196.2 454.5,196.6 
			453.9,197.2 		"/>
		<polygon class="st10" points="415.8,235.3 419.1,238.7 421.6,236.2 421.6,236.2 421.8,236 423.1,234.7 423.6,234.2 424.2,233.6 
			426.3,231.5 423,228.1 420.2,230.9 419.8,231.3 419.6,231.5 419.3,231.8 418.8,232.4 418.4,232.7 		"/>
		<path d="M426.7,228.6c1.3,1.3,3.5,1.3,4.8,0s1.3-3.5,0-4.8s-3.5-1.3-4.8,0C425.3,225.1,425.3,227.3,426.7,228.6z"/>
		<path d="M447.4,207.9c1.3,1.3,3.5,1.3,4.8,0s1.3-3.5,0-4.8s-3.5-1.3-4.8,0S446.1,206.5,447.4,207.9z"/>
		<path d="M468.2,228.6c1.3,1.3,3.5,1.3,4.8,0s1.3-3.5,0-4.8s-3.5-1.3-4.8,0C466.8,225.1,466.8,227.3,468.2,228.6z"/>
		<path d="M447.4,249.3c1.3,1.3,3.5,1.3,4.8,0s1.3-3.5,0-4.8s-3.5-1.3-4.8,0C446.1,245.9,446.1,248,447.4,249.3z"/>
		<path id="BTN_B" class="st25" d="M441.4,234.6c4.6,4.6,12.1,4.6,16.8,0c4.6-4.6,4.6-12.1,0-16.8c-4.6-4.6-12.1-4.6-16.8,0
			C436.8,222.5,436.8,230,441.4,234.6z"/>
		<path id="BTN_B_BOX" class="st17" d="M422.2,227.4l0.7,0.7l3.4,3.3l18.2,18.2l3.4,3.3l0.7,0.7c0.6,0.7,1.7,0.7,2.4,0l26.3-26.3
			c0.7-0.7,0.7-1.7,0-2.4l-0.7-0.7l-3.3-3.4l-18.2-18.2l-3.3-3.3l-0.7-0.7c-0.7-0.6-1.7-0.6-2.4,0L422.2,225
			C421.6,225.7,421.6,226.7,422.2,227.4z M452.2,207.9c-1.3,1.3-3.5,1.3-4.8,0s-1.3-3.5,0-4.8s3.5-1.3,4.8,0
			S453.5,206.5,452.2,207.9z M468.2,223.8c1.3-1.3,3.5-1.3,4.8,0s1.3,3.5,0,4.8s-3.5,1.3-4.8,0C466.8,227.3,466.8,225.1,468.2,223.8
			z M447.4,244.6c1.3-1.3,3.5-1.3,4.8,0s1.3,3.5,0,4.8s-3.5,1.3-4.8,0C446.1,248,446.1,245.9,447.4,244.6z M441.4,217.8
			c4.6-4.6,12.1-4.6,16.8,0c4.6,4.6,4.6,12.1,0,16.8c-4.6,4.6-12.1,4.6-16.8,0C436.8,230,436.8,222.5,441.4,217.8z M426.7,223.8
			c1.3-1.3,3.5-1.3,4.8,0s1.3,3.5,0,4.8s-3.5,1.3-4.8,0C425.3,227.3,425.3,225.1,426.7,223.8z"/>
	</g>
	<g id="Button_A">
		<path class="st9" d="M92.3,256.6l-6.2,6.2l-7.4-7.4l6.2-6.2L92.3,256.6z"/>
		<path class="st9" d="M54.2,218.5l-6.2,6.2l-7.4-7.4l6.2-6.2L54.2,218.5z"/>
		<path class="st9" d="M113.9,235l-6.2,6.2l-7.4-7.4l6.2-6.2L113.9,235z"/>
		<path class="st9" d="M75.7,196.9l-6.2,6.2l-7.4-7.4l6.2-6.2L75.7,196.9z"/>
		<polygon class="st10" points="90,256.9 86.6,260.2 84.1,257.8 84.1,257.8 84,257.6 83.6,257.3 83.1,256.7 82.8,256.4 82.6,256.2 
			82.2,255.8 81.6,255.2 79.4,253 82.8,249.7 85.5,252.4 86,252.9 86.1,253 86.4,253.4 87,253.9 87.5,254.4 87.9,254.8 		"/>
		<polygon class="st10" points="54,220.9 50.7,224.3 48.5,222.1 47.9,221.6 47.5,221.1 47.3,220.9 47,220.6 46.4,220.1 46.1,219.7 
			43.5,217.1 46.8,213.8 48.9,215.8 49.3,216.2 49.8,216.7 50.3,217.3 50.7,217.6 50.8,217.8 51.3,218.2 		"/>
		<polygon class="st10" points="75.6,199.4 72.2,202.7 70.1,200.6 69.5,200 69,199.5 68.9,199.4 68.6,199.1 67.5,198 67.5,198 
			67.1,197.6 65,195.5 68.4,192.2 71,194.8 71.4,195.2 71.9,195.7 72.2,196 72.4,196.2 72.8,196.6 73.4,197.2 		"/>
		<polygon class="st10" points="111.5,235.3 108.2,238.7 105.7,236.2 105.7,236.2 105.5,236 104.2,234.7 103.7,234.2 103.1,233.6 
			101,231.5 104.3,228.1 107.1,230.9 107.5,231.3 107.7,231.5 108,231.8 108.5,232.4 108.9,232.7 		"/>
		<path d="M100.6,228.6c-1.3,1.3-3.5,1.3-4.8,0s-1.3-3.5,0-4.8s3.5-1.3,4.8,0C102,225.1,102,227.3,100.6,228.6z"/>
		<path d="M79.9,207.9c-1.3,1.3-3.5,1.3-4.8,0s-1.3-3.5,0-4.8s3.5-1.3,4.8,0C81.2,204.4,81.2,206.5,79.9,207.9z"/>
		<path d="M59.1,228.6c-1.3,1.3-3.5,1.3-4.8,0s-1.3-3.5,0-4.8s3.5-1.3,4.8,0C60.5,225.1,60.5,227.3,59.1,228.6z"/>
		<path d="M79.9,249.3c-1.3,1.3-3.5,1.3-4.8,0s-1.3-3.5,0-4.8s3.5-1.3,4.8,0C81.2,245.9,81.2,248,79.9,249.3z"/>
		
		<path id="BTN_A_BOX" class="st17" d="M105.1,225l-26.4-26.4c-0.6-0.6-1.7-0.6-2.4,0l-0.7,0.7l-3.3,3.3L54,220.9l-3.3,3.4L50,225
			c-0.7,0.7-0.7,1.7,0,2.4l26.3,26.3c0.7,0.7,1.7,0.7,2.4,0l0.7-0.7l3.4-3.3l18.2-18.2l3.4-3.3l0.7-0.7
			C105.7,226.7,105.7,225.7,105.1,225z M75.1,203.1c1.3-1.3,3.5-1.3,4.8,0s1.3,3.5,0,4.8s-3.5,1.3-4.8,0
			C73.8,206.5,73.8,204.4,75.1,203.1z M59.1,228.6c-1.3,1.3-3.5,1.3-4.8,0s-1.3-3.5,0-4.8s3.5-1.3,4.8,0
			C60.5,225.1,60.5,227.3,59.1,228.6z M79.9,249.3c-1.3,1.3-3.5,1.3-4.8,0s-1.3-3.5,0-4.8s3.5-1.3,4.8,0
			C81.2,245.9,81.2,248,79.9,249.3z M85.9,234.6c-4.6,4.6-12.1,4.6-16.8,0c-4.6-4.6-4.6-12.1,0-16.8c4.6-4.6,12.1-4.6,16.8,0
			C90.5,222.5,90.5,230,85.9,234.6z M100.6,228.6c-1.3,1.3-3.5,1.3-4.8,0s-1.3-3.5,0-4.8s3.5-1.3,4.8,0
			C102,225.1,102,227.3,100.6,228.6z"/>
		<path id="BTN_A" class="st26" d="M85.9,234.6c-4.6,4.6-12.1,4.6-16.8,0c-4.6-4.6-4.6-12.1,0-16.8c4.6-4.6,12.1-4.6,16.8,0
			C90.5,222.5,90.5,230,85.9,234.6z"/>
	</g>
	<g id="RGB_LED">
		<rect id="rgbled" x="252.9" y="300.9" class="st2" width="25.6" height="25.6"/>
		<circle id="rgbledcircle" class="st14" cx="265.7" cy="313.7" r="9.9"/>
	</g>
	<g id="led">
		<rect id="LED_0_0" x="210.7" y="146.2" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_1_0" x="236.8" y="146.2" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_2_0" x="262.7" y="146.2" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_3_0" x="288.7" y="146.2" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_4_0" x="314.6" y="146.2" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_0_1" x="210.7" y="171.7" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_1_1" x="236.8" y="171.7" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_2_1" x="262.7" y="171.7" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_3_1" x="288.7" y="171.7" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_4_1" x="314.6" y="171.7" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_0_2" x="210.7" y="197" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_1_2" x="236.8" y="197" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_2_2" x="262.7" y="197" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_3_2" x="288.7" y="197" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_4_2" x="314.6" y="197" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_0_3" x="210.7" y="222.5" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_1_3" x="236.8" y="222.5" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_2_3" x="262.7" y="222.5" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_3_3" x="288.7" y="222.5" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_4_3" x="314.6" y="222.5" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_0_4" x="210.7" y="247.8" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_1_4" x="236.8" y="247.8" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_2_4" x="262.7" y="247.8" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_3_4" x="288.7" y="247.8" class="st27" width="5.1" height="12.9"/>
		<rect id="LED_4_4" x="314.6" y="247.8" class="st27" width="5.1" height="12.9"/>
	</g>
</g>
</svg>`;

    const BOARD_MINI2_BODY = `<style>.v3only{display:none;}</style><g id="v2">
	<path class="st0" d="M531.6,282.9c-0.6-0.6-1.2-1.2-1.8-1.8c-4.7,1.3-9.6,3-14.4,1.7c-5.1-1.3-8.4-5.9-10.5-10.5
		c-3.3-7.3-2.1-16.3,3.6-21.5c0.4-4.1,1.9-7.7,6.4-9.9c4.4-2.1,9.4-2.9,14.4-3.3c0-0.6,0.1-1.2,0.3-1.8c-3.4-1.3-6.8-2.7-10-4.3
		c-4.6-2.3-9.1-4.9-13.4-7.7c-16.3-10.7-35.1-27.7-55.4-54.2c-29.5-38.6-28.6-86.6-25.7-117c0,0,0-0.1,0-0.1c0-7.1,0.2-14-4.1-20
		c-1.8-2.5-3.7-4.3-5.8-5.6c-0.4-0.2-0.8-0.4-1.1-0.7c-2.2-1.2-4.7-2-7.6-2.5c-3.8-0.7-4.3-4.4-2.8-7.1c-2.1-0.3-4.3-0.2-6.1,0.1
		c-2.9,0.5-4.9-1.1-5.8-3.3c-4,0.2-7.9,0.7-11.6,1.7c-5.3,1.5-9.9,5-14.2,8.4c0,0.1-0.1,0.1-0.1,0.2c-0.2,0.2-0.5,0.3-0.7,0.5
		c-0.2,0.2-0.4,0.3-0.7,0.5c-0.4,0.3-0.7,0.5-1.1,0.6C341.4,40,318.7,50.2,295,54.8c-1.9,0.4-3.7,0.8-5.6,1.2
		c-7.9,1.6-16,2.4-24.1,2.4c-7.8-0.1-15.6-0.9-23.2-2.4c-4.5-0.9-9-2-13.4-3.2h-0.4c-24.6-7.2-47.6-19.8-64.4-30.5
		c-0.3-0.1-0.7-0.3-1.1-0.5c-3.5-1.9-6.3-5-10-6.7c-2.8-1.3-6.2-1.4-9.4-0.9c-0.2,0.8-0.6,1.5-1.1,2.1c1.1,4.2,1.7,8.7,1.2,12.9
		c5.5,2.5,9.2,7.9,9.2,14.3c0,8.6-7,15.6-15.7,15.7c-7.9,0-14.3-5.7-15.5-13.2c-4.5-1.1-8.9-2.7-13-4.8c-0.7-0.4-1.2-0.8-1.6-1.3
		c-0.9,0.2-1.8,0.1-2.5-0.2c0.1,3.4-0.1,6.9-0.1,10.3c0,0.1,0,0.3,0,0.4c5,47.1-3.1,84.5-21.1,114.5l-2,2.9
		c-21.2,31-53.8,51.9-77.5,64c-0.1,0-0.2,0-0.3,0c-3.5,1.6-6.5,3.4-9.1,5.6c3.8,2.1,7.5,5.1,10.3,7.8c0.5,0.5,0.9,1,1.1,1.6
		c8.1-1.1,14.6,4.1,18.3,11.9c2,4.1,3.3,8.9,0.5,13c-2.6,3.8-5.1,8.3-9.1,10.8c-5,3.2-11.4,3.1-16.8,5.4c-1.6,0.7-3.2,1.5-4.9,2.1
		c1.1,0.7,2.3,1.4,3.4,2c1.9,1.1,3.8,2.4,5.7,3.7c0.8,0.5,1.6,1,2.4,1.5c0.3,0.2,0.6,0.4,1,0.5c0.4,0.1,0.8,0.3,1.2,0.6
		c0.1,0,0.2,0.1,0.3,0.1h0.3l2.7,1.4c10.9,5.8,21.2,12.5,31.1,19.9c11.7,10.2,22.5,21.4,32.4,33.4c2.9,3.4,5.6,6.9,8.1,10.6
		c0,0.1,0,0.1,0,0.2c18.3,29.8,26.7,67.1,21.9,114c-0.2,2.4-0.5,4.8-0.8,7.4c0,3.5,0.6,6.9,1.6,10.2c0.1-0.2,0.3-0.3,0.4-0.5
		c4.9-6,9.4-10.7,16.4-13.8c1.8-6.7,7.9-11.5,15.1-11.5c8.7,0,15.7,7,15.7,15.7c0,1.9-0.3,3.7-0.9,5.3c-0.1,1.3-0.4,2.7-0.7,4.1
		c-0.2,0.7-0.4,1.4-0.5,2.2c1,2.2,0.6,5.2-1.7,6.8c-0.6,2.5-1.1,5-1.5,7.6c-0.3,1.7-0.5,3.7-0.9,5.7c2.2-0.6,4.4-1.4,6.4-2.4h0.1
		c1.8-1,3.5-2.1,5.1-3.4c10.6-8.1,21.9-15.3,33.8-21.5c2-1,4.1-2,6.1-3c9.8-4.5,20.1-8,30.6-10.4c3-0.7,6-1.1,9.1-1.4
		c2.3-0.1,4.5-0.7,6.6-1.6c2.3-1,4.1-3,4.9-5.4c1.9-5.9,6.2-12.8,15.9-12.8c9.6,0,13.8,6.4,16,12.1c0.9,2.5,2.7,4.6,4.9,6.1
		c1.6,1,3.3,1.6,5.1,1.7c6.4,0.6,17.7,3,37.4,10.4h0.3c13.4,5.9,26.3,13.1,38.3,21.5c0.1,0.1,0.2,0.1,0.3,0.2c1.9,1.3,4.3,1.9,6.4,3
		c2.5,1.3,4.9,2.1,7.7,2.7c0,0,0,0,0.1,0c-2.2-5.5-4-11.1-4-17.2c0-0.5,0.1-0.9,0.2-1.3c-1.6-2.6-1.4-6.5-0.7-10.2
		c0.1-1.8,0.5-3.5,1.2-5c0.1-0.4,0.2-0.7,0.3-1c1.8-6.3,7.1-10.4,13.4-11.4c7.1-1.2,12.2,1.4,16.3,7c4,5.6,7.8,10.6,9.6,17.3
		c0,0.1,0,0.2,0.1,0.2c0.6,0.5,1.3,1.1,2,1.6c0.6,0.4,1.1,0.9,1.6,1.3c0.2-0.2,0.5-0.5,0.8-0.7c-1.3,0.9,0.9-2,1.1-2.6
		c0.8-1.7,1.3-3.5,1.5-5.4c0.2-3.7-0.4-7.6-0.9-11.2c0-0.1,0-0.2,0-0.2c0,0,0,0,0-0.1c-2-20.2-1-40.6,2.9-60.5v-0.4
		c3.9-16.5,10.3-32.4,18.8-47c21.9-37.4,55.3-56.7,78.5-68l4.3-2c3.4-1.6,6.7-3.5,9.6-5.7C536,288,534,285.3,531.6,282.9z
		 M408.2,45.7c-1,7.6-7.6,13.5-15.5,13.6c-8.7,0-15.7-7-15.7-15.7c0-4.2,1.6-7.9,4.2-10.7c-0.8-1.3-0.8-2.9,0.3-4.6
		c3.8-5.5,11-5.6,17-3.8c7,2,12,8.3,13.7,15.2C413,42.9,410.8,45.2,408.2,45.7z"/>
	<g id="Beschriftungen">
		<line class="st1" x1="174.1" y1="49.3" x2="184" y2="49.3"/>
		<g>
			<line class="st1" x1="343.7" y1="49.3" x2="353.6" y2="49.3"/>
			<line class="st1" x1="348.7" y1="44.3" x2="348.7" y2="54.2"/>
		</g>
		<path class="st2" d="M144.2,174.1h-2.7l-0.6,2h-1.5l2.8-8.8h1.3l2.8,8.8h-1.5L144.2,174.1z M141.8,172.9h2l-1-3.4L141.8,172.9z"/>
		<path class="st2" d="M153.1,172.8c0,0.5-0.1,1-0.2,1.5c-0.1,0.4-0.3,0.8-0.6,1.1c-0.2,0.3-0.5,0.5-0.9,0.7
			c-0.4,0.1-0.8,0.2-1.2,0.2s-0.8-0.1-1.2-0.2c-0.4-0.1-0.7-0.4-0.9-0.7c-0.3-0.3-0.4-0.7-0.6-1.1c-0.2-0.5-0.2-1-0.2-1.5v-2.1
			c0-0.5,0.1-1,0.2-1.5c0.1-0.4,0.3-0.8,0.6-1.1c0.2-0.3,0.5-0.5,0.9-0.7c0.4-0.1,0.8-0.2,1.2-0.2s0.8,0.1,1.2,0.2
			c0.4,0.1,0.7,0.4,0.9,0.7c0.3,0.3,0.4,0.7,0.6,1.1c0.1,0.5,0.2,1,0.2,1.5V172.8z M148.8,172.2l2.8-2.1c0-0.5-0.1-0.9-0.4-1.3
			c-0.3-0.3-0.6-0.5-1-0.4c-0.4,0-0.8,0.2-1.1,0.5c-0.3,0.5-0.4,1-0.3,1.5V172.2z M151.7,171.2l-2.8,2.1c0,1.2,0.5,1.7,1.4,1.7
			s1.4-0.7,1.4-2L151.7,171.2L151.7,171.2z"/>
		<path class="st2" d="M35.8,299.2c0,0.5-0.1,1-0.2,1.5c-0.1,0.4-0.3,0.8-0.6,1.1c-0.2,0.3-0.5,0.5-0.9,0.7s-0.8,0.2-1.2,0.2
			s-0.8-0.1-1.2-0.2c-0.3-0.1-0.7-0.4-0.9-0.7c-0.3-0.3-0.5-0.7-0.6-1.1c-0.1-0.5-0.2-1-0.2-1.5v-2.1c0-0.5,0.1-1,0.2-1.5
			c0.1-0.4,0.3-0.7,0.6-1.1c0.3-0.3,0.6-0.5,0.9-0.7c0.4-0.2,0.8-0.2,1.2-0.2s0.8,0.1,1.2,0.2c0.3,0.2,0.6,0.4,0.9,0.7
			c0.3,0.3,0.4,0.7,0.6,1.1c0.1,0.5,0.2,1,0.2,1.5V299.2z M31.6,298.7l2.8-2.1c0-0.5-0.1-0.9-0.4-1.3c-0.2-0.3-0.6-0.5-1-0.4
			c-0.4,0-0.8,0.2-1.1,0.5c-0.3,0.5-0.4,1-0.3,1.5V298.7z M34.4,297.8l-2.8,2.1c0,1.2,0.5,1.7,1.4,1.7s1.4-0.7,1.4-2
			C34.4,299.6,34.4,297.8,34.4,297.8z"/>
		<path class="st2" d="M180,482h-1.4v-7l-2.2,0.8v-1.3l3.6-1.3l0,0L180,482z"/>
		<path class="st2" d="M352,482h-5.9v-1l2.8-3.1c0.2-0.2,0.4-0.5,0.6-0.7c0.1-0.2,0.3-0.4,0.4-0.6s0.2-0.3,0.2-0.5s0-0.3,0-0.5
			s0-0.4,0-0.6c-0.1-0.2-0.2-0.3-0.3-0.4c-0.1-0.1-0.3-0.2-0.4-0.3c-0.2,0-0.4,0-0.5,0c-0.4,0-0.8,0.1-1.2,0.4
			c-0.3,0.3-0.4,0.8-0.4,1.2h-1.4c0-0.4,0.1-0.7,0.2-1.1c0.1-0.3,0.3-0.6,0.6-0.9c0.3-0.3,0.6-0.5,0.9-0.6c0.4-0.1,0.8-0.2,1.3-0.2
			c0.4,0,0.8,0.1,1.2,0.2c0.3,0.1,0.6,0.3,0.8,0.5c0.2,0.2,0.4,0.5,0.5,0.8s0.2,0.6,0.2,1c0,0.3,0,0.5-0.1,0.8s-0.2,0.5-0.4,0.8
			c-0.2,0.3-0.4,0.5-0.6,0.7c-0.2,0.3-0.5,0.5-0.7,0.8l-2,2.1h4.1L352,482z"/>
		<path class="st2" d="M493.7,297.5h0.8c0.2,0,0.5,0,0.7,0c0.2-0.1,0.3-0.2,0.5-0.3c0.1-0.1,0.2-0.3,0.3-0.4c0-0.2,0-0.4,0-0.5
			c0-0.4-0.1-0.7-0.3-1c-0.3-0.3-0.6-0.4-1-0.4c-0.2,0-0.4,0-0.5,0c-0.2,0.1-0.3,0.1-0.4,0.2s-0.2,0.3-0.3,0.4c0,0.2,0,0.3,0,0.5
			h-1.4c0-0.3,0.1-0.7,0.2-1s0.3-0.6,0.6-0.7c0.3-0.2,0.5-0.4,0.9-0.5s0.7-0.2,1.1-0.2s0.8,0.1,1.2,0.2c0.3,0.1,0.6,0.3,0.9,0.5
			s0.4,0.5,0.6,0.8c0.1,0.3,0.2,0.7,0.2,1.1c0,0.2,0,0.3,0,0.5c-0.1,0.2-0.1,0.4-0.2,0.5c-0.1,0.2-0.2,0.3-0.4,0.5
			c-0.2,0.2-0.3,0.3-0.6,0.4c0.2,0.1,0.5,0.2,0.7,0.4c0.2,0.1,0.3,0.3,0.4,0.5s0.2,0.4,0.2,0.6s0,0.4,0,0.6c0,0.4-0.1,0.8-0.2,1.1
			c-0.1,0.3-0.3,0.6-0.6,0.8c-0.3,0.2-0.6,0.4-0.9,0.5c-0.4,0.1-0.8,0.2-1.2,0.2c-0.4,0-0.7,0-1.1-0.1c-0.3-0.1-0.6-0.3-0.9-0.5
			s-0.5-0.5-0.6-0.8c-0.2-0.3-0.3-0.7-0.2-1.1h1.4c0,0.2,0,0.4,0.1,0.5c0,0.2,0.1,0.3,0.3,0.4c0.1,0.1,0.3,0.2,0.4,0.3
			c0.2,0,0.4,0,0.6,0c0.4,0,0.8-0.1,1.1-0.4c0.4-0.5,0.5-1.1,0.3-1.7c-0.1-0.2-0.2-0.3-0.3-0.5c-0.1-0.1-0.3-0.2-0.5-0.3
			c-0.2,0-0.5,0-0.7,0h-0.8L493.7,297.5z"/>
		<path class="st2" d="M382.6,175h-2.7l-0.6,2h-1.5l2.8-8.8h1.3l2.8,8.8h-1.4L382.6,175z M380.2,173.8h2l-1-3.4L380.2,173.8z"/>
		<path class="st2" d="M390,177.1h-1.4v-7l-2.2,0.8v-1.3l3.6-1.3l0,0V177.1z"/>
		<path id="Silk_btn_a" class="st2" d="M87.7,243.4l37.4-7.9c15.2-4.4,5.9-35.7-9.2-31.2l-27.2,4.8L87.7,243.4z"/>
		<path id="silk_btn_b" class="st2" d="M439.1,243.9l-37.2-8.8c-15-4.8-5-35.9,10-30.9l27,5.5L439.1,243.9z"/>
		<path class="st0" d="M108.9,226l1.2-0.2l5.2-14.9h3.5l5.2,14.9l1.2,0.2v2.1h-5.8V226l1.2-0.2l-0.7-2.4h-5.6l-0.7,2.4l1.2,0.2v2.1
			H109L108.9,226L108.9,226z M115.1,221h3.9l-1.9-6.1l0,0L115.1,221z"/>
		<path class="st0" d="M410,210c1.7-0.1,3.4,0.3,4.8,1.2c1.1,0.8,1.8,2.1,1.7,3.5c0,0.8-0.2,1.5-0.6,2.1c-0.5,0.6-1.1,1.1-1.8,1.4
			c1,0.1,1.8,0.7,2.4,1.4c0.5,0.7,0.8,1.5,0.8,2.4c0.1,1.4-0.5,2.8-1.6,3.7c-1.3,0.9-3,1.4-4.6,1.3h-8.4v-2.1l1.8-0.4v-12.3
			l-1.8-0.3v-2.1h7.6L410,210z M407.6,217.2h2.4c0.7,0.1,1.5-0.1,2.1-0.6c0.5-0.4,0.8-1,0.7-1.6c0.1-0.7-0.2-1.3-0.7-1.8
			c-0.7-0.4-1.4-0.6-2.2-0.6h-2.4L407.6,217.2z M407.6,219.6v4.8h3.2c0.7,0,1.5-0.2,2.1-0.6c0.5-0.4,0.8-1.1,0.7-1.8
			c0-0.7-0.2-1.4-0.6-1.9c-0.5-0.5-1.2-0.7-1.9-0.7L407.6,219.6z"/>
	</g>
	<g id="Calliope_mini_Logo">
		<path class="st2" d="M126.3,352.3l-0.7-1.2l1-0.7c0-0.3,0-0.5,0-0.8c-0.1-0.3-0.2-0.6-0.3-0.9c-0.3-0.6-0.9-1.1-1.7-1.2
			c-0.8-0.1-1.6,0.1-2.3,0.6l-0.3,0.1c-0.7,0.4-1.3,1-1.6,1.7c-0.3,0.6-0.3,1.4,0.1,2c0.2,0.3,0.4,0.6,0.6,0.8
			c0.2,0.2,0.5,0.3,0.7,0.4l1.1-0.4l0.7,1.2l-1.6,0.9c-0.6-0.1-1.1-0.3-1.6-0.7c-0.5-0.4-0.9-0.9-1.3-1.5c-0.6-1-0.8-2.2-0.4-3.2
			c0.4-1.1,1.2-2.1,2.3-2.7l0.3-0.1c1-0.6,2.2-0.8,3.4-0.6c1.1,0.2,2.1,1,2.6,2c0.3,0.6,0.5,1.2,0.6,1.9c0.1,0.6,0,1.2-0.2,1.7
			L126.3,352.3z"/>
		<path class="st2" d="M122.8,356.1l0.4,0.5l8.3-1.5l0.9,1.6l-5.5,6.3l0.2,0.6l-1,0.5l-1.5-2.7l1-0.5l0.4,0.5l0.9-1l-1.5-2.6
			l-1.3,0.3l0.2,0.6l-1,0.5l-1.5-2.7L122.8,356.1z M126.8,357.6l1,1.8l2.3-2.4l0,0L126.8,357.6z"/>
		<path class="st2" d="M126.8,365.4l1-0.6l0.7,0.8l5.7-3.3l-0.3-0.9l0.9-0.5l0.5,0.8l0.9,1.6l0.5,0.8l-1,0.6l-0.7-0.8l-5.6,3.2
			l1.3,2.2l1-0.5l0.7,1.2l-2.2,1.3L126.8,365.4z"/>
		<path class="st2" d="M130.8,372.6l1-0.6l0.7,0.8l5.7-3.3l-0.3-0.9l0.9-0.5l0.5,0.8l0.9,1.6l0.5,0.8l-1,0.6l-0.7-0.8l-5.6,3.2
			l1.3,2.2l1-0.5l0.7,1.2l-2.2,1.3L130.8,372.6z"/>
		<path class="st2" d="M142,375.9l1-0.5l1.9,3.3l-1,0.6l-0.7-0.8l-5.7,3.2l0.3,1l-0.9,0.5l-1.9-3.3l1-0.6l0.7,0.8l5.7-3.3L142,375.9
			z"/>
		<path class="st2" d="M145.6,389.4c-1,0.6-2.3,0.9-3.4,0.6c-2.2-0.5-3.6-2.7-3.1-4.9c0-0.1,0.1-0.2,0.1-0.3
			c0.5-1.1,1.3-2.1,2.4-2.6l0,0c1-0.6,2.3-0.9,3.4-0.6c1.1,0.2,2.1,0.9,2.6,1.9c0.6,1,0.7,2.2,0.4,3.3
			C147.6,387.9,146.7,388.9,145.6,389.4z M144.9,387.7c0.7-0.4,1.3-1,1.7-1.7c0.5-1.1,0-2.4-1.1-2.8c-0.2-0.1-0.4-0.2-0.6-0.2
			c-0.8,0-1.7,0.2-2.4,0.7l0,0c-0.7,0.4-1.3,0.9-1.7,1.7c-0.3,0.6-0.3,1.3,0,1.9s0.9,1,1.6,1.1C143.2,388.4,144,388.2,144.9,387.7
			L144.9,387.7z"/>
		<path class="st2" d="M152.5,392.2c0.4,0.7,0.6,1.6,0.5,2.4c-0.4,1.6-2,2.5-3.5,2.1h-0.1c-0.8-0.3-1.5-1-1.9-1.8l-0.8-1.4l-1.8,1
			l0.3,0.9l-1,0.5l-1.9-3.3l0.9-0.5l0.7,0.7l5.7-3.3l-0.3-0.9l1-0.6l0.5,0.8L152.5,392.2z M147.9,393l0.8,1.4
			c0.2,0.4,0.5,0.7,0.9,0.8c0.4,0.1,0.8,0,1.1-0.2c0.4-0.2,0.6-0.5,0.7-0.9c0.1-0.4,0-0.8-0.2-1.2l-0.8-1.4L147.9,393z"/>
		<path class="st2" d="M153.3,404l-1.5-2.7l-2.3,1.3l1.4,2.6l1-0.5l0.7,1.2l-2.2,1.2l-3.6-6.3l0.9-0.5l0.7,0.7l5.7-3.2l-0.3-0.9
			l1-0.6l0.5,0.8l3.1,5.4l-2.2,1.3l-0.7-1.2l0.9-0.6l-1.4-2.6l-2,1.1l1.5,2.7L153.3,404z"/>
		<path class="st2" d="M111.5,355.6l-1.4,0.9c0.6,0,1.3,0.1,1.9,0.4s1.1,0.8,1.4,1.4c0.3,0.5,0.5,1.1,0.5,1.6s-0.2,1.1-0.6,1.4
			c0.6,0,1.1,0.2,1.6,0.5s1,0.8,1.3,1.3c0.2,0.4,0.4,0.9,0.5,1.4c0.1,0.4,0,0.9-0.2,1.3c-0.2,0.5-0.5,0.9-0.9,1.3
			c-0.5,0.5-1,0.9-1.6,1.2l-10,5.7l-1.6-2.8l9.9-5.6c0.4-0.2,0.8-0.5,0.9-1c0.1-0.4,0-0.7-0.2-1.1c-0.1-0.3-0.4-0.5-0.7-0.7
			c-0.3-0.1-0.6-0.1-0.9,0l-10.5,5.8l-1.5-2.7l9.9-5.6c0.4-0.2,0.8-0.5,0.9-1c0.1-0.4,0-0.7-0.2-1s-0.4-0.5-0.7-0.7
			c-0.3-0.1-0.6-0.1-0.9,0l-10.5,6l-1.6-2.8l13.6-7.7L111.5,355.6z"/>
		<path class="st2" d="M119.6,370l4.1,7.2l-11.1,6.3l2.4,4l-2.4,1.4l-6.4-11.3l2.4-1.4l2.4,4.2l8.6-4.8l-2.4-4.2L119.6,370z
			 M125.4,371.9c0.4-0.3,0.9-0.3,1.4-0.2c1,0.4,1.6,1.5,1.5,2.6c-0.3,1-1.4,1.6-2.4,1.3c-0.5-0.2-0.9-0.5-1.2-1
			c-0.3-0.4-0.4-1-0.3-1.5C124.6,372.6,124.9,372.2,125.4,371.9L125.4,371.9z"/>
		<path class="st2" d="M129.6,387.6l-1.8,1.3c0.9,0.1,1.8,0.4,2.6,0.9s1.4,1.2,1.9,2c0.4,0.6,0.6,1.3,0.8,2.1c0.2,0.7,0.2,1.4,0,2
			c-0.2,0.7-0.6,1.4-1.1,1.9c-0.7,0.7-1.4,1.3-2.2,1.7l-8.5,4.8l-1.7-3l8.4-4.8c0.5-0.3,0.9-0.6,1.3-1c0.3-0.3,0.5-0.7,0.6-1.1
			s0.1-0.8,0-1.1c-0.1-0.4-0.3-0.9-0.5-1.3c-0.3-0.6-0.8-1.1-1.4-1.5c-0.6-0.3-1.2-0.5-1.9-0.5l-9.6,5.5l-1.7-3l13.6-7.7
			L129.6,387.6z"/>
		<path class="st2" d="M136.6,400l4.1,7.2l-11.1,6.3l2.4,4l-2.4,1.4l-6.4-11.3l2.4-1.4l2.4,4.2l8.6-4.8l-2.4-4.2L136.6,400z
			 M142.3,402c0.4-0.3,0.9-0.3,1.4-0.2c0.5,0.2,0.9,0.5,1.2,1s0.4,1,0.3,1.5c-0.1,0.5-0.5,0.9-0.9,1.1c-0.4,0.3-0.9,0.3-1.4,0.2
			c-0.5-0.2-0.9-0.5-1.2-1c-0.3-0.4-0.4-1-0.3-1.5C141.6,402.6,141.9,402.2,142.3,402L142.3,402z"/>
		<path class="st2" d="M124.8,330.7l-4-7.1c-0.6-1.1-2-1.4-3-0.8l-5.4,3c4.4-2.6,5.9-8.3,3.3-12.7c-2.5-4.3-8-5.8-12.4-3.4l-8.8,5
			l-12.6-5.5c-4.8-2.2-10.6-0.2-12.8,4.7c-1.4,2.9-1.2,6.4,0.5,9.1l1.1,1.9c6.4-2.6,14.8-4.8,21.4-3.7v0.2l4.8,8.5
			c-2.4,6.4-8.7,12.1-14.2,16.3l1.5,2.7c1.7,3,5.5,4.1,8.5,2.4l0,0l20.7-11.8l10.5-6c1.1-0.5,1.6-1.8,1.1-2.9
			C124.9,330.9,124.9,330.8,124.8,330.7z M109.1,313.2l3.8,6.7l-4.5,2.6c-1.5,0.8-3.3,0.3-4.1-1.1l-0.8-1.4
			c-0.8-1.4-0.4-3.3,1.1-4.1c0,0,0,0,0.1,0L109.1,313.2z M95.2,319l7.5-0.3l-4.8,5.1L95.2,319z M98,323.9l6.8-1.5l-4.1,6.3L98,323.9
			z M108.3,330.3l9.9-5.6l4.6,8l-9.9,5.6L108.3,330.3z"/>
		<path class="st2" d="M80.4,342.3c0.6-6,6.7-14.1,11.7-20.7l-17.7,10.1L80.4,342.3z"/>
	</g>
	<g id="interaktiv-mini2">
		<g id="PINS">
			<g id="C_GND4">
				<circle class="st3" cx="370.8" cy="422" r="5.2"/>
				<circle cx="370.8" cy="422" r="2.2"/>
			</g>
			<g id="C_VCC2">
				<circle class="st3" cx="370.8" cy="439.6" r="5.2"/>
				<circle cx="370.8" cy="439.6" r="2.2"/>
			</g>
			<g id="C_P19">
				<circle class="st3" cx="353.3" cy="422" r="5.2"/>
				<circle cx="353.3" cy="422" r="2.2"/>
			</g>
			<g id="C_P18">
				<circle class="st3" cx="353.3" cy="439.6" r="5.2"/>
				<circle cx="353.3" cy="439.6" r="2.2"/>
			</g>
			<g id="C_P17">
				<circle class="st3" cx="335.7" cy="422" r="5.2"/>
				<circle cx="335.7" cy="422" r="2.2"/>
			</g>
			<g id="C_P16">
				<circle class="st3" cx="335.7" cy="439.6" r="5.2"/>
				<circle cx="335.7" cy="439.6" r="2.2"/>
			</g>
			<g id="C_P15">
				<circle class="st3" cx="318.2" cy="422" r="5.2"/>
				<circle cx="318.2" cy="422" r="2.2"/>
			</g>
			<g id="C_P14">
				<circle class="st3" cx="318.2" cy="439.6" r="5.2"/>
				<circle cx="318.2" cy="439.6" r="2.2"/>
			</g>
			<g id="C_P13">
				<circle class="st3" cx="300.7" cy="422" r="5.2"/>
				<circle cx="300.7" cy="422" r="2.2"/>
			</g>
			<g id="C_P12">
				<circle class="st3" cx="300.7" cy="439.6" r="5.2"/>
				<circle cx="300.7" cy="439.6" r="2.2"/>
			</g>
			<g id="C_P11">
				<circle class="st3" cx="283.2" cy="422" r="5.2"/>
				<circle cx="283.2" cy="422" r="2.2"/>
			</g>
			<g id="C_P10">
				<circle class="st3" cx="283.2" cy="439.6" r="5.2"/>
				<circle cx="283.2" cy="439.6" r="2.2"/>
			</g>
			<g id="C_GND3">
				<circle class="st3" cx="265.7" cy="422" r="5.2"/>
				<circle cx="265.7" cy="422" r="2.2"/>
			</g>
			<g id="C_GND2">
				<circle class="st3" cx="265.7" cy="439.6" r="5.2"/>
				<circle cx="265.7" cy="439.6" r="2.2"/>
			</g>
			<g id="C_P9">
				<circle class="st3" cx="248.2" cy="422" r="5.2"/>
				<circle cx="248.2" cy="422" r="2.2"/>
			</g>
			<g id="C_P8">
				<circle class="st3" cx="248.2" cy="439.6" r="5.2"/>
				<circle cx="248.2" cy="439.6" r="2.2"/>
			</g>
			<g id="C_P7">
				<circle class="st3" cx="230.7" cy="422" r="5.2"/>
				<circle cx="230.7" cy="422" r="2.2"/>
			</g>
			<g id="C_P6">
				<circle class="st3" cx="230.7" cy="439.6" r="5.2"/>
				<circle cx="230.7" cy="439.6" r="2.2"/>
			</g>
			<g id="C_P5">
				<circle class="st3" cx="213.2" cy="422" r="5.2"/>
				<circle cx="213.2" cy="422" r="2.2"/>
			</g>
			<g id="C_P4">
				<circle class="st3" cx="213.2" cy="439.6" r="5.2"/>
				<circle cx="213.2" cy="439.6" r="2.2"/>
			</g>
			<g id="C_P3">
				<circle class="st3" cx="195.7" cy="422" r="5.2"/>
				<circle cx="195.7" cy="422" r="2.2"/>
			</g>
			<g id="C_P2">
				<circle class="st3" cx="195.7" cy="439.6" r="5.2"/>
				<circle cx="195.7" cy="439.6" r="2.2"/>
			</g>
			<g id="C_P1">
				<circle class="st3" cx="178.2" cy="422" r="5.2"/>
				<circle cx="178.2" cy="422" r="2.2"/>
			</g>
			<g id="C_P0">
				<circle class="st3" cx="178.2" cy="439.6" r="5.2"/>
				<circle cx="178.2" cy="439.6" r="2.2"/>
			</g>
			<g id="C_VCC1">
				<circle class="st3" cx="160.7" cy="422" r="5.2"/>
				<circle cx="160.7" cy="422" r="2.2"/>
			</g>
			<g id="C_GND1">
				<circle class="st3" cx="160.7" cy="439.6" r="5.2"/>
				<circle cx="160.7" cy="439.6" r="2.2"/>
			</g>
		</g>
		<g id="Motor_Pins">
			<g id="M_GND">
				<circle class="st3" cx="304.8" cy="389.3" r="5.2"/>
				<circle cx="304.8" cy="389.3" r="2.2"/>
			</g>
			<g id="M_VM">
				<circle class="st3" cx="288.4" cy="391.7" r="5.2"/>
				<circle cx="288.4" cy="391.7" r="2.2"/>
			</g>
			<g id="M1_GND">
				<circle class="st3" cx="272.1" cy="389.3" r="5.2"/>
				<circle cx="272.1" cy="389.3" r="2.2"/>
			</g>
			<g id="M1_OUT">
				<circle class="st3" cx="255.8" cy="391.7" r="5.2"/>
				<circle cx="255.8" cy="391.7" r="2.2"/>
			</g>
			<g id="M0_OUT">
				<circle class="st3" cx="239.4" cy="389.3" r="5.2"/>
				<circle cx="239.4" cy="389.3" r="2.2"/>
			</g>
			<g id="M0_GND">
				<circle class="st3" cx="223.1" cy="391.7" r="5.2"/>
				<circle cx="223.1" cy="391.7" r="2.2"/>
			</g>
		</g>
	</g>
</g>`;

    const BOARD_MINI3_BODY = `<g id="v3">
	<path id="Platine_mini3" class="st4" d="M534,293.8c-0.5,0.2-1,0.3-1.4,0.5c-0.6,0.2-1.2,0.4-1.9,0.5c-0.2,0-0.4,0.1-0.6,0.1
		c-0.6,0.2-1.3,0.3-2,0.4c-0.6,0.1-1.3,0.2-2,0.2c-0.2,0-0.5,0.1-0.7,0.1c-0.7,0-1.4,0.1-2.1,0.1c-17.2,0-31.1-13.9-31.1-31.1
		c0-5.2,1.3-10,3.5-14.3c1.5-2.8,3.3-5.4,5.6-7.6c0.2-0.2,0.4-0.4,0.5-0.5c0.3-0.4,0.7-0.7,1.1-1c0.3-0.2,0.6-0.5,0.9-0.7
		c0.5-0.4,1.1-0.9,1.6-1.2c0.5-0.4,1.1-0.8,1.7-1.1c0.5-0.3,1.1-0.6,1.6-0.9c0.5-0.3,1.1-0.6,1.7-0.8s1.2-0.5,1.7-0.7
		c1-0.4,1.9-0.7,2.9-0.9c0.4-0.1,0.7-0.2,1.1-0.3c0.7-0.2,1.5-0.3,2.3-0.5c0.9-0.1,1.8-0.2,2.7-0.3c0.3,0,0.6,0,0.9,0
		c0.4,0,0.8,0,1.2,0c1.4,0,2.8,0.1,4.2,0.3c0.3,0,0.6,0.1,0.9,0.1c1.6,0.3,3.3,0.7,4.8,1.2c-75.4-30.3-120.3-108.3-108.6-188.8
		c-0.1,0.7-0.3,1.5-0.5,2.2c-0.4,1.6-0.9,3.1-1.6,4.6c-0.2,0.5-0.5,1.1-0.8,1.6c-0.2,0.5-0.5,0.9-0.8,1.4c-0.3,0.6-0.7,1.2-1.1,1.7
		c-0.3,0.5-0.6,0.9-0.9,1.3c-0.4,0.5-0.7,1-1.1,1.4s-0.7,0.9-1.1,1.3c-0.4,0.4-0.8,0.8-1.2,1.2c-0.4,0.4-0.8,0.8-1.3,1.1
		c-0.4,0.4-0.9,0.7-1.3,1.1c-0.5,0.4-0.9,0.7-1.4,1s-1,0.6-1.5,0.9c-0.6,0.4-1.3,0.7-1.9,1.1c-0.6,0.3-1.3,0.6-2,0.9
		c-0.3,0.1-0.5,0.2-0.8,0.3c-2.7,1.1-5.5,1.7-8.4,2c-1,0.1-2,0.1-3,0.1c-6.3,0-12.1-1.9-17-5.1c-3.4-2.2-6.4-5.1-8.7-8.5
		c-3.4-5-5.4-11-5.4-17.6c0-0.6,0-1.1,0-1.7c0-0.3,0-0.6,0.1-0.9c0-0.5,0.1-1.1,0.2-1.6c0-0.3,0.1-0.7,0.1-1s0.1-0.7,0.2-1
		c0.1-0.6,0.3-1.2,0.5-1.8c0.2-0.8,0.4-1.5,0.7-2.3c0.1-0.3,0.2-0.5,0.3-0.7c0.1-0.3,0.2-0.6,0.4-0.9c0.3-0.6,0.5-1.2,0.8-1.8
		c0.3-0.6,0.6-1.2,1-1.7c1-1.7,2.2-3.3,3.5-4.9c0.4-0.5,0.9-1,1.3-1.4c0.2-0.2,0.5-0.5,0.7-0.7s0.5-0.5,0.7-0.7
		c0.5-0.4,1-0.9,1.5-1.2l0,0c0.5-0.4,1-0.8,1.6-1.1c0.5-0.3,0.9-0.6,1.4-0.9c-0.4,0.2-0.9,0.5-1.3,0.8c-0.7,0.4-1.4,0.9-2.1,1.5
		C351.5,34.8,324.7,48,296.1,55v45.4c0,0.7-0.4,1.4-1,1.7c-1,0.6-2.2,0.2-2.8-0.7c-0.4-0.6-1-1-1.8-1H239c-0.7,0-1.4,0.4-1.8,1
		c-0.4,0.6-1,1-1.7,1c-1.1,0-2.1-0.9-2.1-2V55c-27.3-6.7-52.9-18.9-75.2-36c0.5,0.5,1,1.1,1.5,1.6c0,0,0,0,0.1,0.1
		c0.5,0.6,0.9,1.2,1.4,1.8c0.2,0.3,0.5,0.7,0.7,1c0.3,0.4,0.5,0.9,0.8,1.3s0.5,0.9,0.7,1.3c1.4,2.6,2.4,5.4,2.9,8.4
		c0.1,0.3,0.1,0.6,0.2,1c0.1,0.6,0.2,1.1,0.2,1.7c0,0.4,0.1,0.8,0.1,1.2v0.1l0,0c0,0.6,0.1,1.2,0.1,1.8c0,17.3-14,31.3-31.2,31.3
		c-0.6,0-1.1,0-1.6,0c-1.3,0-2.5-0.2-3.7-0.4c-0.8-0.1-1.5-0.3-2.2-0.5c-1-0.2-1.9-0.5-2.8-0.8c-0.8-0.3-1.6-0.6-2.4-1
		c-0.7-0.3-1.5-0.7-2.2-1.1c-0.1,0-0.2-0.1-0.4-0.2c-0.7-0.4-1.3-0.8-2-1.2c-0.7-0.5-1.4-1-2.1-1.5c-0.5-0.4-1-0.8-1.4-1.2
		c-0.5-0.4-1-0.9-1.4-1.3c-1.4-1.4-2.7-3-3.8-4.6c-0.2-0.3-0.4-0.6-0.6-0.9c-0.3-0.4-0.5-0.8-0.7-1.2s-0.4-0.8-0.6-1.1
		c-0.2-0.4-0.4-0.8-0.6-1.3c-0.5-1-0.9-2-1.2-3c-0.1-0.3-0.2-0.6-0.3-1c-0.1-0.5-0.3-0.9-0.4-1.4c-0.2-0.7-0.3-1.3-0.4-2
		c0-0.3-0.1-0.6-0.1-0.9c0,0,0-0.1,0-0.2c0,0.2,0,0.3,0,0.5c12.1,80.3-32.2,158.4-107.2,189.2c1.8-0.5,3.8-0.9,5.7-1.1
		c0.5-0.1,1-0.1,1.5-0.1s1.1,0,1.6,0c8.5,0,16.3,3.4,21.9,9c5.8,5.7,9.4,13.6,9.4,22.3c0,17.3-14,31.3-31.3,31.3
		c-1.1,0-2.2,0-3.2-0.2c-0.5,0-1-0.1-1.6-0.2c-0.5-0.1-1-0.2-1.6-0.3c-1-0.2-2-0.5-3-0.8s-1.9-0.7-2.9-1.1c0.2,0.1,0.5,0.2,0.7,0.3
		C69.8,323,115.1,399.5,105.3,479c0.1-0.5,0.3-0.9,0.5-1.3c0.1-0.2,0.1-0.5,0.2-0.7c0.1-0.3,0.2-0.5,0.3-0.8c0.2-0.5,0.4-1,0.6-1.4
		c0-0.1,0.1-0.2,0.1-0.3c0.2-0.4,0.4-0.7,0.6-1.1c0,0,0-0.1,0.1-0.2c0.3-0.7,0.7-1.3,1.1-1.9c0.1-0.2,0.3-0.4,0.4-0.5
		c0-0.1,0.1-0.2,0.2-0.3c0.2-0.3,0.5-0.7,0.7-1c0.5-0.8,1.1-1.5,1.8-2.2c0,0,0.1-0.1,0.2-0.2c0-0.1,0.1-0.1,0.1-0.2
		c0.3-0.3,0.6-0.6,0.9-0.9l0,0c0.4-0.4,0.7-0.7,1.1-1.1s0.7-0.7,1.1-1s0.8-0.6,1.2-0.9c0.1-0.1,0.2-0.2,0.3-0.2
		c0.3-0.2,0.6-0.5,1-0.7c1.6-1.1,3.3-2,5-2.7c1.1-0.5,2.2-0.9,3.3-1.2c1.5-0.5,3-0.8,4.6-1.1c0.5-0.1,1.1-0.1,1.6-0.2
		c1.1-0.1,2.2-0.2,3.3-0.2s2.1,0,3.1,0.2c0.4,0,0.8,0.1,1.2,0.1s0.8,0.1,1.2,0.2s0.8,0.2,1.2,0.2c2,0.4,4,1.1,5.8,1.9
		c0.7,0.3,1.5,0.6,2.2,1.1c0.7,0.4,1.4,0.8,2.1,1.2c0.7,0.4,1.4,0.9,2,1.4c0.7,0.5,1.5,1.1,2.1,1.7c0.5,0.5,1,0.9,1.5,1.4
		c0,0,0,0,0.1,0.1c0.5,0.5,0.9,0.9,1.3,1.4c0.2,0.2,0.4,0.4,0.6,0.6c0.5,0.5,0.9,1.1,1.3,1.6c0.4,0.5,0.8,1.1,1.2,1.7
		c0.5,0.7,0.9,1.5,1.3,2.3c0.3,0.6,0.6,1.2,0.9,1.9c0.1,0.2,0.2,0.4,0.2,0.5c0.3,0.6,0.5,1.3,0.7,1.9c0,0.1,0.1,0.1,0.1,0.2
		c0.2,0.7,0.5,1.5,0.7,2.2l-4.4-24.8c-0.5-3.1,1.1-6.2,3.9-7.4l4.7-0.8c3.7-0.6,7.2,1.8,7.8,5.5l4.8,27.4c0.5,2.9,3.3,4.9,6.3,4.4
		l0,0l32-5.6l1.3-0.2c2.9-0.5,4.9-3.3,4.4-6.3l-4.6-26l-0.2-1.3c-0.6-3.7,1.8-7.2,5.5-7.8l4.4-0.8c3.3,0,6.1,2.3,6.7,5.6l4.8,27.1
		c0.6,3.4,3.7,5.9,7.2,5.6c9-0.7,18.1-0.7,27.2,0c3.5,0.3,6.6-2.1,7.2-5.6l4.8-27.1c0.5-3.1,3.2-5.4,6.3-5.6l4.7,0.8
		c3.7,0.6,6.1,4.2,5.5,7.8l-4.8,27.4c-0.5,2.9,1.4,5.7,4.4,6.3l0,0l32,5.7l1.3,0.2c3,0.5,5.8-1.5,6.3-4.4l4.6-26l0.2-1.3
		c0.6-3.7,4.2-6.1,7.8-5.5l4.4,0.8c3,1.1,4.8,4.3,4.3,7.5l-4.2,23.7c0.1-0.4,0.2-0.8,0.4-1.2c0.4-1.1,0.8-2.2,1.3-3.3
		c0.5-1.3,1.2-2.5,2-3.6c0.4-0.7,0.9-1.4,1.4-2.1c3-4.1,7.1-7.4,11.7-9.7c0.5-0.2,0.9-0.4,1.4-0.6s1-0.4,1.4-0.6
		c0.5-0.2,1-0.4,1.5-0.5c1.3-0.4,2.7-0.8,4.1-1c0.4-0.1,0.9-0.1,1.3-0.2c0.8-0.1,1.6-0.2,2.4-0.2c0.5,0,1.1,0,1.6,0s1.1,0,1.6,0
		s1.1,0.1,1.6,0.1s0.9,0.1,1.3,0.2c0.6,0.1,1.2,0.2,1.9,0.3c0.4,0.1,0.8,0.2,1.2,0.3c1.1,0.2,2.1,0.5,3.1,0.9
		c0.4,0.1,0.8,0.3,1.2,0.5c0.8,0.3,1.6,0.7,2.4,1.1c0.4,0.2,0.8,0.4,1.1,0.6c0.5,0.3,1,0.6,1.5,0.9c0.3,0.1,0.5,0.3,0.8,0.5
		c0.4,0.3,0.8,0.5,1.1,0.8c0.5,0.3,0.9,0.7,1.4,1.1c0.3,0.3,0.6,0.5,1,0.8c1.8,1.6,3.4,3.5,4.8,5.5c0.2,0.2,0.3,0.5,0.5,0.7
		c0.9,1.3,1.7,2.7,2.3,4.3c0.1,0.3,0.2,0.5,0.4,0.8c0.5,1.2,0.9,2.5,1.3,3.8c0.1,0.4,0.2,0.8,0.3,1.2
		C413.5,401.3,458.7,323.8,534,293.8z M318.5,444.9c0-0.6,0.2-1.1,0.6-1.5c0.4-0.5,1-0.8,1.8-0.8c1.3,0,2.4,1.1,2.4,2.4
		s-1.1,2.4-2.4,2.4C319.5,447.2,318.5,446.2,318.5,444.9z M191.7,450.3c-1.3,0-2.4-1.1-2.4-2.4s1.1-2.4,2.4-2.4
		c1.3,0,2.4,1.1,2.4,2.4C194.1,449.2,193,450.3,191.7,450.3z M200.2,448.7c-1.3,0-2.4-1.1-2.4-2.4s1.1-2.4,2.4-2.4
		c1.3,0,2.4,1.1,2.4,2.4S201.5,448.7,200.2,448.7z M208.6,447.3c-1.3,0-2.4-1.1-2.4-2.4s1.1-2.4,2.4-2.4s2.4,1.1,2.4,2.4
		C211,446.2,209.9,447.3,208.6,447.3z M329.3,444c1.3,0,2.4,1.1,2.4,2.4s-1.1,2.4-2.4,2.4s-2.4-1.1-2.4-2.4S328,444,329.3,444z
		 M337.8,445.5c1.3,0,2.4,1.1,2.4,2.4s-1.1,2.4-2.4,2.4s-2.4-1.1-2.4-2.4C335.5,446.6,336.5,445.5,337.8,445.5z M186.8,469.4
		c-0.1,0-0.3,0-0.4,0c-1.1,0-2.1-0.8-2.3-2l-1-5.3c-0.2-1.3,0.6-2.5,1.9-2.8c1.3-0.2,2.5,0.6,2.7,1.9l1,5.4
		C189,467.9,188.1,469.2,186.8,469.4z M220.5,463.4c-1.3,0.2-2.5-0.6-2.7-1.9l-1-5.4c-0.2-1.3,0.6-2.5,1.9-2.7
		c1.3-0.2,2.5,0.6,2.7,1.9l0.9,5.4C222.7,462,221.8,463.2,220.5,463.4z M311.7,461.5c-0.2,1.3-1.5,2.2-2.7,1.9
		c-1.3-0.2-2.2-1.5-1.9-2.7l0.9-5.4c0.2-1.3,1.5-2.2,2.7-1.9c1.3,0.2,2.2,1.5,1.9,2.7L311.7,461.5z M345.4,467.5
		c-0.2,1.3-1.5,2.2-2.7,1.9c-1.1-0.2-2-1.2-2-2.3c0-0.1,0-0.3,0-0.4l1-5.4c0.2-1.3,1.5-2.2,2.7-1.9c1.3,0.2,2.2,1.5,1.9,2.8
		L345.4,467.5z"/>
	<g id="parts">
		<g id="Silk-Screen_mini3" class="st5">
			<g id="Calliop-logo">
				<path class="st6" d="M110.4,344.8v-0.2l0.1-0.2l0.1-0.2l0.1-0.2l0.1-0.2l0.1-0.2l0.1-0.2l0.1-0.2l0.1-0.2l0.1-0.2l0.1-0.2
					l0.1-0.2l0.2-0.2l0.2-0.2l0.2-0.2l0.2-0.2l0.2-0.1l0.1-0.1l0.2-0.1l0.2-0.1l0.2-0.1l0.2-0.1l0.2-0.1l0.2-0.1l0.2-0.1l0.2-0.1
					l0.2-0.1h0.2h0.2h0.2h0.2h0.2h0.2h0.2h0.2h0.2h0.2l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1
					l0.2,0.1l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2v0.2v0.2v0.2v0.2v0.2v0.2
					v0.2v0.2v0.2l-0.1,0.2L119,346l-0.1,0.2l-0.1,0.2l-0.1,0.2l-0.1,0.2l-0.1,0.2l-0.1,0.2l-0.1,0.2l-0.1,0.2l-0.2,0.2l-0.2,0.2
					l-0.2,0.2l-0.2,0.1l-0.2,0.1l-0.1,0.1l0,0l-0.2,0.1l-0.2,0.1l-0.2,0.1l-0.2,0.1l-0.2,0.1l-0.1,0l-0.2,0.1l-0.2,0.1l-0.2,0.1
					h-0.2H115h-0.2h-0.2h-0.2h-0.2H114h-0.2h-0.2h-0.2l-0.2-0.1l-0.2-0.1l-0.2-0.1l-0.2-0.1l-0.2-0.1l-0.2-0.1l-0.2-0.1l-0.2-0.1
					l-0.2-0.1l-0.2-0.1l-0.1-0.2l-0.1-0.2l-0.1-0.2l-0.1-0.2l-0.1-0.2l-0.1-0.2l-0.1-0.2l-0.1-0.2l-0.1-0.2l-0.1-0.2l-0.1-0.2v-0.2
					v-0.2v-0.2v-0.2v-0.2V345l1.5,0.2v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1
					l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1l0.1-0.1
					l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0,0l0,0l0,0l0,0l0,0l0,0l0.1-0.1l0.1-0.1l0.1-0.1
					l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1v-0.1v-0.1v-0.1v-0.1v-0.1
					v-0.1v-0.1V344v-0.1v-0.1v-0.1v-0.1v-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1
					l-0.1-0.1l-0.1-0.1l-0.1-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1H115h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1l-0.1,0.1l-0.1,0.1
					l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1
					l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1v0.1v0.1v0.1v0.1l-1.5-0.2
					L110.4,344.8L110.4,344.8z"/>
				<path class="st6" d="M108.6,329.3l1.1,1.4l0.6,0.8l-0.9,0.6l-0.7-0.7l-5,3.7l1.5,2l0.9-0.6l0.8,1.1l-2,1.5l-4-5.3l0,0l0.9-0.6
					l0.7,0.6l5.1-3.8l-0.4-0.9l0.9-0.6L108.6,329.3z"/>
				<path class="st6" d="M116.9,360.5L116.9,360.5h0.2h0.1h0.1h0.1h0.1h0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1
					l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1
					v0.1v0.1v0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1
					h-0.1h-0.1H117h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1H116h-0.1h-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1
					l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1v-0.1v-0.1v-0.1V363v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1
					v-0.1v-0.1v-0.1V362v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0,0l0.1-0.1
					l0.1-0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1L116.9,360.5L116.9,360.5z"/>
				<path class="st6" d="M94.6,339.2l-9.9,7.4l2.7,3.6l-2.2,1.7l-7.5-10.1l2.2-1.7l2.8,3.8l7.7-5.7l-2.8-3.8l2.2-1.7l0,0L94.6,339.2
					z"/>
				<path class="st6" d="M97,333.5L97,333.5h0.2h0.1h0.1h0.1h0.1h0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1
					l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1
					v0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1
					h-0.1h-0.1H97h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1H96h-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1
					l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1v-0.1v-0.1v-0.1V336v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1
					v-0.1V335v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0,0l0.1-0.1l0.1-0.1
					h0.1h0.1h0.1h0.1H96h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1L97,333.5L97,333.5z"/>
				<path class="st6" d="M127.5,354.6l3.6,4.9l-2,1.5l-0.8-1.1l0.8-0.7l-1.7-2.3l-1.8,1.3l1.8,2.4l-1.1,0.8l0,0l-1.8-2.4l-2,1.5
					l1.7,2.3l0.9-0.6l0.8,1.1l-1.9,1.5l-4.2-5.6l0.9-0.6l0.7,0.6l5.1-3.8l-0.4-0.9l0.9-0.6L127.5,354.6z"/>
				<path class="st6" d="M92.4,308.8h0.2l0.2,0.1L93,309l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.1,0.2
					l0.1,0.2l0.1,0.2l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1
					v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1l-1.4,1.1l0,0l-0.8-1.1l0.8-0.9l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0
					l0,0l0,0l0,0l0,0l0,0l0,0v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1V312v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1l-0.1-0.1l-0.1-0.1
					l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1h-0.1h-0.1H93h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1
					h-0.1h-0.1H92h-0.1h-0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1L91,311l-0.2,0.2l-0.1,0.1l-0.1,0.1
					l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1L90,312l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1v0.1v0.1v0.1v0.1
					v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1v0.1v0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0
					l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0L91,314l0.8,1.1l-1.4,1.1h-0.1h-0.1h-0.1
					H90h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1H89l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1
					l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.2L87,314l-0.1-0.2
					l-0.1-0.2l-0.1-0.2l-0.1-0.2l-0.1-0.2l-0.1-0.2v-0.2v-0.2v-0.2V312v-0.2v-0.2v-0.2v-0.2V311l0.1-0.2l0.1-0.2l0.1-0.2l0.1-0.2
					l0.1-0.2l0.1-0.2l0.1-0.2l0.1-0.2l0.1-0.2l0.1-0.2l0.2-0.2l0.2-0.2l0.2-0.2l0.2-0.2l0.2-0.1l0.2-0.2l0.2-0.1l0.2-0.1l0.2-0.1
					l0.2-0.1l0.2-0.1l0.2-0.1l0.2-0.1l0.2-0.1l0.2-0.1h0.2h0.2H91h0.2h0.2h0.2h0.2H92L92.4,308.8z"/>
				<path class="st6" d="M115.1,337.9l-0.9,0.6l-0.7-0.7l-5.1,3.8l0.4,0.9l-0.9,0.6l-2.2-2.9l0.9-0.6l0.7,0.7l5.1-3.8l-0.4-0.9
					l0.9-0.6L115.1,337.9z"/>
				<path class="st6" d="M80.2,319.8L80.2,319.8l-1.2,1.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1H80h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1
					h0.1L81,321l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1L82,322l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1
					l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1
					v0.1v0.1l-0.1,0.1l-0.1,0.1h0.1h0.1h0.1H83h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1H84h0.1h0.1h0.1h0.1h0.1l0.1,0.1l0.1,0.1
					l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1v0.1v0.1v0.1v0.1
					v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1
					v0.1v0.1v0.1v0.1v0.1v0.1v0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1L85,332l0-1
					l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1L84,332l-8.9,6.6l-1.9-2.5l8.9-6.6l0.1-0.1
					l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1V328v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1
					v-0.1v-0.1v-0.1V327v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1V326l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0h-0.1h-0.1h-0.1h-0.1
					h-0.1h-0.1h-0.1h-0.1H82h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1H81h-0.1h-0.1l-9.4,7l-1.8-2.4l8.9-6.6l0.1-0.1l0.1-0.1
					l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1v-0.1V323v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1V322v-0.1v-0.1v-0.1
					v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1V321v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0h-0.1h-0.1H79h-0.1
					h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1H78h-0.1h-0.1h-0.1h-0.1h-0.1l-9.4,7l-1.9-2.5l12.1-9.1L80.2,319.8z"/>
				<path class="st6" d="M59.4,293.6h-1.1h-1.1l-1.1,0.1l-1.1,0.2l-1.1,0.2l-1.1,0.3l-1.1,0.3l-1.1,0.4l-1.1,0.4l-1.1,0.4l-1.1,0.5
					l-1.1,0.5l-1.1,0.5l-1,0.5l-2,1l-1.1-1.5l-0.4-0.6l-0.3-0.6l-0.3-0.6l-0.2-0.6l-0.2-0.6l-0.1-0.6l-0.1-0.6v-0.6V292l0.1-0.6
					l0.1-0.6l0.2-0.6l0.2-0.6l0.2-0.6l0.3-0.5l0.1-0.2l21.1,3l2.8,3.7l3.4-4.7l-6.1,1l-21.1-3l0.2-0.3l0.4-0.5l0.4-0.5l0.4-0.4
					l0.5-0.4l0.5-0.4l0.1-0.1l25,3.5v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.8,1.1
					l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1h0.1h0.1h0.1h0.1H71h0.1h0.1h0.1h0.1h0.1h0.1
					h0.1h0.1h0.1H72h0.1h0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l3.4-2.6l-3.8-5.1l-3.4,2.6l-0.1,0.1l-0.1,0.1l-0.1,0.1
					l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1v0.1v0.1v0.1v0.1v0.1v0.1l-25-3.5l0.4-0.2l0.5-0.3l0.6-0.2
					l0.6-0.2l0.6-0.2l0.6-0.1l0.6-0.1h0.7h0.7l0.7,0.1l0.7,0.2l11,3.2l5.2-3.9l1.6-1.2l0.3-0.2l0.3-0.2l0.3-0.2l0.3-0.2l0.4-0.2
					l0.4-0.1l0.4-0.1l0.4-0.1l0.4-0.1L71,281h0.4h0.4h0.4h0.4H73h0.4l0.4,0.1l0.4,0.1l0.4,0.1l0.4,0.1l0.3,0.1l0.3,0.1l0.3,0.2
					l0.3,0.2l0.3,0.2l0.3,0.2l0.3,0.2l0.3,0.2l0.3,0.3l0.3,0.3l0.3,0.3l0.2,0.3l0.2,0.3l0.2,0.3l0.2,0.3l0.2,0.3l0.2,0.4l0.1,0.4
					l0.1,0.4l0.1,0.4l0.1,0.4l0.1,0.4v0.4v0.4v0.4v0.4v0.4v0.4l-0.1,0.4l-0.1,0.4l-0.1,0.4l-0.1,0.4l-0.1,0.3l-0.1,0.3l-0.2,0.3
					l-0.2,0.3l-0.2,0.3l-0.2,0.3l-0.2,0.3l-0.2,0.3l-0.3,0.3l-0.3,0.3L77,295l-0.3,0.2l4.1-3.1l0.1-0.1l0.1-0.1h0.1h0.1h0.1h0.1h0.1
					h0.1h0.1h0.1h0.1H82h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1H83h0.1h0.1h0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1
					l0.1,0.1l4.1,5.4l0,0l0.1,0.1l0.1,0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1
					v0.1v0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-8,6L63.8,319l-0.2,0.2l-0.2,0.1l-0.2,0.1l-0.2,0.1
					l-0.2,0.1l-0.2,0.1l-0.2,0.1l-0.2,0.1L62,320h-0.2h-0.3h-0.3h-0.3h-0.3h-0.2h-0.2H60l-0.2-0.1l-0.2-0.1l-0.2-0.1l-0.2-0.1
					l-0.2-0.1l-0.2-0.1l-0.2-0.1l-0.2-0.1l-0.2-0.1l-0.2-0.2l-0.2-0.2l-0.2-0.2l-0.2-0.2l-0.2-0.2l-0.2-0.2l-1.6-2.1l1.6-1.6
					l1.6-1.7l0.8-0.9l0.8-0.9l0.7-0.9l0.7-0.9l0.7-1l0.6-1l0.6-1l0.5-1l0.5-1l0.4-1l0.3-1l0.3-1l-4.4-5.9l4.6,0.6l2.8,3.7l0.2-0.3
					l6.2,0.9l4.6,6.1l7.6-5.7l-4.6-6.1l-7.6,5.7l-6.2-0.9l2.6-5.3l-5.5,1.9l-4.6-0.6l-0.5-0.6L59.4,293.6z"/>
				<path class="st6" d="M58.2,296.1l-1.3,2.4l-1.3,2.4l-0.6,1.2l-0.6,1.2l-0.5,1.2l-0.5,1.2l-0.4,1.2l-0.4,1.1l-0.3,1.1l-0.2,1.1
					l-0.1,1v1l0,0l-6.1-8.1l13.6-10.2L58.2,296.1z"/>
				<path class="st6" d="M91.1,318.9l0.5,0.5l7.8-2.5l1.1,1.5l-4.6,6.8l0.3,0.6l-0.9,0.6l-1.8-2.4l0.9-0.6l0.5,0.4l0.7-1l-1.7-2.3
					l-1.2,0.4l0.3,0.6l-0.9,0.6l-1.8-2.4l0.4-0.3l4.5,0.6l1.2,1.6l1.9-2.7l0,0l-3.1,1.1l-4.5-0.6L91.1,318.9L91.1,318.9z"/>
				<path class="st6" d="M101.5,348.5L101.5,348.5l-1.6,1.4h0.2h0.2h0.2h0.2h0.2h0.2h0.2h0.2h0.2h0.2h0.2h0.2l0.2,0.1l0.2,0.1
					l0.2,0.1l0.2,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1
					l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1
					v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1l-0.1,0.1
					l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1
					l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.3,0.2l-7.6,5.7l-2-2.7l7.5-5.6l0.2-0.1
					l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1v-0.1v-0.1V354v-0.1
					v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1V353v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1V352v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1
					v-0.1v-0.1v-0.1V351l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1v-0.1v-0.1v-0.1l-0.1-0.1L102,350l-0.1-0.1l-0.1-0.1l-0.1-0.1
					l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1L101,349l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1h-0.1
					h-0.1h-0.1H100h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1H99h-0.1h-0.1h-0.1l-8.7,6.5l-2-2.7l12.1-9.1L101.5,348.5z"/>
				<path class="st6" d="M114.5,366.1l-9.9,7.4l2.7,3.6l-2.2,1.7l-7.5-10.1l2.2-1.7l2.8,3.8l7.7-5.7l-2.8-3.8l2.2-1.7l0,0
					L114.5,366.1z"/>
				<path class="st6" d="M103.8,322.9l1.1,1.4l0.6,0.8l-0.9,0.6l-0.7-0.7l-5,3.7l1.5,2l0.9-0.6l0.8,1.1l-2,1.5l-4-5.3l0,0l0.9-0.6
					l0.7,0.6l5.1-3.8l-0.4-0.9l0.9-0.6L103.8,322.9z"/>
				<path class="st6" d="M122.2,347.5l2,2.6l0,0l0,0l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2v0.1v0.1v0.1
					v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1
					L124,354l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1h-0.1h-0.1H123h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1
					h-0.1h-0.1H122l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1
					l-0.1-0.1l-0.9-1.2l-1.6,1.2l0.4,0.9l-0.9,0.6l-2.2-2.9l0.9-0.6l0.7,0.6l1.2-0.9l2.5,0.4l0.9,1.2l0.1,0.1l0.1,0.1l0.1,0.1
					l0.1,0.1l0.1,0.1l0.1,0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1
					h0.1h0.1h0.1l0.1-0.1l0.1-0.1l0.1-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1V352v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1
					v-0.1v-0.1V351v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1l-0.1-0.1l-0.9-1.2l-2.3,1.7l0,0l-2.5-0.4l3.9-2.9l-0.4-0.9l0.9-0.6
					L122.2,347.5z"/>
			</g>
			<path id="Motoren-Pinleiste_1" class="st6" d="M343.8,420.2h35.7v-15.9h-35.7"/>
			<path id="Motoren-Pinleiste_2" class="st6" d="M343.8,377.4h35.7v-19.9h-35.7V377.4z"/>
			<g id="Taste_B">
				<path class="st6" d="M373.2,222.8l0.1-1.3l0.2-1.3l0.2-1.3l0.3-1.3l0.4-1.2l0.4-1.2l0.5-1.2l0.5-1.2l0.6-1.1l0.6-1.1l0.7-1.1
					l0.7-1l0.8-1l0.8-0.9l0.9-0.9l0.9-0.9l0.9-0.8l1-0.8l1-0.7l1.1-0.7l1.1-0.6l1.1-0.6l1.2-0.5l1.2-0.5l1.2-0.4l1.2-0.4l1.3-0.3
					l1.3-0.2l1.3-0.2l1.3-0.1h1.3h1.3l1.3,0.1l1.3,0.2l1.3,0.2l1.3,0.3l1.2,0.4l1.2,0.4l1.2,0.5l1.2,0.5l1.1,0.6l1.1,0.6l1.1,0.7
					l1,0.7l1,0.8l0.9,0.8l0.9,0.9l0.9,0.9l0.8,0.9l0.8,1l0.7,1l0.7,1.1l0.6,1.1l0.6,1.1l0.5,1.2l0.5,1.2l0.4,1.2l0.4,1.2l0.3,1.3
					l0.2,1.3l0.2,1.3l0.1,1.3v1.3v1.3l-0.1,1.3l-0.2,1.3l-0.2,1.3l-0.3,1.3l-0.4,1.2l-0.4,1.2l-0.5,1.2l-0.5,1.2l-0.6,1.1l-0.6,1.1
					l-0.7,1.1l-0.7,1l-0.8,1l-0.8,0.9l-0.9,0.9l-0.9,0.9l-0.9,0.8l-1,0.8l-1,0.7l-1.1,0.7l-1.1,0.6l-1.1,0.6l-1.2,0.5l-1.2,0.5
					L407,249l-1.2,0.4l-1.3,0.3l-1.3,0.2l-1.3,0.2l-1.3,0.1h-1.3H398l-1.3-0.1l-1.3-0.2l-1.3-0.2l-1.3-0.3l-1.2-0.4l-1.2-0.4
					l-1.2-0.5l-1.2-0.5l-1.1-0.6l-1.1-0.6l-1.1-0.7l-1-0.7l-1-0.8l-0.9-0.8l-0.9-0.9l-0.9-0.9l-0.8-0.9l-0.8-1l-0.7-1l-0.7-1.1
					l-0.6-1.1l-0.6-1.1l-0.5-1.2l-0.5-1.2l-0.4-1.2l-0.4-1.2l-0.3-1.3l-0.2-1.3l-0.2-1.3l-0.1-1.3v-1.3h4.6v1.1l0.1,1.1l0.1,1.1
					l0.2,1.1l0.2,1l0.3,1l0.3,1l0.4,1l0.4,1l0.5,0.9l0.5,0.9l0.6,0.9l0.6,0.8l0.6,0.8l0.7,0.8l0.7,0.7l0.7,0.7l0.8,0.7l0.8,0.6
					l0.8,0.6l0.9,0.6l0.9,0.5l0.9,0.5l1,0.4l1,0.4l1,0.3l1,0.3l1,0.2l1.1,0.2l1.1,0.1l1.1,0.1h1.1h1.1l1.1-0.1l1.1-0.1l1.1-0.2
					l1-0.2l1-0.3l1-0.3l1-0.4l1-0.4l0.9-0.5l0.9-0.5l0.9-0.6l0.8-0.6l0.8-0.6l0.8-0.7l0.7-0.7l0.7-0.7l0.7-0.8l0.6-0.8l0.6-0.8
					l0.6-0.9l0.5-0.9l0.5-0.9l0.4-1l0.4-1l0.3-1l0.3-1l0.2-1l0.2-1.1l0.1-1.1l0.1-1.1v-1.1V223l-0.1-1.1l-0.1-1.1l-0.2-1.1l-0.2-1
					l-0.3-1l-0.3-1l-0.4-1l-0.4-1l-0.5-0.9l-0.5-0.9L417,212l-0.6-0.8l-0.6-0.8l-0.7-0.8l-0.7-0.7l-0.7-0.7l-0.8-0.7l-0.8-0.6
					l-0.8-0.6l-0.9-0.6l-0.9-0.5l-0.9-0.5l-1-0.4l-1-0.4l-1-0.3l-1-0.3l-1-0.2l-1.1-0.2l-1.1-0.1l-1.1-0.1h-1.1h-1.1l-1.1,0.1
					l-1.1,0.1l-1.1,0.2l-1,0.2l-1,0.3l-1,0.3l-1,0.4l-1,0.4l-0.9,0.5l-0.9,0.5l-0.9,0.6l-0.8,0.6l-0.8,0.6l-0.8,0.7l-0.7,0.7
					l-0.7,0.7l-0.7,0.8l-0.6,0.8l-0.6,0.8l-0.6,0.9l-0.5,0.9l-0.5,0.9l-0.4,1l-0.4,1l-0.3,1l-0.3,1l-0.2,1l-0.2,1.1l-0.1,1.1
					l-0.1,1.1v1.1h-4.6l0,0V222.8z"/>
				<path class="st6" d="M399.1,216.1h0.3h0.3h0.3h0.3h0.3h0.3l0.3,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1l0.2,0.1
					l0.2,0.1l0.2,0.1l0.2,0.1l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2l0.1,0.2v0.2v0.2v0.2v0.3
					v0.3v0.2v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1v0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1
					l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1l-0.1,0.1h0.1
					h0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1
					l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1v0.1v0.1v0.1v0.1v0.1v0.2v0.2v0.2v0.2v0.2v0.2v0.3v0.3v0.3v0.3v0.3l-0.1,0.2l-0.1,0.2
					l-0.1,0.2l-0.1,0.2l-0.1,0.2l-0.1,0.2l-0.1,0.2l-0.1,0.2l-0.1,0.2l-0.1,0.2l-0.2,0.2l-0.2,0.1l-0.2,0.1l-0.2,0.1l-0.2,0.1
					l-0.2,0.1l-0.2,0.1l-0.2,0.1l-0.2,0.1l-0.2,0.1l-0.2,0.1l-0.3,0.1h-0.3h-0.3h-0.3h-0.3h-0.3H394v-2.7h3.2h2.1h0.1h0.1h0.1h0.1
					h0.1h0.1h0.1h0.1h0.1h0.1h0.1h0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1V228
					v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.3v-0.2v-0.2v-0.2l-0.1-0.2l-0.1-0.2V226v-0.1v-0.1v-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1
					l-0.1-0.1h-0.1h-0.1h-0.1H400h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1H397l0,0v4.3h-3.2v-6.6h3.2h1.7h0.1h0.1h0.1h0.1h0.1h0.1h0.1
					h0.1h0.1h0.1h0.1h0.1h0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1l0.1-0.1v-0.1v-0.1v-0.1V222v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1
					v-0.1V221v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1v-0.1V220v-0.1v-0.1v-0.1v-0.1v-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1H400
					h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1h-0.1H399h-0.1h-0.1h-1.7v4h-3.2v-6.7h5.2V216.1z"/>
			</g>
			<g id="Taste_A">
				<path class="st6" d="M126.9,224.8l5,16h-3.4l-0.9-3.3l0,0h-4.4l-0.9,3.3H119l1.9-6h3.1h3l-1.5-5.7l-1.5,5.7h-3.1l3.1-10H126.9z"
					/>
				<path class="st6" d="M125.5,197.8l-34.9,34.9l34.9,34.9l34.9-34.9L125.5,197.8z M96.9,232.8l28.6-28.6l28.6,28.6l-28.6,28.6
					L96.9,232.8z"/>
			</g>
		</g>
		<g id="Mikrofon">
			<path class="st7" d="M460.8,273.6v17.2c0,0.7-0.6,1.4-1.4,1.4h-22.1c-0.7,0-1.4-0.6-1.4-1.4v-17.2c0-0.7,0.6-1.4,1.4-1.4h22.1
				C460.2,272.2,460.8,272.8,460.8,273.6z"/>
			<path class="st8" d="M460.2,274v16.3c0,0.7-0.6,1.3-1.3,1.3H438c-0.7,0-1.3-0.6-1.3-1.3V274c0-0.7,0.6-1.3,1.3-1.3h20.9
				C459.6,272.7,460.2,273.3,460.2,274z"/>
			<circle cx="441.9" cy="282.2" r="1.4"/>
		</g>
		<path class="st9" d="M405.3,314.3l18.7,14.6l-4.2,5.3l-18.7-14.6L405.3,314.3z"/>
		<path class="st9" d="M427.5,349.7l18.2,14.2l-6.3,8l-18.2-14.2L427.5,349.7z"/>
		<path class="st9" d="M455.5,313.9l18.2,14.2l-6.3,8l-18.2-14.2L455.5,313.9z"/>
		<path class="st9" d="M413.6,303.6l18.7,14.6l-4.2,5.3l-18.7-14.6L413.6,303.6z"/>
		<path class="st9" d="M354.3,301.2l-0.1,0.6l-0.3,0.7l-0.6,0.6l-0.7,0.3l-0.6,0.1h-11l-0.6-0.1l-0.7-0.3l-0.6-0.6l-0.3-0.7
			l-0.1-0.6v-10.9l0.1-0.6l0.3-0.7l0.6-0.6l0.7-0.3l0.6-0.1h10.9l0.6,0.1l0.7,0.3l0.6,0.6l0.3,0.7l0.1,0.6L354.3,301.2L354.3,301.2z
			"/>
		<path class="st9" d="M402.5,301.2l-0.1,0.6l-0.3,0.7l-0.6,0.6l-0.7,0.3l-0.6,0.1h-10.9l-0.6-0.1l-0.7-0.3l-0.6-0.6l-0.3-0.7
			l-0.1-0.6v-10.9l0.1-0.6l0.3-0.7l0.6-0.6l0.7-0.3l0.6-0.1h10.9l0.6,0.1l0.7,0.3l0.6,0.6l0.3,0.7l0.1,0.6V301.2z"/>
		<path class="st9" d="M402.5,253.1l-0.1,0.6l-0.3,0.7l-0.6,0.6l-0.7,0.3l-0.6,0.1h-10.9l-0.6-0.1L388,255l-0.6-0.6l-0.3-0.7
			l-0.1-0.6v-10.9l0.1-0.6l0.3-0.7l0.6-0.6l0.7-0.3l0.6-0.1h10.9l0.6,0.1l0.7,0.3l0.6,0.6l0.3,0.7l0.1,0.6V253.1z"/>
		<path class="st9" d="M354.3,253.1l-0.1,0.6l-0.3,0.7l-0.6,0.6l-0.7,0.3l-0.6,0.1h-11l-0.6-0.1l-0.7-0.3l-0.6-0.6l-0.3-0.7
			l-0.1-0.6v-10.9l0.1-0.6l0.3-0.7l0.6-0.6l0.7-0.3l0.6-0.1h10.9l0.6,0.1l0.7,0.3l0.6,0.6l0.3,0.7l0.1,0.6L354.3,253.1L354.3,253.1z
			"/>
		<path class="st9" d="M149.1,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M149.1,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M166.3,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M166.3,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M183.5,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M183.5,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M200.7,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M200.7,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M218,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M218,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M235.2,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M235.2,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M252.4,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M252.4,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M269.7,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M269.7,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M286.9,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M286.9,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M304.1,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M304.1,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M321.4,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M321.4,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M338.6,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M338.6,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M355.8,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M355.8,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M373,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M373,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M390.3,373.5h-6v-12.4h6V373.5z"/>
		<path class="st9" d="M390.3,416.7h-6v-12.4h6V416.7z"/>
		<path class="st9" d="M116.5,80.4h8.1v9.5h-8.1V80.4z"/>
		<path class="st9" d="M116.5,95.3h8.1v9.5h-8.1V95.3z"/>
		<path class="st9" d="M128.1,95.3h8.1v9.5h-8.1V95.3z"/>
		<path class="st9" d="M128.1,80.4h8.1v9.5h-8.1V80.4z"/>
		<g>
			<path id="Lautsprecher" d="M352.5,300.5h36.1c0.4,0,0.7-0.1,1-0.4l9.4-9.4
				c0.3-0.3,0.4-0.6,0.4-1v-36.1c0-0.4-0.1-0.7-0.4-1l-9.4-9.4c-0.3-0.3-0.6-0.4-1-0.4h-36.1c-0.4,0-0.7,0.1-1,0.4l-9.4,9.4
				c-0.3,0.3-0.4,0.6-0.4,1v36.1c0,0.4,0.1,0.7,0.4,1l9.4,9.4C351.8,300.3,352.1,300.5,352.5,300.5z"/>
		</g>
		<g id="Anwendungs-Prozessor">
			<path d="M183.6,289.2L152,320.8c-0.5,0.5-1.4,0.5-1.9,0l-31.6-31.6c-0.5-0.5-0.5-1.4,0-1.9l31.6-31.6c0.5-0.5,1.4-0.5,1.9,0
				l31.6,31.6C184.1,287.8,184.1,288.7,183.6,289.2z"/>
		</g>
		<path class="st9" d="M166.6,132.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H166.6z"/>
		<path class="st9" d="M169.4,132.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H169.4z"/>
		<path class="st9" d="M172.1,132.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H172.1z"/>
		<path class="st9" d="M174.8,132.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H174.8z"/>
		<path class="st9" d="M177.5,132.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H177.5z"/>
		<path class="st9" d="M180.2,132.6H180l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7v0.2
			l-0.1,0.1l-0.1,0.1H181H180.2z"/>
		<path class="st9" d="M182.9,132.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H182.9z"/>
		<path class="st9" d="M185.6,132.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H185.6z"/>
		<path class="st9" d="M188.3,132.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H188.3z"/>
		<path class="st9" d="M191.1,132.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H191.1z"/>
		<path class="st9" d="M193.4,126.3h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H193.4z"/>
		<path class="st9" d="M193.4,123.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H193.4z"/>
		<path class="st9" d="M193.4,120.9h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H193.4z"/>
		<path class="st9" d="M193.4,118.2h-0.2l-0.1-0.1L193,118v-0.2V117v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H193.4z"/>
		<path class="st9" d="M193.4,115.5h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H193.4z"/>
		<path class="st9" d="M193.4,112.8h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H193.4z"/>
		<path class="st9" d="M193.4,110.1h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H193.4z"/>
		<path class="st9" d="M193.4,107.4h-0.2l-0.1-0.1l-0.1-0.1V107v-0.8V106l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H193.4z"/>
		<path class="st9" d="M193.4,104.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H193.4z"/>
		<path class="st9" d="M193.4,101.9h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H193.4z"/>
		<path class="st9" d="M191.1,99.5h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H191.1z"/>
		<path class="st9" d="M188.3,99.5h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H188.3z"/>
		<path class="st9" d="M185.6,99.5h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H185.6z"/>
		<path class="st9" d="M182.9,99.5h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H182.9z"/>
		<path class="st9" d="M180.2,99.5H180l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1L180,94h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7v0.2
			l-0.1,0.1l-0.1,0.1H181L180.2,99.5L180.2,99.5z"/>
		<path class="st9" d="M177.5,99.5h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H177.5z"/>
		<path class="st9" d="M174.8,99.5h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H174.8z"/>
		<path class="st9" d="M172.1,99.5h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H172.1z"/>
		<path class="st9" d="M169.4,99.5h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H169.4z"/>
		<path class="st9" d="M166.6,99.5h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-4.7v-0.2l0.1-0.1l0.1-0.1h0.2h0.8h0.2l0.1,0.1l0.1,0.1v0.2v4.7v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H166.6z"/>
		<path class="st9" d="M160.4,101.9h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H160.4z"/>
		<path class="st9" d="M160.4,104.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H160.4z"/>
		<path class="st9" d="M160.4,107.4h-0.2l-0.1-0.1l-0.1-0.1V107v-0.8V106l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H160.4z"/>
		<path class="st9" d="M160.4,110.1h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H160.4z"/>
		<path class="st9" d="M160.4,112.8h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H160.4z"/>
		<path class="st9" d="M160.4,115.5h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H160.4z"/>
		<path class="st9" d="M160.4,118.2h-0.2l-0.1-0.1L160,118v-0.2V117v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8v0.2
			l-0.1,0.1l-0.1,0.1h-0.2H160.4z"/>
		<path class="st9" d="M160.4,120.9h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H160.4z"/>
		<path class="st9" d="M160.4,123.6h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H160.4z"/>
		<path class="st9" d="M160.4,126.3h-0.2l-0.1-0.1l-0.1-0.1v-0.2v-0.8v-0.2l0.1-0.1l0.1-0.1h0.2h4.7h0.2l0.1,0.1l0.1,0.1v0.2v0.8
			v0.2l-0.1,0.1l-0.1,0.1h-0.2H160.4z"/>
		<g>
			<path class="st8" d="M134.6,82.9V102c0,0.9-0.7,1.6-1.6,1.6h-13.7c-0.9,0-1.6-0.7-1.6-1.6V82.9c0-0.9,0.7-1.6,1.6-1.6H133
				C133.9,81.3,134.6,82,134.6,82.9z"/>
			<path class="st10" d="M134.4,83.1v18.7c0,0.9-0.7,1.6-1.6,1.6h-13.4c-0.9,0-1.6-0.7-1.6-1.6V83.1c0-0.9,0.7-1.6,1.6-1.6h13.4
				C133.7,81.6,134.4,82.3,134.4,83.1z"/>
		</g>
		<path class="st9" d="M169.6,328.3v8.1h-9.5v-8.1H169.6z"/>
		<path class="st9" d="M154.7,328.3v8.1h-9.5v-8.1H154.7z"/>
		<path class="st9" d="M154.7,339.8v8.1h-9.5v-8.1H154.7z"/>
		<path class="st9" d="M169.6,339.8v8.1h-9.5v-8.1H169.6z"/>
		<g>
			<path class="st8" d="M167.1,346.4H148c-0.9,0-1.6-0.7-1.6-1.6v-13.7c0-0.9,0.7-1.6,1.6-1.6h19.1c0.9,0,1.6,0.7,1.6,1.6v13.7
				C168.7,345.7,168,346.4,167.1,346.4z"/>
			<path class="st10" d="M166.9,346.2h-18.7c-0.9,0-1.6-0.7-1.6-1.6v-13.4c0-0.9,0.7-1.6,1.6-1.6h18.7c0.9,0,1.6,0.7,1.6,1.6v13.4
				C168.4,345.5,167.7,346.2,166.9,346.2z"/>
		</g>
		
			<rect x="83.4" y="213.8" transform="matrix(0.7071 -0.7071 0.7071 0.7071 -131.9361 131.7328)" class="st11" width="19.3" height="22.6"/>
		<g id="Interface-Prozessor">
			<g class="st12">
				<path class="st13" d="M184.9,130.4v2.2h-1.6v-2.2c0-0.4,0.4-0.8,0.8-0.8C184.5,129.6,184.9,130,184.9,130.4z"/>
				<path class="st13" d="M172.6,130.4v2.2H171v-2.2c0-0.4,0.4-0.8,0.8-0.8C172.2,129.6,172.6,130,172.6,130.4z"/>
				<path class="st13" d="M163.3,127.3c0,0.4-0.3,0.8-0.8,0.8h-2.2v-1.6h2.2C163,126.5,163.3,126.9,163.3,127.3z"/>
				<path class="st13" d="M163.3,124.2c0,0.4-0.3,0.8-0.8,0.8h-2.2v-1.6h2.2C163,123.5,163.3,123.8,163.3,124.2z"/>
				<path class="st13" d="M163.3,121.2c0,0.4-0.3,0.8-0.8,0.8h-2.2v-1.5h2.2C163,120.4,163.3,120.7,163.3,121.2z"/>
				<path class="st13" d="M163.3,118.1c0,0.4-0.3,0.8-0.8,0.8h-2.2v-1.5h2.2C163,117.3,163.3,117.6,163.3,118.1z"/>
				<path class="st13" d="M163.3,115c0,0.4-0.3,0.8-0.8,0.8h-2.2v-1.6h2.2C163,114.2,163.3,114.6,163.3,115z"/>
				<path class="st13" d="M163.3,111.9c0,0.4-0.3,0.8-0.8,0.8h-2.2v-1.6h2.2C163,111.1,163.3,111.5,163.3,111.9z"/>
				<path class="st13" d="M163.3,108.9c0,0.4-0.3,0.8-0.8,0.8h-2.2v-1.5h2.2C163,108.1,163.3,108.4,163.3,108.9z"/>
				<path class="st13" d="M163.3,105.8c0,0.4-0.3,0.8-0.8,0.8h-2.2V105h2.2C163,105,163.3,105.3,163.3,105.8z"/>
				<path class="st13" d="M163.3,102.7c0,0.4-0.3,0.8-0.8,0.8h-2.2v-1.6h2.2C163,101.9,163.3,102.3,163.3,102.7z"/>
				<path class="st13" d="M163.3,99.6c0,0.4-0.3,0.8-0.8,0.8h-2.2v-1.6h2.2C163,98.8,163.3,99.2,163.3,99.6z"/>
				<path class="st13" d="M172.6,94.3v2.2c0,0.4-0.4,0.8-0.8,0.8c-0.4,0-0.8-0.3-0.8-0.8v-2.2H172.6z"/>
				<path class="st13" d="M184.9,94.3v2.2c0,0.4-0.4,0.8-0.8,0.8c-0.4,0-0.8-0.3-0.8-0.8v-2.2H184.9z"/>
				<path class="st13" d="M194.1,130.4v2.2h-1.5v-2.2c0-0.4,0.3-0.8,0.8-0.8S194.1,130,194.1,130.4z"/>
				<path class="st13" d="M191,130.4v2.2h-1.5v-2.2c0-0.4,0.3-0.8,0.8-0.8C190.7,129.6,191,130,191,130.4z"/>
				<path class="st13" d="M187.9,130.4v2.2h-1.5v-2.2c0-0.4,0.3-0.8,0.8-0.8C187.6,129.6,187.9,130,187.9,130.4z"/>
				<path class="st13" d="M181.8,130.4v2.2h-1.5v-2.2c0-0.4,0.3-0.8,0.8-0.8C181.4,129.6,181.8,130,181.8,130.4z"/>
				<path class="st13" d="M178.7,130.4v2.2h-1.5v-2.2c0-0.4,0.3-0.8,0.8-0.8C178.4,129.6,178.7,130,178.7,130.4z"/>
				<path class="st13" d="M175.6,130.4v2.2h-1.5v-2.2c0-0.4,0.3-0.8,0.8-0.8S175.6,130,175.6,130.4z"/>
				<path class="st13" d="M169.5,130.4v2.2H168v-2.2c0-0.4,0.3-0.8,0.8-0.8C169.1,129.6,169.5,130,169.5,130.4z"/>
				<path class="st13" d="M166.4,130.4v2.2h-1.5v-2.2c0-0.4,0.3-0.8,0.8-0.8C166.1,129.6,166.4,130,166.4,130.4z"/>
				<path class="st13" d="M166.4,94.3v2.2c0,0.4-0.3,0.8-0.8,0.8c-0.4,0-0.8-0.3-0.8-0.8v-2.2H166.4z"/>
				<path class="st13" d="M169.5,94.3v2.2c0,0.4-0.3,0.8-0.8,0.8c-0.4,0-0.8-0.3-0.8-0.8v-2.2H169.5z"/>
				<path class="st13" d="M198.6,123.5v1.6h-2.2c-0.4,0-0.8-0.4-0.8-0.8s0.4-0.8,0.8-0.8C196.4,123.5,198.6,123.5,198.6,123.5z"/>
				<path class="st13" d="M198.6,120.4v1.5h-2.2c-0.4,0-0.8-0.3-0.8-0.8c0-0.4,0.4-0.8,0.8-0.8h2.2V120.4z"/>
				<path class="st13" d="M175.6,94.3v2.2c0,0.4-0.3,0.8-0.8,0.8S174,97,174,96.5v-2.2H175.6z"/>
				<path class="st13" d="M198.6,117.3v1.5h-2.2c-0.4,0-0.8-0.3-0.8-0.8c0-0.4,0.4-0.8,0.8-0.8h2.2V117.3z"/>
				<path class="st13" d="M178.7,94.3v2.2c0,0.4-0.3,0.8-0.8,0.8c-0.4,0-0.8-0.3-0.8-0.8v-2.2H178.7z"/>
				<path class="st13" d="M198.6,114.2v1.6h-2.2c-0.4,0-0.8-0.4-0.8-0.8s0.4-0.8,0.8-0.8C196.4,114.2,198.6,114.2,198.6,114.2z"/>
				<path class="st13" d="M181.8,94.3v2.2c0,0.4-0.3,0.8-0.8,0.8c-0.4,0-0.8-0.3-0.8-0.8v-2.2H181.8z"/>
				<path class="st13" d="M198.6,111.1v1.6h-2.2c-0.4,0-0.8-0.4-0.8-0.8s0.4-0.8,0.8-0.8C196.4,111.1,198.6,111.1,198.6,111.1z"/>
				<path class="st13" d="M198.6,108.1v1.5h-2.2c-0.4,0-0.8-0.3-0.8-0.8c0-0.4,0.4-0.8,0.8-0.8h2.2V108.1z"/>
				<path class="st13" d="M187.9,94.3v2.2c0,0.4-0.3,0.8-0.8,0.8c-0.4,0-0.8-0.3-0.8-0.8v-2.2H187.9z"/>
				<path class="st13" d="M198.6,105v1.5h-2.2c-0.4,0-0.8-0.3-0.8-0.8s0.4-0.8,0.8-0.8h2.2V105z"/>
				<path class="st13" d="M191,94.3v2.2c0,0.4-0.3,0.8-0.8,0.8c-0.4,0-0.8-0.3-0.8-0.8v-2.2H191z"/>
				<path class="st13" d="M198.6,101.9v1.6h-2.2c-0.4,0-0.8-0.4-0.8-0.8s0.4-0.8,0.8-0.8C196.4,101.9,198.6,101.9,198.6,101.9z"/>
				<path class="st13" d="M194.1,94.3v2.2c0,0.4-0.3,0.8-0.8,0.8s-0.8-0.3-0.8-0.8v-2.2H194.1z"/>
				<path class="st13" d="M198.6,98.8v1.6h-2.2c-0.4,0-0.8-0.4-0.8-0.8s0.4-0.8,0.8-0.8C196.4,98.8,198.6,98.8,198.6,98.8z"/>
				<path class="st13" d="M198.6,126.5v1.6h-2.2c-0.4,0-0.8-0.4-0.8-0.8s0.4-0.8,0.8-0.8H198.6z"/>
			</g>
			<path d="M196.3,97.9v31c0,0.7-0.6,1.4-1.4,1.4h-31c-0.7,0-1.4-0.6-1.4-1.4v-31c0-0.7,0.6-1.4,1.4-1.4h31
				C195.7,96.6,196.3,97.2,196.3,97.9z"/>
		</g>
	</g>
	<g id="interaktiv">
		<g id="RGB_LED_RIGHT">
			<rect id="rgbledright" x="282.7" y="300.9" class="st2" width="25.6" height="25.6"/>
			<circle id="rgbledrightcircle" class="st14" cx="295.5" cy="313.7" r="9.9"/>
		</g>
		<g id="RGB_LED_LEFT">
			<rect id="rgbledleft" x="223.1" y="300.9" class="st2" width="25.6" height="25.6"/>
			<circle id="rgbledleftcircle" class="st14" cx="235.9" cy="313.7" r="9.9"/>
		</g>
		<g id="JacDac">
					<path class="st8" d="M195,449.4c0.3-0.7,0.5-1.4,0.3-2.2c-0.3-1.9-2-3.2-3.8-3.1c-0.2,0-0.3,0-0.5,0c-2,0.4-3.4,2.3-3,4.3
						c0.1,0.8,0.5,1.5,1,2l4,22.7c0.3,1.5,1.7,2.5,3.2,2.2l0.7-0.1c1.5-0.3,2.5-1.7,2.2-3.2L195,449.4z M191.7,450.3
						c-1.3,0-2.4-1.1-2.4-2.4s1.1-2.4,2.4-2.4c1.3,0,2.4,1.1,2.4,2.4C194.1,449.2,193,450.3,191.7,450.3z"/>
					<path class="st8" d="M203.5,447.9L203.5,447.9c0.3-0.7,0.5-1.4,0.3-2.2c-0.4-2-2.3-3.4-4.3-3s-3.4,2.3-3,4.3
						c0.1,0.8,0.5,1.5,1,2l4.6,26c0.3,1.5,1.7,2.5,3.2,2.2l0.7-0.1c1.5-0.3,2.5-1.7,2.2-3.2L203.5,447.9z M200.2,448.7
						c-1.3,0-2.4-1.1-2.4-2.4s1.1-2.4,2.4-2.4c1.3,0,2.4,1.1,2.4,2.4S201.5,448.7,200.2,448.7z"/>
					<path class="st8" d="M212,446.4c0.3-0.7,0.5-1.4,0.3-2.2c-0.1-0.8-0.5-1.5-1.1-2c-0.8-0.8-2-1.2-3.3-1c-2,0.4-3.4,2.3-3,4.3
						c0.1,0.8,0.5,1.5,1,2l4.6,26c0.3,1.5,1.7,2.5,3.2,2.2l0.7-0.1c1.5-0.3,2.5-1.7,2.2-3.1L212,446.4z M208.6,447.3
						c-1.3,0-2.4-1.1-2.4-2.4s1.1-2.4,2.4-2.4s2.4,1.1,2.4,2.4C211,446.2,209.9,447.3,208.6,447.3z"/>
					<path class="st8" d="M330,442.7c-2-0.4-4,1-4.3,3c-0.1,0.8,0,1.5,0.3,2.2l0,0l-4.6,26c-0.3,1.5,0.7,2.9,2.2,3.2l0.7,0.1
						c1.5,0.3,2.9-0.7,3.2-2.2l4.6-26c0.5-0.5,0.9-1.2,1-2C333.4,445,332,443.1,330,442.7z M329.3,448.7c-1.3,0-2.4-1.1-2.4-2.4
						s1.1-2.4,2.4-2.4s2.4,1.1,2.4,2.4S330.6,448.7,329.3,448.7z"/>
					<path class="st8" d="M321.5,441.2c-1.3-0.2-2.6,0.2-3.4,1.2c-0.5,0.5-0.8,1.1-0.9,1.9s0,1.5,0.3,2.2l-4,22.7
						c-0.3,1.5,0.7,2.9,2.2,3.2l0.7,0.1c1.5,0.2,2.9-0.7,3.2-2.2l4-22.7c0.5-0.5,0.9-1.2,1-2C324.9,443.5,323.5,441.5,321.5,441.2z
						 M320.8,447.2c-1.3,0-2.4-1.1-2.4-2.4c0-0.6,0.2-1.1,0.6-1.5c0.4-0.5,1-0.8,1.8-0.8c1.3,0,2.4,1.1,2.4,2.4
						S322.2,447.2,320.8,447.2z"/>
					<path class="st8" d="M338.5,444.2c-0.2,0-0.4,0-0.6,0c-1.8,0-3.4,1.3-3.7,3.1c-0.1,0.8,0,1.5,0.3,2.2l-4.6,26
						c-0.3,1.5,0.7,2.9,2.2,3.1l0.7,0.1c1.5,0.3,2.9-0.7,3.1-2.2l4.6-26c0.5-0.5,0.9-1.2,1-2C341.9,446.5,340.5,444.5,338.5,444.2z
						 M337.8,450.3c-1.3,0-2.4-1.1-2.4-2.4s1.1-2.4,2.4-2.4s2.4,1.1,2.4,2.4C340.2,449.2,339.1,450.3,337.8,450.3z"/>
		</g>
		<g id="Steckleiste">
			<g id="Aussen">
				<path class="st8" d="M141.9,394.6v8.6h8.6v-8.6H141.9z M149.1,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M159.1,394.6v8.6h8.6v-8.6H159.1z M166.3,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M176.3,394.6v8.6h8.6v-8.6H176.3z M183.6,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M193.5,394.6v8.6h8.6v-8.6H193.5z M200.8,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M210.8,394.6v8.6h8.6v-8.6H210.8z M218,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M228,394.6v8.6h8.6v-8.6H228z M235.2,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M245.2,394.6v8.6h8.6v-8.6H245.2z M252.4,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M262.4,394.6v8.6h8.6v-8.6H262.4z M269.6,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M279.6,394.6v8.6h8.6v-8.6H279.6z M286.8,401.8H281V396h5.9v5.8H286.8z"/>
				<path class="st8" d="M296.8,394.6v8.6h8.6v-8.6H296.8z M304,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M314,394.6v8.6h8.6v-8.6H314z M321.2,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M331.2,394.6v8.6h8.6v-8.6H331.2z M338.4,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M348.4,394.6v8.6h8.6v-8.6H348.4z M355.7,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M365.6,394.6v8.6h8.6v-8.6H365.6z M372.9,401.8H367V396h5.9V401.8z"/>
				<path class="st8" d="M382.9,394.6v8.6h8.6v-8.6H382.9z M390.1,401.8h-5.9V396h5.9V401.8z"/>
				<path class="st8" d="M141.9,377.4v8.6h8.6v-8.6H141.9z M149.1,384.6h-5.9v-5.9h5.9V384.6z"/>
				<path class="st8" d="M159.1,377.4v8.6h8.6v-8.6H159.1z M166.3,384.6h-5.9v-5.9h5.9V384.6z"/>
				<path class="st8" d="M176.3,377.4v8.6h8.6v-8.6H176.3z M183.6,384.6h-5.9v-5.9h5.9V384.6z"/>
				<path class="st8" d="M193.5,377.4v8.6h8.6v-8.6H193.5z M200.8,384.6h-5.9v-5.9h5.9V384.6z"/>
				<path class="st8" d="M210.8,377.4v8.6h8.6v-8.6H210.8z M218,384.6h-5.9v-5.9h5.9V384.6z"/>
				<path class="st8" d="M228,377.4v8.6h8.6v-8.6H228z M235.2,384.6h-5.9v-5.9h5.9V384.6z"/>
				<path class="st8" d="M245.2,377.4v8.6h8.6v-8.6H245.2z M252.4,384.6h-5.9v-5.9h5.9V384.6z"/>
				<path class="st8" d="M262.4,377.4v8.6h8.6v-8.6H262.4z M269.6,384.6h-5.9v-5.9h5.9V384.6z"/>
				<path class="st8" d="M279.6,377.4v8.6h8.6v-8.6H279.6z M286.8,384.6H281v-5.9h5.9v5.9H286.8z"/>
				<path class="st8" d="M296.8,377.4v8.6h8.6v-8.6H296.8z M304,384.6h-5.9v-5.9h5.9V384.6z"/>
				<path class="st8" d="M314,377.4v8.6h8.6v-8.6H314z M321.2,384.6h-5.9v-5.9h5.9V384.6z"/>
				<path class="st8" d="M331.2,377.4v8.6h8.6v-8.6H331.2z M338.4,384.6h-5.9v-5.9h5.9V384.6z"/>
				<path class="st8" d="M348.4,377.4v8.6h8.6v-8.6H348.4z M355.7,384.6h-5.9v-5.9h5.9V384.6z"/>
				<path class="st8" d="M365.6,377.4v8.6h8.6v-8.6H365.6z M372.9,384.6H367v-5.9h5.9V384.6z"/>
				<path class="st8" d="M382.9,377.4v8.6h8.6v-8.6H382.9z M390.1,384.6h-5.9v-5.9h5.9V384.6z"/>
				<rect id="C_P9" x="224.8" y="374.2" class="st15" width="15" height="15"/>
				<rect id="C_P11" x="241.9" y="374.2" class="st15" width="15" height="15"/>
				<rect id="C_P13" x="259" y="374.2" class="st15" width="15" height="15"/>
				<rect id="C_P15" x="276.2" y="374.2" class="st15" width="15" height="15"/>
				<rect id="C_P17" x="293.7" y="374.2" class="st15" width="15" height="15"/>
				<rect id="C_VCC1" x="138.7" y="374.2" class="st15" width="15" height="15"/>
                <rect id="C_VCC2" x="138.7" y="374.2" class="st15" width="15" height="15"/>
				<rect id="C_P1" x="155.8" y="374.2" class="st15" width="15" height="15"/>
				<rect id="C_P3" x="172.9" y="374.2" class="st15" width="15" height="15"/>
				<rect id="C_P5" x="190.1" y="374.2" class="st15" width="15" height="15"/>
				<rect id="C_P7" x="207.6" y="374.2" class="st15" width="15" height="15"/>
				<rect id="C_P19" x="310.9" y="374.2" class="st15" width="15" height="15"/>
				<rect id="C_P8" x="224.8" y="391.4" class="st15" width="15" height="15"/>
				<rect id="C_P10" x="241.9" y="391.4" class="st15" width="15" height="15"/>
				<rect id="C_P12" x="259" y="391.4" class="st15" width="15" height="15"/>
				<rect id="C_GND1" x="138.7" y="391.4" class="st15" width="15" height="15"/>
				<rect id="C_P0" x="155.8" y="391.4" class="st15" width="15" height="15"/>
				<rect id="C_P2" x="172.9" y="391.4" class="st15" width="15" height="15"/>
				<rect id="C_P4" x="190.1" y="391.4" class="st15" width="15" height="15"/>
				<rect id="C_P6" x="207.6" y="391.4" class="st15" width="15" height="15"/>
				<rect id="C_P14" x="276.2" y="391.4" class="st15" width="15" height="15"/>
				<rect id="C_P16" x="293.7" y="391.4" class="st15" width="15" height="15"/>
				<rect id="C_P18" x="310.9" y="391.4" class="st15" width="15" height="15"/>
				<rect id="C_P20" x="327.9" y="391.4" class="st15" width="15" height="15"/>
				<rect id="M1_OUT" x="345.1" y="374.2" class="st15" width="15" height="15"/>
				<rect id="M1_GND" x="361.9" y="374.2" class="st15" width="15" height="15"/>
				<rect id="M0_OUT" x="345.1" y="391.4" class="st15" width="15" height="15"/>
                <rect id="M_GND" x="361.9" y="391.4" class="st15" width="15" height="15"/>
				<rect id="M0_GND" x="361.9" y="391.4" class="st15" width="15" height="15"/>
				<rect id="M_VM" x="379.1" y="391.4" class="st15" width="15" height="15"/>
				<rect id="C_GND2" x="327.9" y="374.2" class="st15" width="15" height="15"/>
                <rect id="C_GND3" x="327.9" y="374.2" class="st15" width="15" height="15"/>
                <rect id="C_GND4" x="327.9" y="374.2" class="st15" width="15" height="15"/>
					<rect x="379.1" y="374.2" class="st15" width="15" height="15"/>
			</g>
			<path d="M136.3,374.7v31.2c0,0.7,0.6,1.4,1.4,1.4h258.1c0.7,0,1.4-0.6,1.4-1.4v-31.2c0-0.7-0.6-1.4-1.4-1.4H137.6
				C136.9,373.4,136.3,374,136.3,374.7z M270.9,377.4v8.6h-8.6v-8.6H270.9z M150.5,403.2h-8.6v-8.6h8.6V403.2z M150.5,386h-8.6v-8.6
				h8.6V386z M167.7,403.2h-8.6v-8.6h8.6V403.2z M167.7,386h-8.6v-8.6h8.6V386z M184.9,403.2h-8.6v-8.6h8.6V403.2z M184.9,386h-8.6
				v-8.6h8.6V386z M202.1,403.2h-8.6v-8.6h8.6V403.2z M202.1,386h-8.6v-8.6h8.6V386z M219.3,403.2h-8.6v-8.6h8.6V403.2z M219.3,386
				h-8.6v-8.6h8.6V386z M236.5,403.2H228v-8.6h8.6v8.6H236.5z M236.5,386H228v-8.6h8.6v8.6H236.5z M253.7,403.2h-8.6v-8.6h8.6V403.2
				z M253.7,386h-8.6v-8.6h8.6V386z M270.9,403.2h-8.6v-8.6h8.6V403.2z M288.2,403.2h-8.6v-8.6h8.6V403.2z M288.2,386h-8.6v-8.6h8.6
				V386z M305.4,403.2h-8.6v-8.6h8.6V403.2z M305.4,386h-8.6v-8.6h8.6V386z M322.6,403.2H314v-8.6h8.6V403.2z M322.6,386H314v-8.6
				h8.6V386z M339.8,403.2h-8.6v-8.6h8.6V403.2z M339.8,386h-8.6v-8.6h8.6V386z M357,403.2h-8.6v-8.6h8.6V403.2z M357,386h-8.6v-8.6
				h8.6V386z M374.2,403.2h-8.6v-8.6h8.6V403.2z M374.2,386h-8.6v-8.6h8.6V386z M391.4,403.2h-8.6v-8.6h8.6V403.2z M391.4,386h-8.6
				v-8.6h8.6V386z"/>
		</g>
	</g>
</g>`;


    const pinNames = [
        "TOUCH_P0", "TOUCH_P1", "TOUCH_P2", "TOUCH_P3", "TOUCH_LOGO", "TOUCH_GND", "TOUCH_VCC",
        "BTN_A", "BTN_B",
        "C_GND1", "C_GND2", "C_GND3", "C_GND4", "C_VCC1", "C_VCC2",
        "C_P0", "C_P2", "C_P4", "C_P6", "C_P8", "C_P10", "C_P12", "C_P14", "C_P16", "C_P18",
        "C_P1", "C_P3", "C_P5", "C_P7", "C_P9", "C_P11", "C_P13", "C_P15", "C_P17", "C_P19",
        "M0_GND", "M1_GND", "M_GND", "M0_OUT", "M1_OUT", "M_VM",
        "G_A0_GND", "G_A0_VCC", "G_A0_SDA", "G_A0_SCL",
        "G_A1_RX", "G_A1_TX", "G_A1_VCC", "G_A1_GND"
    ];
    const pinTitles = [
        "P0", "P1", "P2", "P3", "Logo", "GND", "+3v3",
        "Button A", "Button B",
        "GND", "GND", "GND", "GND", "+3v3", "+3v3",
        "P0", "P2", "C4", "C6", "C8", "C10", "C12", "C14", "C16", "C18",
        "P1", "P3", "C5", "C7", "C9", "C11", "C13", "C15", "C17", "C19",
        "Motor 0 -", "Motor 1 -", "GND", "MOTOR 0 +", "MOTOR 1 +", "MOTOR VM",
        "GND", "+3v3", "C18, A0 SDA", "C19, A0 SCL",
        "C16, A1 RX", "C17, A1 TX", "+3v3", "GND"
    ];
    const MB_WIDTH = 530;
    const MB_HEIGHT = 630;
    export interface IBoardTheme {
        accent?: string;
        display?: string;
        pin?: string;
        pinTouched?: string;
        pinActive?: string;
        ledOn?: string;
        ledOff?: string;
        buttonOuter?: string;
        buttonUps: string[];
        buttonDown?: string;
        virtualButtonOuter?: string;
        virtualButtonUp?: string;
        virtualButtonDown?: string;
        lightLevelOn?: string;
        lightLevelOff?: string;
        soundLevelOn?: string;
        soundLevelOff?: string;
    }

    export var themes: IBoardTheme[] = ["#3ADCFE"].map(accent => {
        return {
            accent: accent,
            pin: "#F6C426",
            pinTouched: "#FFA500",
            pinActive: "#E6007D",
            ledOn: "#ff5555",
            ledOff: "#e0e1e2",
            buttonOuter: "#979797",
            buttonUps: ["#186A8C", "#D82E50"],
            buttonDown: "#FFA500",
            virtualButtonDown: "#FFA500",
            virtualButtonOuter: "#333",
            virtualButtonUp: "#fff",
            lightLevelOn: "#555",
            lightLevelOff: "yellow",
            soundLevelOn: "#3ADCFE",
            soundLevelOff: "#555"
        }
    });

    export function randomTheme(): IBoardTheme {
        return themes[Math.floor(Math.random() * themes.length)];
    }

	class MiniBoard extends pxsim.BaseBoard {
		hardwareVersion?: number = 3;
	}

	class MiniRuntime extends pxsim.Runtime {
		board: MiniBoard;
	}

    export interface IBoardProps {
        runtime?: MiniRuntime;
        theme?: IBoardTheme;
        wireframe?: boolean;
        disableTilt?: boolean;
    }

    export class MicrobitBoardSvg implements BoardView {
        public element: SVGSVGElement;
        private style: SVGStyleElement;
        private defs: SVGDefsElement;
        private g: SVGGElement;
        private pkg: SVGPathElement;
        private logos: SVGElement[];
        private headg: SVGGElement;
        private head: SVGGElement;
        private headParts: SVGElement;
        private headInitialized = false;
        private heads: SVGElement[];
        private headText: SVGTextElement;
        private display: SVGElement;
        private buttons: SVGElement[];
        private buttonsOuter: SVGElement[];
        // private buttonABText: SVGTextElement;
        private pins: SVGElement[];
        private pinGradients: SVGLinearGradientElement[];
        private pinTexts:{ [key: number]: SVGTextElement };
        private ledsOuter: SVGElement[];
        private leds: SVGElement[];
        private microphoneLed: SVGElement;
        private systemLed: SVGCircleElement;
        private antenna: SVGPolylineElement;
        private rssi: SVGTextElement;
        private lightLevelButton: SVGCircleElement;
        private lightLevelGradient: SVGLinearGradientElement;
        private lightLevelText: SVGTextElement;
        private thermometerGradient: SVGLinearGradientElement;
        private thermometer: SVGRectElement;
        private thermometerText: SVGTextElement;
        private soundLevelGradient: SVGLinearGradientElement;
        private soundLevel: SVGRectElement;
        private soundLevelText: SVGTextElement;
        private soundLevelIcon: SVGTextElement;
        private shakeButton: SVGElement;
        // private shakeText: SVGTextElement;
        public board: pxsim.DalBoard;
        private domHardwareVersion = 1;
        private rgbLed: SVGElement;
		private rgbLedLeft: SVGElement;
		private rgbLedRight: SVGElement;
        private pinNmToCoord: Map<Coord> = {
			"EXT_PWR": [
				92.30997467041016,
				-42.92474937438965
			],
			"SPKR": [
				106.44635391235352,
				-16.370698928833008
			],
			"BTN_A": [
				93.8138427734375,
				56.631452560424805
			],
			"BTN_B": [
				204.92835235595703,
				56.631452560424805
			],
			// rings
			"TOUCH_P0": [
				56.002254486083984,
				95.43130111694336
			],
			"TOUCH_P1": [
				103.00893783569336,
				175.82388305664062
			],
			"TOUCH_P2": [
				195.90512084960938,
				175.3082733154297
			],
			"TOUCH_P3": [
				241.79466247558594,
				95.3883285522461
			],
			"TOUCH_GND": [
				103.00893783569336,
				14.86682915687561
			],
			"TOUCH_VCC": [
				195.64733123779297,
				14.86682915687561
			],
			"C_GND1": [
				113.1493148803711,
				159.83989715576172
			],
			"C_GND2": [
				150.27342987060547,
				159.83989715576172
			],
			"C_GND3": [
				150.27342987060547,
				153.5666275024414
			],
			"C_GND4": [
				187.39752960205078,
				153.5666275024414
			],
			"C_VCC1": [
				187.39752960205078,
				159.83989715576172
			],
			"C_VCC2": [
				113.1922836303711,
				153.5666275024414
			],
			"C_P0": [
				119.33667373657227,
				159.83989715576172
			],			
			"C_P2": [
				125.52401733398438,
				159.83989715576172
			],
			"C_P4": [
				131.71136474609375,
				159.83989715576172
			],
			"C_P6": [
				137.89871978759766,
				159.83989715576172
			],
			"C_P8": [
				144.08607482910156,
				159.83989715576172
			],
			"C_P10": [
				156.46077728271484,
				159.83989715576172
			],
			"C_P12": [
				162.64812469482422,
				159.83989715576172
			],
			"C_P14": [
				168.83545684814453,
				159.83989715576172
			],
			"C_P16": [
				175.02281951904297,
				159.83989715576172
			],
			"C_P20": [
				181.2101821899414,
				159.83989715576172
			],
			"C_P1": [
				119.379638671875,
				153.5666275024414
			],
			"C_P3": [
				125.56698226928711,
				153.5666275024414
			],
			"C_P5": [
				131.71136474609375,
				153.5666275024414
			],
			"C_P7": [
				137.89871978759766,
				153.5666275024414
			],
			"C_P9": [
				144.08607482910156,
				153.5666275024414
			],
			"C_P11": [
				156.46077728271484,
				153.5666275024414
			],
			"C_P13": [
				162.64812469482422,
				153.5666275024414
			],
			"C_P15": [
				168.83545684814453,
				153.5666275024414
			],
			"C_P21": [
				175.02281951904297,
				153.5666275024414
			],
			"C_P19": [
				181.2101821899414,
				153.5666275024414
			],
			"M0_GND": [
				137.89871978759766,
				141.70752716064453
			],
			"M1_GND": [
				156.46077728271484,
				141.70752716064453
            ],
            "M_GND": [
				168.83547210693360,
				141.70752716064453
			],
			"M0_OUT": [
				144.08607482910156,
				141.70752716064453
			],
			"M1_OUT": [
				150.27342987060547,
				141.70752716064453
			],
			"M_VM": [
				162.64812469482422,
				141.70752716064453
			],
			"G_A0_GND": [
				82.47036743164062,
				72.35763549804688
			],
			"G_A0_VCC": [
				78.34546279907227,
				76.3106689453125
			],
			"G_A0_SDA": [
				74.65023803710938,
				80.00588989257812
			],
			"G_A0_SCL": [
				70.43940734863281,
				84.21672821044922
			],
			"G_A1_RX": [
				216.52963256835938,
				71.4982795715332
			],
			"G_A1_TX": [
				220.65453338623047,
				75.53724670410156
			],
			"G_A1_VCC": [
				224.34976959228516,
				79.23247528076172
			],
			"G_A1_GND": [
				228.56060028076172,
				83.44330978393555
			]
		};

        constructor(public props: IBoardProps) {
            
            this.buildDom();
            if (props && props.wireframe)
                U.addClass(this.element, "sim-wireframe");

            if (props && props.theme)
                this.updateTheme();

            if (props && props.runtime) {
                this.board = this.props.runtime.board as pxsim.DalBoard;
                this.board.updateSubscribers.push(() => this.updateState());
                this.updateState();
                this.attachEvents();
            }
        }

        public getView(): SVGAndSize<SVGSVGElement> {
            return {
                el: this.element,
                y: 0,
                x: 0,
                w: MB_WIDTH,
                h: MB_HEIGHT
            };
        }

        public getCoord(pinNm: string): Coord {
            return this.pinNmToCoord[pinNm];
        }

        public highlightPin(pinNm: string): void {
            //TODO: for instructions
        }

        public getPinDist(): number {
            return 10;
        }

        private recordPinCoords() {
			pinNames.forEach((nm, i) => {
				const p = this.pins[i];
				const r = p.getBoundingClientRect();
                this.pinNmToCoord[nm] = [r.left + r.width / 2, r.top + r.height / 2];
            });
        }

        private updateTheme() {
            let theme = this.props.theme;

            svg.fills(this.leds, theme.ledOn);
            svg.fills(this.ledsOuter, theme.ledOff);
            svg.fills(this.buttonsOuter.slice(6, 8), theme.buttonOuter);
            svg.fill(this.buttons[0], theme.buttonUps[0]);
            svg.fill(this.buttons[1], theme.buttonUps[1]);
            svg.fill(this.buttonsOuter[2], theme.virtualButtonOuter);
            svg.fill(this.buttons[2], theme.virtualButtonUp);
            if (this.shakeButton) svg.fill(this.shakeButton, theme.virtualButtonUp);

            this.pinGradients.forEach(lg => svg.setGradientColors(lg, theme.pin, theme.pinActive));
            svg.setGradientColors(this.lightLevelGradient, theme.lightLevelOn, theme.lightLevelOff);
            svg.setGradientColors(this.soundLevelGradient, theme.soundLevelOff, theme.soundLevelOn);
            svg.setGradientColors(this.thermometerGradient, theme.ledOff, theme.ledOn);
        }

        public updateState() {
            let state = this.board;
            if (!state) return;
            let theme = this.props.theme;

            this.updateMicrophone();
            this.updateRecordingActive();
            this.updateButtonPairs();
            this.updateLEDMatrix();
            this.updatePins();
            this.updateTilt();
            this.updateHeading();
            this.updateLightLevel();
            this.updateTemperature();
            this.updateButtonAB();
            this.updateGestures();
            this.updateRgbLed();
			this.updateSpeaker();
            this.updateRSSI();           

            if (!runtime || runtime.dead) U.addClass(this.element, "grayscale");
            else U.removeClass(this.element, "grayscale");
        }

        private updateButtonPairs() {
            const state = this.board;
            const theme = this.props.theme;
            const bpState = state.buttonPairState;
            const buttons = [bpState.aBtn, bpState.bBtn, bpState.abBtn];
            buttons.forEach((btn, index) => {
                svg.fill(this.buttons[index], btn.pressed ? (btn.virtual ? theme.virtualButtonDown : theme.buttonDown) : (btn.virtual ? theme.virtualButtonUp : theme.buttonUps[index]));
            });
        }

        private updateLEDMatrix() {
            const state = this.board;
            if (state.ledMatrixState.disabled) {
                this.leds.forEach((led, i) => {
                    const sel = (<SVGStyleElement><any>led)
                    sel.style.opacity = "0";
                })
            } else {
                const bw = state.ledMatrixState.displayMode == pxsim.DisplayMode.bw
                const img = state.ledMatrixState.image;
                const br = state.ledMatrixState.brigthness != undefined ? state.ledMatrixState.brigthness : 255;
                this.leds.forEach((led, i) => {
                    const sel = (<SVGStyleElement><any>led)
                    let imgbr = bw ? (img.data[i] > 0 ? br : 0) : img.data[i];
                    // correct brightness
                    const opacity = imgbr > 0 ? imgbr / 255 * 155 + 100 : 0;
                    const transfrom = imgbr > 0 ? imgbr / 255 * 0.4 + 0.6 : 0;
                    sel.style.opacity = (opacity / 255) + "";
                    if (transfrom > 0) {
                        (sel.style as any).transformBox = 'fill-box';
                        sel.style.transformOrigin = '50% 50%';
                        sel.style.transform = `scale(${transfrom})`;
                    }
                })
            }
        }

        private updateRgbLed() {
			function updateRgbLedVisual(c: number, el: SVGElement) {
                const b = c & 0xFF;
                const g = (c >> 8) & 0xFF;
                const r = (c >> 16) & 0xFF;
                const w = (c >> 24) & 0xFF;
                const ch = `rgba(${r}, ${g}, ${b}, 1)`;
                svg.fill(el, ch);
			}

            let state = this.board;
            if (state.rgbLedState) {
                if (!this.rgbLed)
                    this.rgbLed = this.element.getElementById("rgbledcircle") as SVGCircleElement;
				updateRgbLedVisual(state.rgbLedState, this.rgbLed)  
            } else if (this.rgbLed) {
                svg.fill(this.rgbLed, 'white');
            }

			if(this.domHardwareVersion == 3) {
				if (state.rgbLedLeftState) {
					if (!this.rgbLedLeft)
						this.rgbLedLeft = this.element.getElementById("rgbledleftcircle") as SVGCircleElement;
					updateRgbLedVisual(state.rgbLedLeftState, this.rgbLedLeft)  
				} else if (this.rgbLedLeft) {
					svg.fill(this.rgbLedLeft, 'white');
				}

				if (state.rgbLedRightState) {
					if (!this.rgbLedRight)
						this.rgbLedRight = this.element.getElementById("rgbledrightcircle") as SVGCircleElement;
					updateRgbLedVisual(state.rgbLedRightState, this.rgbLedRight)  
				} else if (this.rgbLedRight) {
					svg.fill(this.rgbLedRight, 'white');
				}
			}
        }

		private updateSpeaker() {
            let state = this.board;
			if (state.speakerState.frequency) {
				
			} else {

			}			
		}

        private updateGestures() {
            let state = this.board;
            if (state.accelerometerState.useShake && !this.shakeButton) {
                let shake = this.mkBtn(240, MB_HEIGHT - 75, 'Schütteln');
                this.shakeButton = shake.inner;
                let board = this.element.getElementById("calliope_mini")
                // console.log(board)
                // svg.fill(this.shakeButton, this.props.theme.virtualButtonUp)
                svg.buttonEvents(shake.outer,
                    ev => { },
                    (ev) => {
                        // svg.fill(this.shakeButton, this.props.theme.virtualButtonDown);
                         board.classList.remove("shake_animation");
                         setTimeout(()=>{
                            board.classList.add("shake_animation");
                         }, 1)
                         this.board.bus.queue(DAL.MICROBIT_ID_GESTURE, 11); // GESTURE_SHAKE
                    },
                    (ev) => {
                        // svg.fill(this.shakeButton, this.props.theme.virtualButtonUp);
                        
                    }
                )
                // let shakeText = svg.child(shake.outer, "text", { x: 280, y: MB_HEIGHT - 5, class: "sim-text big inverted centered" }) as SVGTextElement;
                // shakeText.textContent = "SHAKE"
            }
        }

        private updateMicrophone() {
            const b = board();
            if (!b || !b.microphoneState.sensorUsed) return;
            this.updateSoundLevel();
        }

        private updateRecordingActive() {
            const b = board();
            if (!b)
                return;

            let theme = this.props.theme;
            if (this.microphoneLed) {
                if (b.recordingState.currentlyRecording || b.microphoneState.soundLevelRequested) {
                    svg.fills([this.microphoneLed], theme.ledOn);
                    svg.filter(this.microphoneLed, `url(#ledglow)`);
                } else if (!(b.microphoneState.onSoundRegistered || b.microphoneState.soundLevelRequested)) {
                    svg.fills([this.microphoneLed], theme.ledOff);
                    svg.filter(this.microphoneLed, `url(#none)`);
                }
            }
        }

        private updateButtonAB() {
            let state = this.board;
            if (state.buttonPairState.usesButtonAB && (<any>this.buttons[2]).style.visibility != "visible") {
                (<any>this.buttonsOuter[2]).style.visibility = "visible";
                (<any>this.buttons[2]).style.visibility = "visible";
                this.updateTheme();
            }
        }

        private updateRSSI() {
            let state = this.board;
            if (!state) return;
            const v = state.radioState.datagram.rssi;
            if (v === undefined) return;

            if (!this.rssi) {
                let ax = 380;
                let dax = 18;
                let ayt = 10;
                let ayb = 40;
                const wh = dax * 5;
                for (let i = 0; i < 4; ++i)
                    svg.child(this.g, "rect", { x: ax - 90 + i * 6, y: ayt + 28 - i * 4, width: 4, height: 2 + i * 4, fill: "#fff" })
                this.rssi = svg.child(this.g, "text", { x: ax - 64, y: ayb, class: "sim-text" }) as SVGTextElement;
                this.rssi.textContent = "";
            }

            const vt = v.toString();
            if (vt !== this.rssi.textContent) {
                this.rssi.textContent = v.toString();
                this.antenna.setAttribute("aria-valuenow", this.rssi.textContent);
                accessibility.setLiveContent(this.rssi.textContent);
            }
        }


        private updatePin(pin: Pin, index: number) {
            if (!pin) return;
            let text = this.pinTexts[pin.id];
            let v = "";
            if (pin.mode & PinFlags.Analog) {
                v = Math.floor(100 - (pin.value || 0) / 1023 * 100) + "%";
                if (text) text.textContent = (pin.period ? "~" : "") + (pin.value || 0) + "";
            }
            else if (pin.mode & PinFlags.Digital) {
                v = pin.value > 0 ? "0%" : "100%";
                if (text) text.textContent = pin.value > 0 ? "1" : "0";
            }
            else if (pin.mode & PinFlags.Touch) {
                v = pin.touched ? "0%" : "100%";
                if (text) text.textContent = v;
            } else {
                v = "100%";
                if (text) text.textContent = "";
            }
            if (v) svg.setGradientValue(this.pinGradients[index], v);

            if (pin.mode !== PinFlags.Unused) {
                accessibility.makeFocusable(this.pins[index]);
                accessibility.setAria(this.pins[index], "slider", this.pins[index].firstChild.textContent);
                this.pins[index].setAttribute("aria-valuemin", "0");
                this.pins[index].setAttribute("aria-valuemax", pin.mode & PinFlags.Analog ? "1023" : "100");
                this.pins[index].setAttribute("aria-orientation", "vertical");
                this.pins[index].setAttribute("aria-valuenow", text ? text.textContent : v);
                accessibility.setLiveContent(text ? text.textContent : v);
            }
        }

        private updateTemperature() {
            let state = this.board;
            if (!state || !state.thermometerState.usesTemperature) return;

            let tmin = -5;
            let tmax = 50;
            if (!this.thermometer) {
                let gid = "gradient-thermometer";
                this.thermometerGradient = svg.linearGradient(this.defs, gid);
				const ty = MB_HEIGHT - 270;
                this.thermometer = <SVGRectElement>svg.child(this.g, "rect", {
                    class: "sim-thermometer",
                    x: 0,
                    y: ty,
                    width: 30,
                    height: 160,
                    rx: 5,
                    ry: 5,
                    fill: `url(#${gid})`
                });
                this.thermometerText = svg.child(this.g, "text", {
					class: 'sim-text big inverted centered',
					x: 15,
                    y: ty + 190
				}) as SVGTextElement;
                this.updateTheme();

                let pt = this.element.createSVGPoint();
                svg.buttonEvents(this.thermometer,
                    // move
                    (ev) => {
                        let cur = svg.cursorPoint(pt, this.element, ev);
                        let t = Math.max(0, Math.min(1, (cur.y - ty) / 160))
                        state.thermometerState.temperature = Math.floor(tmax - t * (tmax - tmin));
                        this.updateTemperature();
                    }, 
                    // start
                    ev => { }, 
                    // stop
                    ev => { },
                    // keydown
                    (ev) => {
                        let charCode = (typeof ev.which == "number") ? ev.which : ev.keyCode
                        if (charCode === 40 || charCode === 37) { // Down/Left arrow
                            state.thermometerState.temperature--;
                            if(state.thermometerState.temperature < tmin) state.thermometerState.temperature = tmin;
                            this.updateTemperature();
                        } else if (charCode === 38 || charCode === 39) { // Up/Right arrow
                            state.thermometerState.temperature++
                            if(state.thermometerState.temperature > tmax) state.thermometerState.temperature = tmax;
                            this.updateTemperature();
                        }
                    })
            }

            accessibility.makeFocusable(this.thermometer);
            accessibility.setAria(this.thermometer, "slider", pxsim.localization.lf("Temperature Level"));
            this.thermometer.setAttribute("aria-valuemin", tmin + "");
            this.thermometer.setAttribute("aria-valuemax", tmax + "");
            this.thermometer.setAttribute("aria-orientation", "vertical");
            this.thermometer.setAttribute("aria-valuenow", state.thermometerState.temperature + "");
            this.thermometer.setAttribute("aria-valuetext", state.thermometerState.temperature + "");

            let t = Math.max(tmin, Math.min(tmax, state.thermometerState.temperature))
            let per = Math.floor((state.thermometerState.temperature - tmin) / (tmax - tmin) * 100)
            svg.setGradientValue(this.thermometerGradient, 100 - per + "%");
            this.thermometerText.textContent = t + "°C";
            this.thermometer.setAttribute("aria-valuenow", t.toString());
            this.thermometer.setAttribute("aria-valuetext", t + "°C");
            accessibility.setLiveContent(t + "°C");
        }

        private updateSoundLevel() {
            let state = this.board;
            if (!state || !state.microphoneState.sensorUsed) return;

            const tmin = 0 // state.microphoneState.min;
            const tmax = 255 //state.microphoneState.max;
            if (!this.soundLevel) {
                const level = state.microphoneState.getLevel();
                let gid = "gradient-soundlevel";
                this.soundLevelGradient = svg.linearGradient(this.defs, gid);
                const ty = MB_HEIGHT - 270;
                this.soundLevel = <SVGRectElement>svg.child(this.g, "rect", {
                    class: "sim-thermometer",
                    x: 490,
                    y: ty,
                    width: 30,
                    height: 160,
                    rx: 5,
                    ry: 5,
                    fill: `url(#${gid})`
                });
                this.soundLevelText = svg.child(this.g, "text", { 
                    class: 'sim-text big inverted centered', 
                    x: 505, 
                    y: ty + 190 
                }) as SVGTextElement;
                this.soundLevelIcon = svg.child(this.g, "svg", {
                    x: 495,
                    y: 425,
                    viewbox: "0 0 20 29",
                    role: "img",
                }) as SVGTextElement;
                this.soundLevelIcon.setAttribute("aria-hidden", "true");
                this.soundLevelIcon.setAttribute("focusable", "false");
                this.soundLevelIcon.setAttribute("style", "pointer-events: none; opacity: 0.8; width: 20px;");
                svg.child(this.soundLevelIcon, "path", {
                    fill: "white",
                    d: "M 10 19.9375 C 13.011719 19.9375 15.453125 17.503906 15.453125 14.5 L 15.453125 5.4375 C 15.453125 2.433594 13.011719 0 10 0 C 6.988281 0 4.546875 2.433594 4.546875 5.4375 L 4.546875 14.5 C 4.546875 17.503906 6.988281 19.9375 10 19.9375 Z M 19.089844 10.875 L 18.183594 10.875 C 17.679688 10.875 17.273438 11.28125 17.273438 11.78125 L 17.273438 14.5 C 17.273438 18.738281 13.609375 22.136719 9.273438 21.714844 C 5.496094 21.347656 2.726562 17.960938 2.726562 14.175781 L 2.726562 11.78125 C 2.726562 11.28125 2.320312 10.875 1.816406 10.875 L 0.910156 10.875 C 0.40625 10.875 0 11.28125 0 11.78125 L 0 14.054688 C 0 19.132812 3.632812 23.660156 8.636719 24.347656 L 8.636719 26.28125 L 5.453125 26.28125 C 4.953125 26.28125 4.546875 26.6875 4.546875 27.1875 L 4.546875 28.09375 C 4.546875 28.59375 4.953125 29 5.453125 29 L 14.546875 29 C 15.046875 29 15.453125 28.59375 15.453125 28.09375 L 15.453125 27.1875 C 15.453125 26.6875 15.046875 26.28125 14.546875 26.28125 L 11.363281 26.28125 L 11.363281 24.367188 C 16.234375 23.703125 20 19.535156 20 14.5 L 20 11.78125 C 20 11.28125 19.59375 10.875 19.089844 10.875 Z M 19.089844 10.875 "
                });
                if (this.props.runtime)
                    this.props.runtime.environmentGlobals[pxsim.localization.lf("sound level")] = state.microphoneState.getLevel();
                this.updateTheme();

                let pt = this.element.createSVGPoint();
                svg.buttonEvents(this.soundLevel,
                    // move
                    (ev) => {
                        let cur = svg.cursorPoint(pt, this.element, ev);
                        let t = Math.max(0, Math.min(1, (cur.y - ty) / 160)) * tmax
                        console.log(tmax - t);
                        state.microphoneState.setLevel( Math.floor(tmax - t));
                        // state.microphoneState.setLevel(Math.floor(tmin + t * (tmax - tmin)));
                        this.updateMicrophone();
                    },
                    // start
                    ev => { },
                    // stop
                    ev => { },
                    // keydown
                    (ev) => {
                        let charCode = (typeof ev.which == "number") ? ev.which : ev.keyCode
                        if (charCode === 40 || charCode === 37) { // Down/Left arrow
                            state.microphoneState.setLevel(state.microphoneState.getLevel() - 1);
                            if(state.microphoneState.getLevel() < tmin) state.microphoneState.setLevel(tmin);
                            this.updateMicrophone();
                        } else if (charCode === 38 || charCode === 39) { // Up/Right arrow
                            state.microphoneState.setLevel(state.microphoneState.getLevel() + 1);
                            if(state.microphoneState.getLevel() > tmax) state.microphoneState.setLevel(tmax);
                            this.updateMicrophone();
                        }
                    })

                accessibility.makeFocusable(this.soundLevel);
                accessibility.setAria(this.soundLevel, "slider", pxsim.localization.lf("Sound Level"));
                this.soundLevel.setAttribute("aria-valuemin", tmin + "");
                this.soundLevel.setAttribute("aria-valuemax", tmax + "");
                this.soundLevel.setAttribute("aria-orientation", "vertical");
                this.soundLevel.setAttribute("aria-valuenow", level + "");
                this.soundLevel.setAttribute("aria-valuetext", level + "");
            }

            let t = Math.max(tmin, Math.min(tmax, state.microphoneState.getLevel()))
            let per = Math.floor((state.microphoneState.getLevel() - tmin) / (tmax - tmin) * 100)
            svg.setGradientValue(this.soundLevelGradient, (100 - per) + "%");
            this.soundLevelText.textContent = t + "";
            this.soundLevel.setAttribute("aria-valuenow", t.toString());
            this.soundLevel.setAttribute("aria-valuetext", t + "");
            accessibility.setLiveContent(t + "");
        }

        private updateHeading() {
            const valMin = 0;
            const valMax = 360;
            let xc = 501.2;
            let yc = 75;
            let state = this.board;
            if (!state || !state.compassState.usesHeading) return;
            // /*
            if (!this.headInitialized) {
                let p = this.heads[1];
                <SVGGElement>svg.child(p, "circle", {style: "fill:#DDDDDD55;stroke:#3A3A3A;", cx: "501.2", cy: "75", r: "55" });
                <SVGGElement>svg.child(p, "polyline", {style: "fill:#008EEF;stroke:#3A3A3A;", points: "517.7,75 501.1,140.2 484.6,75" });
                <SVGGElement>svg.child(p, "polyline", {style: "fill:#FF3951;stroke:#3A3A3A;", points: "484.6,75 501.1,9.5 517.7,75" });
                <SVGGElement>svg.child(p, "circle", {style: "fill:#748476;stroke:#3A3A3A;", cx: "501.1", cy: "75", r: "16.5" });
                <SVGGElement>svg.child(p, "circle", {style: "fill:#CCDBCE;", cx: "501.1", cy: "75", r: "10" });
                // p.setAttribute("d", "m269.9,50.134647l0,0l-39.5,0l0,0c-14.1,0.1 -24.6,10.7 -24.6,24.8c0,13.9 10.4,24.4 24.3,24.7l0,0l39.6,0c14.2,0 40.36034,-22.97069 40.36034,-24.85394c0,-1.88326 -26.06034,-24.54606 -40.16034,-24.64606m-0.2,39l0,0l-39.3,0c-7.7,-0.1 -14,-6.4 -14,-14.2c0,-7.8 6.4,-14.2 14.2,-14.2l39.1,0c7.8,0 14.2,6.4 14.2,14.2c0,7.9 -6.4,14.2 -14.2,14.2l0,0l0,0z");
                this.updateTheme();
                let pt = this.element.createSVGPoint();
                svg.buttonEvents(this.head,
                    // move
                    (ev: MouseEvent) => {
                        let cur = svg.cursorPoint(pt, this.element, ev);
                        state.compassState.heading = valMax - (Math.floor(Math.atan2(cur.y - yc, cur.x - xc) * 180 / Math.PI) + 90) - valMax;
                        if (state.compassState.heading < valMin) state.compassState.heading += valMax;
                        this.updateHeading();
                    },
                    // start
                    ev => { },
                    // stop
                    ev => { },
                    // keydown
                    ev => {
                        let charCode = (typeof ev.which == "number") ? ev.which : ev.keyCode
                        if (charCode === 40 || charCode === 37) { // Down/Left arrow
                            state.compassState.heading--;
                            if(state.compassState.heading < valMin) state.compassState.heading += valMax;
                            this.updateHeading();
                        } else if (charCode === 38 || charCode === 39) { // Up/Right arrow
                            state.compassState.heading++;
                            if(state.compassState.heading >= valMax) state.compassState.heading -= valMax;;          
                            this.updateHeading();
                        }
                    });
                this.headInitialized = true;
            }

            accessibility.makeFocusable(this.head);
            accessibility.setAria(this.head, "slider", pxsim.localization.lf("Heading"));
            this.head.setAttribute("aria-valuemin", valMin + "");
            this.head.setAttribute("aria-valuemax", valMax + "");
            this.head.setAttribute("aria-orientation", "vertical");
            this.head.setAttribute("aria-valuenow", state.compassState.heading + "");
            this.head.setAttribute("aria-valuetext", state.compassState.heading + "");

            let txt = state.compassState.heading.toString() + "°";
            if (txt != this.headText.textContent) {
                svg.rotateElement(this.head, xc, yc, valMax - state.compassState.heading - 90);
                this.headText.textContent = txt;
            } 
        }

        private lastFlashTime: number = 0;
        public flashSystemLed() {
            if (!this.systemLed)
                this.systemLed = <SVGCircleElement>svg.child(this.g, "circle", { class: "sim-systemled", cx: 160.8, cy: 150.9, r: 4 })
            let now = Date.now();
            if (now - this.lastFlashTime > 150) {
                this.lastFlashTime = now;
                svg.animate(this.systemLed, "sim-flash")
            }
        }

        private lastAntennaFlash: number = 0;
        public flashAntenna() {
            if (!this.antenna) {
                let ax = 480;
                let dax = 18;
                let ayt = 10;
                let ayb = 40;
                this.antenna = <SVGPolylineElement>svg.child(this.g, "polyline", { class: "sim-antenna", points: `${ax},${ayb} ${ax},${ayt} ${ax += dax},${ayt} ${ax},${ayb} ${ax += dax},${ayb} ${ax},${ayt} ${ax += dax},${ayt} ${ax},${ayb} ${ax += dax},${ayb} ${ax},${ayt} ${ax += dax},${ayt}` })
            }
            let now = Date.now();
            if (now - this.lastAntennaFlash > 200) {
                this.lastAntennaFlash = now;
                svg.animate(this.antenna, 'sim-flash-stroke')
            }
        }

        private updatePins() {
            let state = this.board;
            if (!state) return;

            state.edgeConnectorState.pins.forEach((pin, i) => this.updatePin(pin, i));
        }

        private updateLightLevel() {
            let state = this.board;
            const valMin = 0;
            const valMax = 255;
            if (!state || !state.lightSensorState.usesLightLevel) return;

            if (!this.lightLevelButton) {
                let gid = "gradient-light-level";
                this.lightLevelGradient = svg.linearGradient(this.defs, gid)
				const cx = 25;
                const cy = 75;
                const r = 55;

                this.lightLevelButton = svg.child(this.g, "circle", {
                    cx: `${cx}px`, cy: `${cy}px`, r: `${r}px`,
                    class: 'sim-light-level-button',
                    fill: `url(#${gid})`
                }) as SVGCircleElement;
                let pt = this.element.createSVGPoint();

                svg.buttonEvents(this.lightLevelButton,
                    // move
                    (ev) => {
                        let pos = svg.cursorPoint(pt, this.element, ev);
                        let rs = r / 2;
                        let level = valMax - Math.max(valMin, Math.min(valMax, Math.floor((pos.y - (cy - r)) / (2 * r) * valMax)));

                        if (level != state.lightSensorState.lightLevel) {
                            state.lightSensorState.lightLevel = level;
                            this.applyLightLevel();
                        }
                    },
                    // start
                    ev => { },
                    // stop
                    ev => { },
                    // keydown
                    ev => {
                        let charCode = (typeof ev.which == "number") ? ev.which : ev.keyCode
                        if (charCode === 40 || charCode === 37) { // Down/Left arrow
                            state.lightSensorState.lightLevel--;
                            if(state.lightSensorState.lightLevel < valMin) state.lightSensorState.lightLevel = valMin;
                            this.applyLightLevel();
                        } else if (charCode === 38 || charCode === 39) { // Up/Right arrow
                            state.lightSensorState.lightLevel++
                            if(state.lightSensorState.lightLevel > valMax) state.lightSensorState.lightLevel = valMax;
                            this.applyLightLevel();
                        }
                    })
                this.lightLevelText = svg.child(this.g, "text", { x: cx , y: cy + r + 35, text: '', class: 'sim-text inverted big centered' }) as SVGTextElement;
                this.updateTheme();
            }

            accessibility.makeFocusable(this.lightLevelButton);
            accessibility.setAria(this.lightLevelButton, "slider", pxsim.localization.lf("Light Level"));
            this.lightLevelButton.setAttribute("aria-valuemin", valMin + "");
            this.lightLevelButton.setAttribute("aria-valuemax", valMax + "");
            this.lightLevelButton.setAttribute("aria-orientation", "vertical");
            this.lightLevelButton.setAttribute("aria-valuenow", state.lightSensorState.lightLevel + "");
            this.lightLevelButton.setAttribute("aria-valuetext", state.lightSensorState.lightLevel + "");

            svg.setGradientValue(this.lightLevelGradient, Math.min(100, Math.max(0, Math.floor((255 - state.lightSensorState.lightLevel) * 100 / 255))) + '%')
            this.lightLevelText.textContent = state.lightSensorState.lightLevel.toString();
        }

        private applyLightLevel() {
            let lv = this.board.lightSensorState.lightLevel;
            svg.setGradientValue(this.lightLevelGradient, Math.min(100, Math.max(0, Math.floor((255 - lv) * 100 / 255))) + '%')
            this.lightLevelText.textContent = lv.toString();
        }

        private updateTilt() {
            return;
            if (this.props.disableTilt) return;
            let state = this.board;
            if (!state || !state.accelerometerState.accelerometer.isActive) return;

            const x = state.accelerometerState.accelerometer.getX();
            const y = -state.accelerometerState.accelerometer.getY();
            const af = 8 / 1023;
            const s = 1 - Math.min(0.1, Math.pow(Math.max(Math.abs(x), Math.abs(y)) / 1023, 2) / 35);

            this.element.style.transform = `perspective(30em) rotateX(${y * af}deg) rotateY(${x * af}deg) scale(${s}, ${s})`
            
            this.element.style.perspectiveOrigin = "50% 50% 50%";
            this.element.style.perspective = "30em";
        }

        private buildDom() {            
            let SVG_CODE = BOARD_SVG_HEAD+BOARD_MINI2_BODY+BOARD_SVG_BOTTOM
            if(this.props.runtime.board && this.props.runtime.board.hasOwnProperty("hardwareVersion") && this.props.runtime.board.hardwareVersion == 3) {
				this.domHardwareVersion = 3;
                SVG_CODE = BOARD_SVG_HEAD+BOARD_MINI3_BODY+BOARD_SVG_BOTTOM
            }
			this.element = new DOMParser().parseFromString(SVG_CODE, "image/svg+xml").querySelector("svg") as SVGSVGElement;
            svg.hydrate(this.element, {
                "version": "1.0",
                "viewBox": `0 0 ${MB_WIDTH} ${MB_HEIGHT}`,
                "class": "sim",
                "x": "0px",
                "y": "0px",
                "width": MB_WIDTH + "px",
                "height": MB_HEIGHT + "px",
                "fill": "rgba(0,0,0,0)"
            });
            this.style = <SVGStyleElement>svg.child(this.element, "style", {});
            this.style.textContent = MB_STYLE;

            this.defs = <SVGDefsElement>svg.child(this.element, "defs", {});
            this.g = <SVGGElement>svg.elt("g");
            this.element.appendChild(this.g);

            // filters
            let ledglow = svg.child(this.defs, "filter", { id: "ledglow", x: "-75%", y: "-75%", width: "300%", height: "300%" });
            svg.child(ledglow, "feMorphology", { operator: "dilate", radius: "1", in: "SourceAlpha", result: "thicken" });
            svg.child(ledglow, "feGaussianBlur", { stdDeviation: "5", in: "thicken", result: "blurred" });
            svg.child(ledglow, "feFlood", { "flood-color": "rgb(255, 17, 77)", result: "glowColor" });
            svg.child(ledglow, "feComposite", { in: "glowColor", in2: "blurred", operator: "in", result: "ledglow_colored" });
            let ledglowMerge = svg.child(ledglow, "feMerge", {});
            svg.child(ledglowMerge, "feMergeNode", { in: "ledglow_colored" });
            svg.child(ledglowMerge, "feMergeNode", { in: "SourceGraphic" });

            let glow = svg.child(this.defs, "filter", { id: "filterglow", x: "-5%", y: "-5%", width: "120%", height: "120%" });
            svg.child(glow, "feGaussianBlur", { stdDeviation: "5", result: "glow" });
            let merge = svg.child(glow, "feMerge", {});
            for (let i = 0; i < 3; ++i) svg.child(merge, "feMergeNode", { in: "glow" })

            // leds
            this.leds = [];
            this.ledsOuter = [];
            const left = Number(this.element.getElementById("LED_0_0").getAttribute("x"));
            const top = Number(this.element.getElementById("LED_0_0").getAttribute("y"));
            const ledoffw = Number(this.element.getElementById("LED_1_0").getAttribute("x"))-left;
            const ledoffh = Number(this.element.getElementById("LED_0_1").getAttribute("y"))-top;
            // const ledw = 5.1;
            // const ledh = 12.9;
            for (let i = 0; i < 5; ++i) {
                let ledtop = i * ledoffh + top;
                for (let j = 0; j < 5; ++j) {
                    let ledleft = j * ledoffw + left;
                    let k = i * 5 + j;
                    this.ledsOuter.push(svg.child(this.g, "rect", { class: "sim-led-back", x: ledleft, y: ledtop, width: 10, height: 20, rx: 2, ry: 2 }));
                    let led = svg.child(this.g, "rect", { class: "sim-led", x: ledleft - 2, y: ledtop - 2, width: 14, height: 24, rx: 3, ry: 3, title: `(${j},${i})` });
                    svg.filter(led, `url(#ledglow)`)
                    this.leds.push(led);
                }
            }


             // head
            //  this.headg = <SVGGElement>svg.child(this.g, "g", { style: "transform: translate(100px, 0px);" });
             this.head = <SVGGElement>svg.child(this.g, "g", { class: "sim-head" });
             svg.child(this.head, "circle", { cx: 501.2, cy: 75, r: 100, fill: "transparent" })
             this.headParts = <SVGGElement>svg.child(this.head, "g", { class: "sim-button-outer sim-button-group" });
             this.heads = []
            //  background
            this.heads.push(svg.path(this.headParts, "sim-button",""));
            //  shapes
            this.heads.push(<SVGGElement>svg.child(this.headParts, "g", { class: "sim-theme" }));
            //  this.heads.push(svg.path(this.headParts, "sim-theme", "M230.6,69.7c-2.9,0-5.3,2.4-5.3,5.3c0,2.9,2.4,5.3,5.3,5.3c2.9,0,5.3-2.4,5.3-5.3C235.9,72.1,233.5,69.7,230.6,69.7"));
            //  this.heads.push(svg.path(this.headParts, "sim-theme", "M269.7,80.3c2.9,0,5.3-2.4,5.3-5.3c0-2.9-2.4-5.3-5.3-5.3c-2.9,0-5.3,2.4-5.3,5.3C264.4,77.9,266.8,80.3,269.7,80.3"));
             this.headText = <SVGTextElement>svg.child(this.g, "text", { x: 500, y: 165, class: "sim-text inverted big centered" })

            // https://www.microbit.co.uk/device/pins
            // P0, P1, P2
            this.pins = pinNames.map(n => {
				let p = this.element.getElementById(n) as SVGElement;
				if(!p) console.log("missing "+n);
				U.addClass(p, "sim-pin");
                // console.log(p);
				return p;
			});

            this.pins.forEach((p, i) => svg.hydrate(p, { title: pinTitles[i] }));

            this.pinGradients = this.pins.map((pin, i) => {
                let gid = "gradient-pin-" + i
                let lg = svg.linearGradient(this.defs, gid)
                pin.setAttribute("fill", `url(#${gid})`);
                return lg;
            })

            // this.pinTexts = [
            //         [-20,   340],
            //         [50,    495],
            //         [450,   495],
            //         [500,   340]
            //     ].map(p => <SVGTextElement>svg.child(this.g, "text", { class: "sim-text-pin", x: p[0], y: p[1] }));

            this.pinTexts = { 
                [DigitalPin.P0]: <SVGTextElement>svg.child(this.g, "text", { class: "sim-text-pin big centered", x: 20, y: 325 }),
                [DigitalPin.P1]: <SVGTextElement>svg.child(this.g, "text", { class: "sim-text-pin big centered", x: 135, y: 540 }),
                [DigitalPin.P2]: <SVGTextElement>svg.child(this.g, "text", { class: "sim-text-pin big centered", x: 395, y: 540 }),
                [DigitalPin.P3]: <SVGTextElement>svg.child(this.g, "text", { class: "sim-text-pin big centered", x: 540, y: 325 })
            }

            // BTN A, B
            const btnids = ["BTN_A", "BTN_B"];
            this.buttonsOuter = btnids.map(n => this.element.getElementById(n + "_BOX") as SVGElement);
            this.buttonsOuter.forEach(b => U.addClass(b, "sim-button-outer"));
            this.buttons = btnids.map(n => this.element.getElementById(n) as SVGElement);
            this.buttons.forEach(b => U.addClass(b, "sim-button"));

            // BTN A+B
            const outerBtn = (left: number, top: number) => {
                const button = this.mkBtn(left, top, 'A + B');
                this.buttonsOuter.push(button.outer);
                this.buttons.push(button.inner);
                return button;
            }

            let ab = outerBtn(100, MB_HEIGHT - 75);
            // let abtext = svg.child(ab.outer, "text", { x: 210, y: MB_HEIGHT - 5, class: "sim-text big inverted centered" }) as SVGTextElement;
            // abtext.textContent = "A+B";
            (<any>this.buttonsOuter[2]).style.visibility = "hidden";
            (<any>this.buttons[2]).style.visibility = "hidden";
        }

        private mkBtn(left: number, top: number, text: string): { outer: SVGElement, inner: SVGElement } {
            const btnr = 2;
            const btnw = 20;
            const btnn = 1.6;
            const btnnm = 2;
            const btnb = 5;
            let btng = svg.child(this.g, "g", { class: "sim-button-group" });
            // var fo = document.createElementNS("http://www.w3.org/2000/svg", "foreignObject");
            var fo = svg.child(btng, "foreignObject");
            fo.setAttribute("id", "y");
            fo.setAttribute("x", left+'');
            fo.setAttribute("y", top+'');
            fo.setAttribute("width", "300");
            fo.setAttribute("height", "100");
            fo.innerHTML = `<body xmlns="http://www.w3.org/1999/xhtml">
             <button class="simEventBtn">${text}</button>
          </body>`;
            // var ta = document.createElement("button");
            // ta.innerText = text;
            // fo.appendChild(ta);
            
            // svg.child(btng, "rect", { class: "sim-button-outer", x: left, y: top, rx: btnr, ry: btnr, width: btnw, height: btnw });
            // svg.child(btng, "circle", { class: "sim-button-nut", cx: left + btnnm, cy: top + btnnm, r: btnn });
            // svg.child(btng, "circle", { class: "sim-button-nut", cx: left + btnnm, cy: top + btnw - btnnm, r: btnn });
            // svg.child(btng, "circle", { class: "sim-button-nut", cx: left + btnw - btnnm, cy: top + btnw - btnnm, r: btnn });
            // svg.child(btng, "circle", { class: "sim-button-nut", cx: left + btnw - btnnm, cy: top + btnnm, r: btnn });

            const outer = btng;
            const inner = svg.child(btng, "circle", {
                class: "sim-button",
                cx: left + btnw / 2,
                cy: top + btnw / 2,
                r: 0
            });

            return { outer, inner };
        }

        private attachEvents() {
            this.attachIFrameEvents();
            this.attachAccelerometerEvents();
            this.attachPinsIOEvents();
            this.attachPinsTouchEvents();
            this.attachABEvents();
            this.attachAPlusBEvents();
        }

        private attachIFrameEvents() {
            Runtime.messagePosted = (msg) => {
                switch (msg.type || "") {
                    case "serial": this.flashSystemLed(); break;
                    case "radiopacket": this.flashAntenna(); break;
                    case "eventbus":
                        if ((<pxsim.SimulatorEventBusMessage>msg).id == DAL.MES_BROADCAST_GENERAL_ID)
                            this.flashAntenna();
                        break;
                }
            }
        }

        private attachAccelerometerEvents() {
            let tiltDecayer: any =  undefined;
            this.element.addEventListener(pointerEvents.move, (ev: MouseEvent) => {
                const state = this.board;
                if (!state.accelerometerState.accelerometer.isActive) return;

                if (tiltDecayer) {
                    clearInterval(tiltDecayer);
                    tiltDecayer = 0;
                }

                const bbox = this.element.getBoundingClientRect();

                // ev.clientX and ev.clientY are not defined on mobile iOS
                const xPos = ev.clientX != null ? ev.clientX : ev.pageX;
                const yPos = ev.clientY != null ? ev.clientY : ev.pageY;

                const ax = (xPos - bbox.width / 2) / (bbox.width / 3);
                const ay = (yPos - bbox.height / 2) / (bbox.height / 3);

                const x = - Math.max(- 1023, Math.min(1023, Math.floor(ax * 1023)));
                const y = - Math.max(- 1023, Math.min(1023, Math.floor(ay * 1023)));
                const z2 = 1023 * 1023 - x * x - y * y;
                const z = Math.floor((z2 > 0 ? -1 : 1) * Math.sqrt(Math.abs(z2)));

                state.accelerometerState.accelerometer.update(x, y, z);
                this.updateTilt();
            }, false);
            this.element.addEventListener(pointerEvents.leave, (ev: MouseEvent) => {
                let state = this.board;
                if (!state.accelerometerState.accelerometer.isActive) return;

                if (!tiltDecayer) {
                    tiltDecayer = setInterval(() => {
                        let accx = state.accelerometerState.accelerometer.getX(MicroBitCoordinateSystem.RAW);
                        accx = Math.floor(Math.abs(accx) * 0.85) * (accx > 0 ? 1 : -1);
                        let accy = state.accelerometerState.accelerometer.getY(MicroBitCoordinateSystem.RAW);
                        accy = Math.floor(Math.abs(accy) * 0.85) * (accy > 0 ? 1 : -1);
                        let accz = -Math.sqrt(Math.max(0, 1023 * 1023 - accx * accx - accy * accy));
                        if (Math.abs(accx) <= 24 && Math.abs(accy) <= 24) {
                            clearInterval(tiltDecayer);
                            tiltDecayer = 0;
                            accx = 0;
                            accy = 0;
                            accz = -1023;
                        }
                        state.accelerometerState.accelerometer.update(accx, accy, accz);
                        this.updateTilt();
                    }, 50)
                }
            }, false);
        }

        private attachPinsIOEvents() {
            this.pins.slice(0, 4).forEach((pin, index) => {
                // var index = i + 2;
                if (!this.board.edgeConnectorState.pins[index]) return;
                let pt = this.element.createSVGPoint();
                let xpos = (index === 0 || index === 3) ? 300 : 520;
                let vMax = (index === 0 || index === 3) ? 1 : 1023;
                svg.buttonEvents(pin,
                    // move
                    ev => {
                        let state = this.board;
                        let pin = state.edgeConnectorState.pins[index];
                        let svgpin = this.pins[index];
                        if (pin.mode & PinFlags.Input) {
                            let cursor = svg.cursorPoint(pt, this.element, ev);
                            let v = (xpos - cursor.y) / 70 * (vMax + 1);
                            pin.value = Math.max(0, Math.min(vMax, Math.floor(v)));
                        }
                        this.updatePin(pin, index);
                    },
                    // start
                    ev => {
                        let state = this.board;
                        let pin = state.edgeConnectorState.pins[index];
                        let svgpin = this.pins[index];
                        U.addClass(svgpin, "touched");
                        if (pin.mode & PinFlags.Input) {
                            let cursor = svg.cursorPoint(pt, this.element, ev);
                            let v = (xpos - cursor.y) / 70 * (vMax + 1);
                            pin.value = Math.max(0, Math.min(vMax, Math.floor(v)));
                        }
                        this.updatePin(pin, index);
                    },
                    // stop
                    (ev: MouseEvent) => {
                        let state = this.board;
                        let pin = state.edgeConnectorState.pins[index];
                        let svgpin = this.pins[index];
                        U.removeClass(svgpin, "touched");
                        this.updatePin(pin, index);
                        return false;
                    },
                    // keydown
                    (ev: KeyboardEvent) => {
                        let charCode = (typeof ev.which == "number") ? ev.which : ev.keyCode
                        let state = this.board;
                        let pin = state.edgeConnectorState.pins[index];

                        if (charCode === 40 || charCode === 37) { // Down/Left arrow
                            pin.value -= 10;
                            if (pin.value < 0) {
                                pin.value = 1023;
                            }
                            this.updatePin(pin, index);
                        } else if (charCode === 38 || charCode === 39) { // Up/Right arrow
                            pin.value += 10;
                            if (pin.value > 1023) {
                                pin.value = 0;
                            }
                            this.updatePin(pin, index);
                        }
                    });
            })
        }

        private attachPinsTouchEvents() {
            this.pins.slice(0, 5).forEach((btn, i) => {
                var index = i;
                let state = this.board;
                let pressedTime: number;
                pointerEvents.down.forEach(evid => btn.addEventListener(evid, ev => {
                    let state = this.board;
                    // console.log(`down ${state.edgeConnectorState.pins[i].id}`)
                    state.edgeConnectorState.pins[i].touched = true;
                    this.updatePin(state.edgeConnectorState.pins[i], index);
                    this.board.bus.queue(state.edgeConnectorState.pins[i].id, DAL.MICROBIT_BUTTON_EVT_DOWN);
                    pressedTime = runtime.runningTime()
                }));
                // btn.addEventListener(pointerEvents.leave, ev => {
                //     let state = this.board;
                //     state.edgeConnectorState.pins[i].touched = false;
                //     this.updatePin(state.edgeConnectorState.pins[i], index);
                // })
                btn.addEventListener(pointerEvents.up, ev => {
                    let state = this.board;
                    // console.log(`up ${state.edgeConnectorState.pins[i].id}, index ${index}`)
                    state.edgeConnectorState.pins[i].touched = false;
                    this.updatePin(state.edgeConnectorState.pins[i], index);
                    this.board.bus.queue(state.edgeConnectorState.pins[i].id, DAL.MICROBIT_BUTTON_EVT_UP);
                    const currentTime = runtime.runningTime()
                    if (currentTime - pressedTime > DAL.DEVICE_BUTTON_LONG_CLICK_TIME) {
                        this.board.bus.queue(state.edgeConnectorState.pins[i].id, DAL.MICROBIT_BUTTON_EVT_LONG_CLICK);
                        // console.log(`& long click`)
                    } else {
                        this.board.bus.queue(state.edgeConnectorState.pins[i].id, DAL.MICROBIT_BUTTON_EVT_CLICK);
                        // console.log(`& click`)
                    }
                    pressedTime = undefined;
                })
                accessibility.enableKeyboardInteraction(btn, undefined, () => {
                    let state = this.board;
                    this.board.bus.queue(state.edgeConnectorState.pins[i].id, DAL.MICROBIT_BUTTON_EVT_DOWN);
                    this.board.bus.queue(state.edgeConnectorState.pins[i].id, DAL.MICROBIT_BUTTON_EVT_UP);
                    this.board.bus.queue(state.edgeConnectorState.pins[i].id, DAL.MICROBIT_BUTTON_EVT_CLICK);
                });
            })
        }

        private attachABEvents() {
            const bpState = this.board.buttonPairState;
            const stateButtons: Button[] = [bpState.aBtn, bpState.bBtn];
            const elButtonOuters = this.buttonsOuter.slice(0,2);
            const elButtons = this.buttons.slice(0,2);

            elButtonOuters.forEach((btn, index) => {
                let pressedTime: number;
                pointerEvents.down.forEach(evid => btn.addEventListener(evid, ev => {
                    // console.log(`down ${stateButtons[index].id}`)
                    stateButtons[index].pressed = true;
                    svg.fill(elButtons[index], this.props.theme.buttonDown);
                    this.board.bus.queue(stateButtons[index].id, DAL.MICROBIT_BUTTON_EVT_DOWN);
                    pressedTime = runtime.runningTime()
                }));
                btn.addEventListener(pointerEvents.leave, ev => {
                    stateButtons[index].pressed = false;
                    svg.fill(elButtons[index], this.props.theme.buttonUps[0]);
                })
                btn.addEventListener(pointerEvents.up, ev => {
                    stateButtons[index].pressed = false;
                    svg.fill(elButtons[index], this.props.theme.buttonUps[0]);
                    this.board.bus.queue(stateButtons[index].id, DAL.MICROBIT_BUTTON_EVT_UP);
                    const currentTime = runtime.runningTime()
                    if (currentTime - pressedTime > DAL.DEVICE_BUTTON_LONG_CLICK_TIME)
                        this.board.bus.queue(stateButtons[index].id, DAL.MICROBIT_BUTTON_EVT_LONG_CLICK);
                    else
                        this.board.bus.queue(stateButtons[index].id, DAL.MICROBIT_BUTTON_EVT_CLICK);
                    pressedTime = undefined;
                })
                accessibility.enableKeyboardInteraction(btn, undefined, () => {
                    this.board.bus.queue(stateButtons[index].id, DAL.MICROBIT_BUTTON_EVT_DOWN);
                    this.board.bus.queue(stateButtons[index].id, DAL.MICROBIT_BUTTON_EVT_UP);
                    this.board.bus.queue(stateButtons[index].id, DAL.MICROBIT_BUTTON_EVT_CLICK);
                });
            })
        }

        private attachAPlusBEvents() {
            const bpState = this.board.buttonPairState;
            const stateButtons: Button[] = [bpState.aBtn, bpState.bBtn];
            let pressedTime: number;
            // A+B
            pointerEvents.down.forEach(evid => this.buttonsOuter[2].addEventListener(evid, ev => {
                bpState.aBtn.pressed = true;
                bpState.bBtn.pressed = true;
                bpState.abBtn.pressed = true;
                svg.fill(this.buttons[0], this.props.theme.buttonDown);
                svg.fill(this.buttons[1], this.props.theme.buttonDown);
                svg.fill(this.buttons[2], this.props.theme.buttonDown);
                this.board.bus.queue(stateButtons[0].id, DAL.MICROBIT_BUTTON_EVT_DOWN);
                this.board.bus.queue(stateButtons[1].id, DAL.MICROBIT_BUTTON_EVT_DOWN);
                this.board.bus.queue(bpState.abBtn.id, DAL.MICROBIT_BUTTON_EVT_DOWN);
                pressedTime = runtime.runningTime()
            }));
            this.buttonsOuter[2].addEventListener(pointerEvents.leave, ev => {
                bpState.aBtn.pressed = false;
                bpState.bBtn.pressed = false;
                bpState.abBtn.pressed = false;
                svg.fill(this.buttons[0], this.props.theme.buttonUps[0]);
                svg.fill(this.buttons[1], this.props.theme.buttonUps[1]);
                svg.fill(this.buttons[2], this.props.theme.virtualButtonUp);
            })
            this.buttonsOuter[2].addEventListener(pointerEvents.up, ev => {
                bpState.aBtn.pressed = false;
                bpState.bBtn.pressed = false;
                bpState.abBtn.pressed = false;
                svg.fill(this.buttons[0], this.props.theme.buttonUps[0]);
                svg.fill(this.buttons[1], this.props.theme.buttonUps[1]);
                svg.fill(this.buttons[2], this.props.theme.virtualButtonUp);

                this.board.bus.queue(stateButtons[0].id, DAL.MICROBIT_BUTTON_EVT_UP);
                this.board.bus.queue(stateButtons[1].id, DAL.MICROBIT_BUTTON_EVT_UP);
                this.board.bus.queue(bpState.abBtn.id, DAL.MICROBIT_BUTTON_EVT_UP);
                const currentTime = runtime.runningTime()
                if (currentTime - pressedTime > DAL.DEVICE_BUTTON_LONG_CLICK_TIME)
                    this.board.bus.queue(bpState.abBtn.id, DAL.MICROBIT_BUTTON_EVT_LONG_CLICK);
                else
                    this.board.bus.queue(bpState.abBtn.id, DAL.MICROBIT_BUTTON_EVT_CLICK);
                pressedTime = undefined;
            })
            accessibility.enableKeyboardInteraction(this.buttonsOuter[2], undefined, () => {
                this.board.bus.queue(bpState.abBtn.id, DAL.MICROBIT_BUTTON_EVT_DOWN);
                this.board.bus.queue(bpState.abBtn.id, DAL.MICROBIT_BUTTON_EVT_UP);
                this.board.bus.queue(bpState.abBtn.id, DAL.MICROBIT_BUTTON_EVT_CLICK);
            });
        }
    }
}
