name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: Install frontend dependencies (windows & macos)
        if: matrix.platform != 'ubuntu-20.04'
        run: |
          npm install -g pxt
          npm ci

      - name: Install frontend dependencies (ubuntu)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get install xvfb
          sudo npm install -g pxt
          npm ci

      - name: Update Tauri version in tauri.conf.json (ubuntu & macos)
        if: matrix.platform != 'windows-latest'
        run: |
          # Extract semver version
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/v//; s/^\([0-9]\+\.[0-9]\+\.[0-9]\+\).*$/\1/')

          # Update tauri.conf.json with the new version
          sed -i "s#\"version\": \".*\"#\"version\": \"$VERSION\"#g" src-tauri/tauri.conf.json

      - name: Update Tauri version in tauri.conf.json (windows)
        if: matrix.platform == 'windows-latest'
        run: |
          # Extract semver version
          $version = "${{ github.ref_name }}" -replace '^v(\d+\.\d+\.\d+).*$', '$1'

          # Update tauri.conf.json with the new version
          (Get-Content -Path "src-tauri/tauri.conf.json") -replace '"version": ".*"', "`"version`": `"$version`"" | Set-Content -Path "src-tauri/tauri.conf.json"

      - name: Build the app
        uses: tauri-apps/tauri-action@v0

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
          releaseName: 'MakeCode Calliope mini ${{ github.ref_name }}' # tauri-action replaces \_\_VERSION\_\_ with the app version.
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false